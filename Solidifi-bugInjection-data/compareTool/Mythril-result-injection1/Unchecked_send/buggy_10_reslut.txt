==== Unchecked return value from external call. ====

SWC ID: 104

Severity: Medium

Contract: DocumentSigner

Function name: bug_unchk_send1()

PC address: 1142

Estimated Gas Usage: 963 - 35151

The return value of a message call is not checked.

External calls return a boolean value. If the callee halts with an exception, 'false' is returned and execution continues in the caller. The caller should check whether an exception happened and react accordingly to avoid unexpected behavior. For example it is often desirable to wrap external calls in require() so the transaction is reverted if the call fails.

--------------------

In file: buggy_10.sol:24



msg.sender.send(1 ether)



--------------------

Initial State:



Account: [CREATOR], balance: 0x1, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [SOMEGUY], function: bug_unchk_send11(), txdata: 0x92307e38, value: 0xde0b6b3a7640000



==== Exception State ====

SWC ID: 110

Severity: Medium

Contract: DocumentSigner

Function name: signers(bytes32,uint256)

PC address: 2212

Estimated Gas Usage: 1150 - 1435

An assertion violation was triggered.

It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).

--------------------

In file: buggy_10.sol:12



mapping(bytes32=>address[]) public signers



--------------------

Initial State:



Account: [CREATOR], balance: 0x2800180000000000, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [ATTACKER], function: signers(bytes32,uint256), txdata: 0x9d07635100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0





