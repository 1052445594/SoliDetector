==== Dependence on tx.origin ====

SWC ID: 115

Severity: Low

Contract: ERC223Token

Function name: transferTo_txorigin3(address,uint256,address)

PC address: 691

Estimated Gas Usage: 267 - 362

Use of tx.origin as a part of authorization control.

The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.

--------------------

In file: buggy_12.sol:203



require(tx.origin == owner_txorigin27)



--------------------

Initial State:



Account: [CREATOR], balance: 0x0, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [SOMEGUY], function: transferTo_txorigin27(address,uint256,address), txdata: 0x0ccb9a12000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0



==== Dependence on tx.origin ====

SWC ID: 115

Severity: Low

Contract: ERC223Token

Function name: withdrawAll_txorigin6(address,address)

PC address: 717

Estimated Gas Usage: 268 - 363

Use of tx.origin as a part of authorization control.

The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.

--------------------

In file: buggy_12.sol:172



require(tx.origin == owner_txorigin6)



--------------------

Initial State:



Account: [CREATOR], balance: 0x0, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [SOMEGUY], function: withdrawAll_txorigin6(address,address), txdata: 0x1e65db3c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0



==== Dependence on tx.origin ====

SWC ID: 115

Severity: Low

Contract: ERC223Token

Function name: sendto_txorigin25(address,uint256,address)

PC address: 792

Estimated Gas Usage: 288 - 383

Use of tx.origin as a part of authorization control.

The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.

--------------------

In file: buggy_12.sol:160



require (tx.origin == owner_txorigin1)



--------------------

Initial State:



Account: [CREATOR], balance: 0x0, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [SOMEGUY], function: sendto_txorigin29(address,uint256,address), txdata: 0x76205ec8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0



==== Dependence on tx.origin ====

SWC ID: 115

Severity: Low

Contract: ERC223Token

Function name: bug_txorigin28(address)

PC address: 1416

Estimated Gas Usage: 312 - 407

Use of tx.origin as a part of authorization control.

The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.

--------------------

In file: buggy_12.sol:157



require(tx.origin == owner_txorigin28)



--------------------

Initial State:



Account: [CREATOR], balance: 0x0, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [ATTACKER], function: bug_txorigin28(address), txdata: 0xb8594fd30000000000000000000000000000000000000000000000000000000000000000, value: 0x0



==== Dependence on tx.origin ====

SWC ID: 115

Severity: Low

Contract: Grand

Function name: transferTo_txorigin27(address,uint256,address)

PC address: 1936

Estimated Gas Usage: 311 - 406

Use of tx.origin as a part of authorization control.

The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.

--------------------

In file: buggy_12.sol:384



require(tx.origin == owner_txorigin15)



--------------------

Initial State:



Account: [CREATOR], balance: 0x1, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [CREATOR], function: transferTo_txorigin19(address,uint256,address), txdata: 0x5d7585b8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0



==== Dependence on tx.origin ====

SWC ID: 115

Severity: Low

Contract: Grand

Function name: sendto_txorigin21(address,uint256,address)

PC address: 2000

Estimated Gas Usage: 355 - 450

Use of tx.origin as a part of authorization control.

The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.

--------------------

In file: buggy_12.sol:329



require (tx.origin == owner_txorigin21)



--------------------

Initial State:



Account: [CREATOR], balance: 0x941002000000000, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [SOMEGUY], function: sendto_txorigin1(address,uint256,address), txdata: 0x64acbadd000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0



==== Dependence on tx.origin ====

SWC ID: 115

Severity: Low

Contract: Grand

Function name: withdrawAll_txorigin6(address,address)

PC address: 2081

Estimated Gas Usage: 290 - 385

Use of tx.origin as a part of authorization control.

The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.

--------------------

In file: buggy_12.sol:320



require(tx.origin == owner_txorigin22)



--------------------

Initial State:



Account: [CREATOR], balance: 0x1, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [SOMEGUY], function: withdrawAll_txorigin38(address,address), txdata: 0xbff2792800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0



==== Dependence on tx.origin ====

SWC ID: 115

Severity: Low

Contract: Grand

Function name: getETH(uint256)

PC address: 2164

Estimated Gas Usage: 1118 - 1213

Use of tx.origin as a part of authorization control.

The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.

--------------------

In file: buggy_12.sol:268



require(msg.sender == owner)



--------------------

Initial State:



Account: [CREATOR], balance: 0x4000000000000000, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [SOMEGUY], function: getETH(uint256), txdata: 0x2835b45c0000000000000000000000000000000000000000000000000000000000000000, value: 0x0



==== Dependence on tx.origin ====

SWC ID: 115

Severity: Low

Contract: Grand

Function name: unlock(address)

PC address: 2236

Estimated Gas Usage: 1158 - 1253

Use of tx.origin as a part of authorization control.

The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.

--------------------

In file: buggy_12.sol:268



require(msg.sender == owner)



--------------------

Initial State:



Account: [CREATOR], balance: 0x1, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [CREATOR], function: unlock(address), txdata: 0x2f6c493c0000000000000000000000000000000000000000000000000000000000000000, value: 0x0



==== Dependence on tx.origin ====

SWC ID: 115

Severity: Low

Contract: Grand

Function name: bug_txorigin12(address)

PC address: 2295

Estimated Gas Usage: 270 - 365

Use of tx.origin as a part of authorization control.

The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.

--------------------

In file: buggy_12.sol:376



require(tx.origin == owner_txorigin16)



--------------------

Initial State:



Account: [CREATOR], balance: 0x10000000000000000, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [SOMEGUY], function: bug_txorigin16(address), txdata: 0x3261a0e00000000000000000000000000000000000000000000000000000000000000000, value: 0x0



==== Dependence on tx.origin ====

SWC ID: 115

Severity: Low

Contract: Grand

Function name: changeOwner(address)

PC address: 2449

Estimated Gas Usage: 1180 - 1275

Use of tx.origin as a part of authorization control.

The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.

--------------------

In file: buggy_12.sol:268



require(msg.sender == owner)



--------------------

Initial State:



Account: [CREATOR], balance: 0x10000000000000000, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [SOMEGUY], function: changeOwner(address), txdata: 0xa6f9dae10000000000000000000000000000000000000000000000000000000000000000, value: 0x0



==== Dependence on tx.origin ====

SWC ID: 115

Severity: Low

Contract: Grand

Function name: transferAnyERC20Token(address,uint256)

PC address: 2749

Estimated Gas Usage: 1156 - 1251

Use of tx.origin as a part of authorization control.

The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.

--------------------

In file: buggy_12.sol:268



require(msg.sender == owner)



--------------------

Initial State:



Account: [CREATOR], balance: 0x1, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [ATTACKER], function: transferAnyERC20Token(address,uint256), txdata: 0xdc39d06d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0



==== Dependence on tx.origin ====

SWC ID: 115

Severity: Low

Contract: Grand

Function name: lock(address)

PC address: 2911

Estimated Gas Usage: 1068 - 1163

Use of tx.origin as a part of authorization control.

The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.

--------------------

In file: buggy_12.sol:268



require(msg.sender == owner)



--------------------

Initial State:



Account: [CREATOR], balance: 0x4000000000000000, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [SOMEGUY], function: lock(address), txdata: 0xf435f5a70000000000000000000000000000000000000000000000000000000000000000, value: 0x0





