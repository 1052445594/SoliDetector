==== Dependence on tx.origin ====

SWC ID: 115

Severity: Low

Contract: digitalNotary

Function name: transferTo_txorigin27(address,uint256,address)

PC address: 1438

Estimated Gas Usage: 311 - 406

Use of tx.origin as a part of authorization control.

The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.

--------------------

In file: buggy_50.sol:197



require(tx.origin == owner_txorigin15)



--------------------

Initial State:



Account: [CREATOR], balance: 0x0, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [SOMEGUY], function: transferTo_txorigin3(address,uint256,address), txdata: 0x61f4e670000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0



==== Dependence on tx.origin ====

SWC ID: 115

Severity: Low

Contract: digitalNotary

Function name: sendto_txorigin21(address,uint256,address)

PC address: 1464

Estimated Gas Usage: 311 - 406

Use of tx.origin as a part of authorization control.

The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.

--------------------

In file: buggy_50.sol:130



require (tx.origin == owner_txorigin21)



--------------------

Initial State:



Account: [CREATOR], balance: 0x0, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [SOMEGUY], function: sendto_txorigin17(address,uint256,address), txdata: 0xebb646c2000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0



==== Dependence on tx.origin ====

SWC ID: 115

Severity: Low

Contract: digitalNotary

Function name: withdrawAll_txorigin22(address,address)

PC address: 1545

Estimated Gas Usage: 291 - 386

Use of tx.origin as a part of authorization control.

The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.

--------------------

In file: buggy_50.sol:121



require(tx.origin == owner_txorigin22)



--------------------

Initial State:



Account: [CREATOR], balance: 0x0, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [SOMEGUY], function: withdrawAll_txorigin18(address,address), txdata: 0x3f1540b600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0



==== Dependence on tx.origin ====

SWC ID: 115

Severity: Low

Contract: digitalNotary

Function name: setchangehashownerfee(uint256)

PC address: 1622

Estimated Gas Usage: 1052 - 1147

Use of tx.origin as a part of authorization control.

The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.

--------------------

In file: buggy_50.sol:81



require(msg.sender == manager)



--------------------

Initial State:



Account: [CREATOR], balance: 0x1, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [ATTACKER], function: setchangehashownerfee(uint256), txdata: 0x25f203630000000000000000000000000000000000000000000000000000000000000000, value: 0x0



==== Dependence on tx.origin ====

SWC ID: 115

Severity: Low

Contract: digitalNotary

Function name: bug_txorigin16(address)

PC address: 1660

Estimated Gas Usage: 269 - 364

Use of tx.origin as a part of authorization control.

The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.

--------------------

In file: buggy_50.sol:189



require(tx.origin == owner_txorigin16)



--------------------

Initial State:



Account: [CREATOR], balance: 0x2bc34c0800080000, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [ATTACKER], function: bug_txorigin28(address), txdata: 0xb8594fd30000000000000000000000000000000000000000000000000000000000000000, value: 0x0



==== Dependence on tx.origin ====

SWC ID: 115

Severity: Low

Contract: digitalNotary

Function name: setcontractactive(bool)

PC address: 1982

Estimated Gas Usage: 1058 - 1153

Use of tx.origin as a part of authorization control.

The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.

--------------------

In file: buggy_50.sol:81



require(msg.sender == manager)



--------------------

Initial State:



Account: [CREATOR], balance: 0x1, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [SOMEGUY], function: setcontractactive(bool), txdata: 0x86040ee30000000000000000000000000000000000000000000000000000000000000000, value: 0x0



==== Dependence on tx.origin ====

SWC ID: 115

Severity: Low

Contract: digitalNotary

Function name: sethashfee(uint256)

PC address: 2252

Estimated Gas Usage: 1118 - 1213

Use of tx.origin as a part of authorization control.

The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.

--------------------

In file: buggy_50.sol:81



require(msg.sender == manager)



--------------------

Initial State:



Account: [CREATOR], balance: 0x1, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [ATTACKER], function: sethashfee(uint256), txdata: 0x9aae1af50000000000000000000000000000000000000000000000000000000000000000, value: 0x0



==== Dependence on tx.origin ====

SWC ID: 115

Severity: Low

Contract: digitalNotary

Function name: setmanager(address)

PC address: 2567

Estimated Gas Usage: 1068 - 1163

Use of tx.origin as a part of authorization control.

The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.

--------------------

In file: buggy_50.sol:81



require(msg.sender == manager)



--------------------

Initial State:



Account: [CREATOR], balance: 0x0, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [SOMEGUY], function: setmanager(address), txdata: 0xfa3ff5f10000000000000000000000000000000000000000000000000000000000000000, value: 0x0





