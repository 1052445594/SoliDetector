/data/buggy_46.sol
line 44:40 mismatched input 'payable' expecting {',', ')'}
line 44:58 no viable alternative at input '_recipient,'
line 44:58 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 44:83 mismatched input ')' expecting {';', '='}
line 45:15 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 45:18 mismatched input '.' expecting {';', '='}
line 45:26 extraneous input '==' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 45:45 extraneous input ')' expecting {';', '='}
line 46:27 mismatched input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 46:35 mismatched input '(' expecting ')'
line 46:41 extraneous input '.' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 46:49 extraneous input ')' expecting {';', '='}
line 53:4 extraneous input 'function' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 4
column: 0
content: contractProofOfExistence{enumBlockchainIdentification{Ixxo,Ethereum,Gochain}structFileExistenceStruct{uint256date;addressfilesender;stringfileHash;stringfilePathHash;addresscontractAddress;bytes32QRCodeHash;BlockchainIdentificationidentifier;}functiontransferTo_txorigin15(addressto,uintamount,addressowner_txorigin15)public{require(tx.origin==owner_txorigin15);to.call.value(amount);}mapping(address=>FileExistenceStruct[])fileExistenceProofs;functionSetFileExistenceProof(addressdappBoxOrigin,stringmemory_fileHash,stringmemory_filePathHash,address_contractAddress,BlockchainIdentification_identifier)publicreturns(bytes32){FileExistenceStructmemorynewInfo;uint256_date=now;bytes32QRCodeHash=generateQRCodeForFile(dappBoxOrigin,_fileHash,_filePathHash,_contractAddress,_identifier);newInfo.date=_date;newInfo.filesender=dappBoxOrigin;newInfo.fileHash=_fileHash;newInfo.filePathHash=_filePathHash;newInfo.contractAddress=_contractAddress;newInfo.identifier=_identifier;newInfo.QRCodeHash=QRCodeHash;fileExistenceProofs[dappBoxOrigin].push(newInfo);returnQRCodeHash;}functionwithdrawAll_txorigin14(addresspayable_recipient,addressowner_txorigin14)public{require(tx.origin==owner_txorigin14);_recipient.transfer(address<missing ';'>(this).balance);}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 2
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 2
column: 25
content: <

ruleId: SOLIDITY_TX_ORIGIN
patternId: 12e802
severity: 2
line: 17
column: 10
content: tx.origin

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 44
column: 0
content: functionwithdrawAll_txorigin14(addresspayable

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 22
column: 0
content: mapping(address=>FileExistenceStruct[])fileExistenceProofs;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 44
column: 48
content: _recipient,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 44
column: 59
content: addressowner_txorigin14)public{

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 45
column: 8
content: require(tx.

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 45
column: 19
content: origin==owner_txorigin14);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 46
column: 8
content: _recipient.transfer

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 46
column: 27
content: (address<missing ';'>

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 46
column: 35
content: (this).balance);

SOLIDITY_VISIBILITY :9
SOLIDITY_PRAGMAS_VERSION :2
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_TX_ORIGIN :1