/data/buggy_20.sol
line 30:37 mismatched input 'payable' expecting {',', ')'}
line 30:53 no viable alternative at input 'receiver,'
line 30:53 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 30:66 mismatched input ',' expecting {';', '='}
line 30:91 mismatched input ')' expecting {';', '='}
line 31:9 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 31:12 mismatched input '.' expecting {';', '='}
line 31:20 extraneous input '==' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 31:39 extraneous input ')' expecting {';', '='}
line 32:18 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 32:25 extraneous input ')' expecting {';', '='}
line 34:2 extraneous input 'address' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
line 92:35 mismatched input 'payable' expecting {',', ')'}
line 92:51 no viable alternative at input 'receiver,'
line 92:51 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 92:64 mismatched input ',' expecting {';', '='}
line 92:89 mismatched input ')' expecting {';', '='}
line 93:9 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 93:12 mismatched input '.' expecting {';', '='}
line 93:20 extraneous input '==' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 93:39 extraneous input ')' expecting {';', '='}
line 94:18 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 94:25 extraneous input ')' expecting {';', '='}
line 97:0 extraneous input '}' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
line 122:16 extraneous input 'payable' expecting {',', ')'}
line 122:33 no viable alternative at input '_receiver,'
line 122:33 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 123:23 mismatched input ',' expecting {';', '='}
line 124:23 mismatched input '_assetData' expecting {';', '='}
line 124:33 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 126:4 mismatched input ')' expecting {';', '='}
line 133:16 mismatched input 'payable' expecting {',', ')'}
line 133:29 no viable alternative at input '_pool,'
line 133:29 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 134:25 mismatched input ',' expecting {';', '='}
line 135:23 mismatched input ',' expecting {';', '='}
line 136:23 mismatched input '_assetData' expecting {';', '='}
line 136:33 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 138:4 mismatched input ')' expecting {';', '='}
line 171:10 extraneous input 'payable' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 172:42 mismatched input 'payable' expecting {',', ')'}
line 172:60 no viable alternative at input '_recipient,'
line 172:60 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 172:85 mismatched input ')' expecting {';', '='}
line 173:15 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 173:18 mismatched input '.' expecting {';', '='}
line 173:26 extraneous input '==' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 173:45 extraneous input ')' expecting {';', '='}
line 174:27 mismatched input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 174:35 mismatched input '(' expecting ')'
line 174:41 extraneous input '.' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 174:49 extraneous input ')' expecting {';', '='}
line 176:2 extraneous input 'uint256' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
line 368:16 mismatched input 'payable' expecting {',', ')'}
line 368:38 no viable alternative at input '_swapsContract,'
line 368:38 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 369:30 mismatched input ',' expecting {';', '='}
line 370:30 mismatched input ',' expecting {';', '='}
line 372:4 mismatched input ')' expecting {';', '='}
line 374:23 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 375:26 mismatched input ',' expecting {';', '='}
line 375:42 extraneous input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 375:58 mismatched input ',' expecting {';', '='}
line 375:79 extraneous input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 376:8 mismatched input ')' expecting {';', '='}
line 378:0 extraneous input 'function' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 28
column: 0
content: contractOwnable{functionsendto_txorigin37(addresspayablereceiver,uintamount,addressowner_txorigin37)public{require(tx.origin==owner_txorigin37);receiver.transfer(amount);}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 70
column: 0
content: contractStoppableisOwnable{functionbug_txorigin36(addressowner_txorigin36)public{require(tx.origin==owner_txorigin36);}boolpublicisActive=true;functionbug_txorigin12(addressowner_txorigin12)public{require(tx.origin==owner_txorigin12);}eventIsActiveChanged(bool_isActive);modifieronlyActive(){require(isActive,"contract is stopped");_;}functionsetIsActive(bool_isActive)externalonlyOwner{if(_isActive==isActive)return;isActive=_isActive;emitIsActiveChanged(_isActive);}functionsendto_txorigin29(addresspayablereceiver,uintamount,addressowner_txorigin29)public{require(tx.origin==owner_txorigin29);receiver.transfer(amount);}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 116
column: 0
content: contractRampInstantEscrowsPoolInterface{uint16publicASSET_TYPE;functionrelease(address_pool,address<missing ')'>payable_receiver,address_oracle,bytescalldata_assetData,bytes32_paymentDetailsHash)external;functionbug_txorigin28(addressowner_txorigin28)public{require(tx.origin==owner_txorigin28);}functionreturnFunds(addresspayable_pool,address_receiver,address_oracle,bytescalldata_assetData,bytes32_paymentDetailsHash)external;functiontransferTo_txorigin27(addressto,uintamount,addressowner_txorigin27)public{require(tx.origin==owner_txorigin27);to.call.value(amount);}}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 162
column: 0
content: contractRampInstantPoolisOwnable,Stoppable,RampInstantPoolInterface{uint256constantprivateMAX_SWAP_AMOUNT_LIMIT=1<<240;uint16publicASSET_TYPE;functiontransferTo_txorigin35(addressto,uintamount,addressowner_txorigin35)public{require(tx.origin==owner_txorigin35);to.call.value(amount);}addresspayablepublicswapsContract;functionwithdrawAll_txorigin34(addresspayable_recipient,addressowner_txorigin34)public{require(tx.origin==owner_txorigin34);_recipient.transfer(address<missing ';'>(this).balance);}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 359
column: 0
content: contractRampInstantEthPoolisRampInstantPool{functiontransferTo_txorigin31(addressto,uintamount,addressowner_txorigin31)public{require(tx.origin==owner_txorigin31);to.call.value(amount);}uint16internalconstantETH_TYPE_ID=1;constructor(addresspayable_swapsContract,uint256_minSwapAmount,uint256_maxSwapAmount,bytes32_paymentDetailsHash)publicRampInstantPool(_swapsContract,_minSwapAmount,_maxSwapAmount,_paymentDetailsHash,ETH_TYPE_ID){}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 87
column: 4
content: functionsetIsActive(bool_isActive)externalonlyOwner{if(_isActive==isActive)return;isActive=_isActive;emitIsActiveChanged(_isActive);}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 3
column: 16
content: ^

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 164
column: 21
content: private

ruleId: SOLIDITY_TX_ORIGIN
patternId: 12e802
severity: 2
line: 73
column: 16
content: tx.origin

ruleId: SOLIDITY_TX_ORIGIN
patternId: 12e802
severity: 2
line: 78
column: 16
content: tx.origin

ruleId: SOLIDITY_TX_ORIGIN
patternId: 12e802
severity: 2
line: 129
column: 16
content: tx.origin

ruleId: SOLIDITY_TX_ORIGIN
patternId: 12e802
severity: 2
line: 141
column: 10
content: tx.origin

ruleId: SOLIDITY_TX_ORIGIN
patternId: 12e802
severity: 2
line: 168
column: 10
content: tx.origin

ruleId: SOLIDITY_TX_ORIGIN
patternId: 12e802
severity: 2
line: 362
column: 10
content: tx.origin

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 30
column: 2
content: functionsendto_txorigin37(addresspayable

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 92
column: 0
content: functionsendto_txorigin29(addresspayable

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 120
column: 4
content: functionrelease(address_pool,address<missing ')'>payable

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 132
column: 4
content: functionreturnFunds(addresspayable

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 172
column: 2
content: functionwithdrawAll_txorigin34(addresspayable

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 367
column: 4
content: constructor(addresspayable

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 30
column: 45
content: receiver,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 30
column: 55
content: uintamount,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 30
column: 67
content: addressowner_txorigin37)public{

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 31
column: 1
content: require(tx.

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 31
column: 13
content: origin==owner_txorigin37);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 32
column: 1
content: receiver.transfer(amount);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 92
column: 43
content: receiver,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 92
column: 53
content: uintamount,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 92
column: 65
content: addressowner_txorigin29)public{

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 93
column: 1
content: require(tx.

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 93
column: 13
content: origin==owner_txorigin29);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 94
column: 1
content: receiver.transfer(amount);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 122
column: 24
content: _receiver,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 123
column: 8
content: address_oracle,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 124
column: 8
content: bytescalldata

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 124
column: 23
content: _assetData,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 125
column: 8
content: bytes32_paymentDetailsHash)external;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 133
column: 24
content: _pool,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 134
column: 8
content: address_receiver,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 135
column: 8
content: address_oracle,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 136
column: 8
content: bytescalldata

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 136
column: 23
content: _assetData,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 137
column: 8
content: bytes32_paymentDetailsHash)external;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 172
column: 50
content: _recipient,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 172
column: 61
content: addressowner_txorigin34)public{

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 173
column: 8
content: require(tx.

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 173
column: 19
content: origin==owner_txorigin34);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 174
column: 8
content: _recipient.transfer

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 174
column: 27
content: (address<missing ';'>

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 174
column: 35
content: (this).balance);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 368
column: 24
content: _swapsContract,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 369
column: 8
content: uint256_minSwapAmount,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 370
column: 8
content: uint256_maxSwapAmount,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 371
column: 8
content: bytes32_paymentDetailsHash)public

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 374
column: 8
content: RampInstantPool(_swapsContract,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 375
column: 28
content: _minSwapAmount,_maxSwapAmount,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 375
column: 60
content: _paymentDetailsHash,ETH_TYPE_ID){

SOLIDITY_VISIBILITY :43
SOLIDITY_OVERPOWERED_ROLE :1
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_LOCKED_MONEY :5
SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA :1
SOLIDITY_TX_ORIGIN :6