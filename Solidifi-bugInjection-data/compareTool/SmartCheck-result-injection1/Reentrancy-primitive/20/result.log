/data/20.sol
line 96:16 extraneous input 'payable' expecting {',', ')'}
line 96:33 no viable alternative at input '_receiver,'
line 96:33 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 97:23 mismatched input ',' expecting {';', '='}
line 98:23 mismatched input '_assetData' expecting {';', '='}
line 98:33 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 100:4 mismatched input ')' expecting {';', '='}
line 104:16 mismatched input 'payable' expecting {',', ')'}
line 104:29 no viable alternative at input '_pool,'
line 104:29 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 105:25 mismatched input ',' expecting {';', '='}
line 106:23 mismatched input ',' expecting {';', '='}
line 107:23 mismatched input '_assetData' expecting {';', '='}
line 107:33 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 109:4 mismatched input ')' expecting {';', '='}
line 134:12 extraneous input 'payable' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 149:16 mismatched input 'payable' expecting {',', ')'}
line 149:38 no viable alternative at input '_swapsContract,'
line 149:38 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 150:30 mismatched input ',' expecting {';', '='}
line 151:30 mismatched input ',' expecting {';', '='}
line 152:35 mismatched input ',' expecting {';', '='}
line 154:4 mismatched input ')' expecting {';', '='}
line 156:22 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 156:37 mismatched input ',' expecting {';', '='}
line 156:53 extraneous input ')' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 157:29 mismatched input '(' expecting {';', '='}
line 157:44 mismatched input ',' expecting ')'
line 157:56 mismatched input ')' expecting {';', '='}
line 159:22 extraneous input '=' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 160:27 extraneous input '=' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 161:22 extraneous input '=' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 162:22 extraneous input '=' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 163:19 extraneous input '=' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 166:4 extraneous input 'function' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
line 270:16 mismatched input 'payable' expecting {',', ')'}
line 270:38 no viable alternative at input '_swapsContract,'
line 270:38 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 271:30 mismatched input ',' expecting {';', '='}
line 272:30 mismatched input ',' expecting {';', '='}
line 274:4 mismatched input ')' expecting {';', '='}
line 276:23 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 277:26 mismatched input ',' expecting {';', '='}
line 277:42 extraneous input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 277:58 mismatched input ',' expecting {';', '='}
line 277:79 extraneous input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 278:8 mismatched input ')' expecting {';', '='}
line 281:4 extraneous input 'function' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 90
column: 0
content: contractRampInstantEscrowsPoolInterface{uint16publicASSET_TYPE;functionrelease(address_pool,address<missing ')'>payable_receiver,address_oracle,bytescalldata_assetData,bytes32_paymentDetailsHash)external;functionreturnFunds(addresspayable_pool,address_receiver,address_oracle,bytescalldata_assetData,bytes32_paymentDetailsHash)external;}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 129
column: 0
content: contractRampInstantPoolisOwnable,Stoppable,RampInstantPoolInterface{uint256constantprivateMAX_SWAP_AMOUNT_LIMIT=1<<240;uint16publicASSET_TYPE;addresspayablepublicswapsContract;uint256publicminSwapAmount;uint256publicmaxSwapAmount;bytes32publicpaymentDetailsHash;eventReceivedFunds(address_from,uint256_amount);eventLimitsChanged(uint256_minAmount,uint256_maxAmount);eventSwapsContractChanged(address_oldAddress,address_newAddress);constructor(addresspayable_swapsContract,uint256_minSwapAmount,uint256_maxSwapAmount,bytes32_paymentDetailsHash,uint16_assetType)publicvalidateLimits(_minSwapAmount,_maxSwapAmount)validateSwapsContract(_swapsContract,_assetType){swapsContract=_swapsContract;paymentDetailsHash=_paymentDetailsHash;minSwapAmount=_minSwapAmount;maxSwapAmount=_maxSwapAmount;ASSET_TYPE=_assetType;}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 265
column: 0
content: contractRampInstantEthPoolisRampInstantPool{uint16internalconstantETH_TYPE_ID=1;constructor(addresspayable_swapsContract,uint256_minSwapAmount,uint256_maxSwapAmount,bytes32_paymentDetailsHash)publicRampInstantPool(_swapsContract,_minSwapAmount,_maxSwapAmount,_paymentDetailsHash,ETH_TYPE_ID){}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 65
column: 4
content: functionsetIsActive(bool_isActive)externalonlyOwner{if(_isActive==isActive)return;isActive=_isActive;emitIsActiveChanged(_isActive);}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 3
column: 16
content: ^

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 131
column: 21
content: private

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 94
column: 4
content: functionrelease(address_pool,address<missing ')'>payable

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 103
column: 4
content: functionreturnFunds(addresspayable

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 148
column: 4
content: constructor(addresspayable

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 269
column: 4
content: constructor(addresspayable

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 96
column: 24
content: _receiver,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 97
column: 8
content: address_oracle,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 98
column: 8
content: bytescalldata

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 98
column: 23
content: _assetData,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 99
column: 8
content: bytes32_paymentDetailsHash)external;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 104
column: 24
content: _pool,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 105
column: 8
content: address_receiver,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 106
column: 8
content: address_oracle,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 107
column: 8
content: bytescalldata

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 107
column: 23
content: _assetData,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 108
column: 8
content: bytes32_paymentDetailsHash)external;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 149
column: 24
content: _swapsContract,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 150
column: 8
content: uint256_minSwapAmount,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 151
column: 8
content: uint256_maxSwapAmount,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 152
column: 8
content: bytes32_paymentDetailsHash,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 153
column: 8
content: uint16_assetType)public

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 156
column: 8
content: validateLimits(_minSwapAmount,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 156
column: 39
content: _maxSwapAmount)validateSwapsContract

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 157
column: 29
content: (_swapsContract,_assetType){

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 159
column: 8
content: swapsContract=_swapsContract;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 160
column: 8
content: paymentDetailsHash=_paymentDetailsHash;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 161
column: 8
content: minSwapAmount=_minSwapAmount;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 162
column: 8
content: maxSwapAmount=_maxSwapAmount;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 163
column: 8
content: ASSET_TYPE=_assetType;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 270
column: 24
content: _swapsContract,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 271
column: 8
content: uint256_minSwapAmount,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 272
column: 8
content: uint256_maxSwapAmount,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 273
column: 8
content: bytes32_paymentDetailsHash)public

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 276
column: 8
content: RampInstantPool(_swapsContract,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 277
column: 28
content: _minSwapAmount,_maxSwapAmount,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 277
column: 60
content: _paymentDetailsHash,ETH_TYPE_ID){

SOLIDITY_VISIBILITY :35
SOLIDITY_OVERPOWERED_ROLE :1
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_LOCKED_MONEY :3
SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA :1