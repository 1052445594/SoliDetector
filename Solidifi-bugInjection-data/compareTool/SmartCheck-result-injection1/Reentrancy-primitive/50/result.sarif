{
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "SmartCheck",
          "fullDescription": {
            "text": "Securify automatically checks for vulnerabilities and bad coding practices. It runs lexical and syntactical analysis on Solidity source code."
          },
          "informationUri": "https://tool.smartdec.net/",
          "rules": [
            {
              "id": "Other_19",
              "name": "OtherVulnerability",
              "shortDescription": {
                "text": "SOLIDITY_LOCKED_MONEY"
              }
            },
            {
              "id": "Ignore_28",
              "name": "IgnoreVulnerability",
              "shortDescription": {
                "text": "SOLIDITY_PRAGMAS_VERSION"
              }
            },
            {
              "id": "Ignore_29",
              "name": "IgnoreVulnerability",
              "shortDescription": {
                "text": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA"
              }
            },
            {
              "id": "Ignore_38",
              "name": "IgnoreVulnerability",
              "shortDescription": {
                "text": "SOLIDITY_VISIBILITY"
              }
            }
          ],
          "version": "0.0.12"
        }
      },
      "artifacts": [
        {
          "location": {
            "uri": "/Sol/50.sol"
          },
          "sourceLanguage": "Solidity"
        }
      ],
      "logicalLocations": [
        {
          "kind": "contract",
          "name": "50"
        }
      ],
      "results": [
        {
          "message": {
            "text": "SOLIDITY_LOCKED_MONEY"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/Sol/50.sol"
                },
                "region": {
                  "snippet": {
                    "text": "contractdigitalNotary{addresspayableprivatemanager;boolprivatecontractactive;uintprivatehashfee;uintprivatechangehashownerfee;structHashRegistration{addressowner;uintregistrationtime;}mapping(bytes32=>HashRegistration[])HashList;uintprivateHashListLength;eventRegisterHashEvent(addressindexedmsgsender,bytes32indexedhash,uinttimestamp);eventChangeHashOwnershipEvent(addressindexedmsgsender,addressindexednewowner,bytes32indexedhash,uinttimestamp);constructor()public{manager=msg.sender;contractactive=true;hashfee=5000000000000000;changehashownerfee=25000000000000000;HashListLength=0;}modifieronlyManager(){require(msg.sender==manager);_;}functiongethashfee()externalviewreturns(uint){returnhashfee;}functionsethashfee(uintnewfee)externalonlyManager{require(newfee>=0);hashfee=newfee;}functiongetchangehashownerfee()externalviewreturns(uint){returnchangehashownerfee;}functionsetchangehashownerfee(uintnewfee)externalonlyManager{require(newfee>=0);changehashownerfee=newfee;}functiongetcontractactive()externalviewreturns(bool){returncontractactive;}functionsetcontractactive(boolcontactive)externalonlyManager{contractactive=contactive;}functiongetmanager()externalviewreturns(address){returnmanager;}functionsetmanager(addresspayablenewmngr)externalonlyManager{require(newmngr.balance>0);manager=newmngr;}"
                  },
                  "startColumn": 0,
                  "startLine": 4
                }
              }
            }
          ],
          "ruleId": "Other_19"
        },
        {
          "message": {
            "text": "SOLIDITY_PRAGMAS_VERSION"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/Sol/50.sol"
                },
                "region": {
                  "snippet": {
                    "text": "^"
                  },
                  "startColumn": 16,
                  "startLine": 2
                }
              }
            }
          ],
          "ruleId": "Ignore_28"
        },
        {
          "message": {
            "text": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/Sol/50.sol"
                },
                "region": {
                  "snippet": {
                    "text": "private"
                  },
                  "startColumn": 20,
                  "startLine": 7
                }
              }
            }
          ],
          "ruleId": "Ignore_29"
        },
        {
          "message": {
            "text": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/Sol/50.sol"
                },
                "region": {
                  "snippet": {
                    "text": "private"
                  },
                  "startColumn": 9,
                  "startLine": 9
                }
              }
            }
          ],
          "ruleId": "Ignore_29"
        },
        {
          "message": {
            "text": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/Sol/50.sol"
                },
                "region": {
                  "snippet": {
                    "text": "private"
                  },
                  "startColumn": 9,
                  "startLine": 11
                }
              }
            }
          ],
          "ruleId": "Ignore_29"
        },
        {
          "message": {
            "text": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/Sol/50.sol"
                },
                "region": {
                  "snippet": {
                    "text": "private"
                  },
                  "startColumn": 9,
                  "startLine": 13
                }
              }
            }
          ],
          "ruleId": "Ignore_29"
        },
        {
          "message": {
            "text": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/Sol/50.sol"
                },
                "region": {
                  "snippet": {
                    "text": "private"
                  },
                  "startColumn": 9,
                  "startLine": 23
                }
              }
            }
          ],
          "ruleId": "Ignore_29"
        },
        {
          "message": {
            "text": "SOLIDITY_VISIBILITY"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/Sol/50.sol"
                },
                "region": {
                  "snippet": {
                    "text": "functionsetmanager(addresspayable"
                  },
                  "startColumn": 4,
                  "startLine": 90
                }
              }
            }
          ],
          "ruleId": "Ignore_38"
        },
        {
          "message": {
            "text": "SOLIDITY_VISIBILITY"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/Sol/50.sol"
                },
                "region": {
                  "snippet": {
                    "text": "mapping(bytes32=>HashRegistration[])HashList;"
                  },
                  "startColumn": 4,
                  "startLine": 21
                }
              }
            }
          ],
          "ruleId": "Ignore_38"
        },
        {
          "message": {
            "text": "SOLIDITY_VISIBILITY"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/Sol/50.sol"
                },
                "region": {
                  "snippet": {
                    "text": "require(newmngr."
                  },
                  "startColumn": 8,
                  "startLine": 92
                }
              }
            }
          ],
          "ruleId": "Ignore_38"
        },
        {
          "message": {
            "text": "SOLIDITY_VISIBILITY"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/Sol/50.sol"
                },
                "region": {
                  "snippet": {
                    "text": "balance>0);"
                  },
                  "startColumn": 24,
                  "startLine": 92
                }
              }
            }
          ],
          "ruleId": "Ignore_38"
        },
        {
          "message": {
            "text": "SOLIDITY_VISIBILITY"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/Sol/50.sol"
                },
                "region": {
                  "snippet": {
                    "text": "manager=newmngr;"
                  },
                  "startColumn": 8,
                  "startLine": 93
                }
              }
            }
          ],
          "ruleId": "Ignore_38"
        }
      ]
    }
  ],
  "version": "2.1.0",
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json"
}