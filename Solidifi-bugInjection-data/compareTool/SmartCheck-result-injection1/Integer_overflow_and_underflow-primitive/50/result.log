/data/50.sol
line 7:12 extraneous input 'payable' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 90:32 mismatched input 'payable' expecting {',', ')'}
line 90:47 no viable alternative at input 'newmngr)'
line 90:47 extraneous input ')' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 91:4 mismatched input '{' expecting {';', '='}
line 92:15 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 92:23 mismatched input '.' expecting {';', '='}
line 92:32 mismatched input '>' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 93:16 extraneous input '=' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 96:4 extraneous input 'function' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 4
column: 0
content: contractdigitalNotary{addresspayableprivatemanager;boolprivatecontractactive;uintprivatehashfee;uintprivatechangehashownerfee;structHashRegistration{addressowner;uintregistrationtime;}mapping(bytes32=>HashRegistration[])HashList;uintprivateHashListLength;eventRegisterHashEvent(addressindexedmsgsender,bytes32indexedhash,uinttimestamp);eventChangeHashOwnershipEvent(addressindexedmsgsender,addressindexednewowner,bytes32indexedhash,uinttimestamp);constructor()public{manager=msg.sender;contractactive=true;hashfee=5000000000000000;changehashownerfee=25000000000000000;HashListLength=0;}modifieronlyManager(){require(msg.sender==manager);_;}functiongethashfee()externalviewreturns(uint){returnhashfee;}functionsethashfee(uintnewfee)externalonlyManager{require(newfee>=0);hashfee=newfee;}functiongetchangehashownerfee()externalviewreturns(uint){returnchangehashownerfee;}functionsetchangehashownerfee(uintnewfee)externalonlyManager{require(newfee>=0);changehashownerfee=newfee;}functiongetcontractactive()externalviewreturns(bool){returncontractactive;}functionsetcontractactive(boolcontactive)externalonlyManager{contractactive=contactive;}functiongetmanager()externalviewreturns(address){returnmanager;}functionsetmanager(addresspayablenewmngr)externalonlyManager{require(newmngr.balance>0);manager=newmngr;}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 2
column: 16
content: ^

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 7
column: 20
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 9
column: 9
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 11
column: 9
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 13
column: 9
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 23
column: 9
content: private

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 90
column: 4
content: functionsetmanager(addresspayable

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 21
column: 4
content: mapping(bytes32=>HashRegistration[])HashList;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 92
column: 8
content: require(newmngr.

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 92
column: 24
content: balance>0);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 93
column: 8
content: manager=newmngr;

SOLIDITY_VISIBILITY :5
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA :5