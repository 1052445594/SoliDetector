==== Unchecked return value from external call. ====

SWC ID: 104

Severity: Medium

Contract: Owned

Function name: UncheckedExternalCall_unchk40()

PC address: 423

Estimated Gas Usage: 909 - 35097

The return value of a message call is not checked.

External calls return a boolean value. If the callee halts with an exception, 'false' is returned and execution continues in the caller. The caller should check whether an exception happened and react accordingly to avoid unexpected behavior. For example it is often desirable to wrap external calls in require() so the transaction is reverted if the call fails.

--------------------

In file: buggy_37.sol:119



addr_unchk40.send (2 ether)



--------------------

Initial State:



Account: [CREATOR], balance: 0x1, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [CREATOR], function: transferOwnership(address), txdata: 0xf2fde38b0000000000000000000000000000000000000000000000000000000000000000, value: 0x0

Caller: [SOMEGUY], function: UncheckedExternalCall_unchk40(), txdata: 0x216ea3a2, value: 0x0



==== Unchecked return value from external call. ====

SWC ID: 104

Severity: Medium

Contract: Owned

Function name: bug_unchk_send22()

PC address: 458

Estimated Gas Usage: 919 - 35107

The return value of a message call is not checked.

External calls return a boolean value. If the callee halts with an exception, 'false' is returned and execution continues in the caller. The caller should check whether an exception happened and react accordingly to avoid unexpected behavior. For example it is often desirable to wrap external calls in require() so the transaction is reverted if the call fails.

--------------------

In file: buggy_37.sol:147



msg.sender.send(1 ether)



--------------------

Initial State:



Account: [CREATOR], balance: 0x1, nonce:0, storage:{}

Account: [ATTACKER], balance: 0xe00000000000000, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [CREATOR], function: transferOwnership(address), txdata: 0xf2fde38b0000000000000000000000000000000000000000000000000000000000000000, value: 0x0

Caller: [ATTACKER], function: bug_unchk_send22(), txdata: 0x788913ab, value: 0xde0b6b3a7640000



==== Unchecked return value from external call. ====

SWC ID: 104

Severity: Medium

Contract: SafeMath

Function name: bug_unchk_send31()

PC address: 492

Estimated Gas Usage: 941 - 35129

The return value of a message call is not checked.

External calls return a boolean value. If the callee halts with an exception, 'false' is returned and execution continues in the caller. The caller should check whether an exception happened and react accordingly to avoid unexpected behavior. For example it is often desirable to wrap external calls in require() so the transaction is reverted if the call fails.

--------------------

In file: buggy_37.sol:39



msg.sender.send(1 ether)



--------------------

Initial State:



Account: [CREATOR], balance: 0x80000, nonce:0, storage:{}

Account: [ATTACKER], balance: 0xe00d03b07644000, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [ATTACKER], function: bug_unchk_send31(), txdata: 0xafcccbb4, value: 0xde0b6b3a7640000

Caller: [SOMEGUY], function: bug_unchk_send31(), txdata: 0xafcccbb4, value: 0xde0b6b3a7640000



==== Unchecked return value from external call. ====

SWC ID: 104

Severity: Medium

Contract: AugustCoin

Function name: bug_unchk_send17()

PC address: 2480

Estimated Gas Usage: 1006 - 35194

The return value of a message call is not checked.

External calls return a boolean value. If the callee halts with an exception, 'false' is returned and execution continues in the caller. The caller should check whether an exception happened and react accordingly to avoid unexpected behavior. For example it is often desirable to wrap external calls in require() so the transaction is reverted if the call fails.

--------------------

In file: buggy_37.sol:274



msg.sender.send(1 ether)



--------------------

Initial State:



Account: [CREATOR], balance: 0x40006400143077104, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [SOMEGUY], function: bug_unchk_send19(), txdata: 0xf5bfa0b2, value: 0xde0b6b3a7640000



==== Integer Arithmetic Bugs ====

SWC ID: 101

Severity: High

Contract: AugustCoin

Function name: name()

PC address: 2512

Estimated Gas Usage: 2413 - 4154

The arithmetic operator can overflow.

It is possible to cause an integer overflow or underflow in the arithmetic operation. 

--------------------

In file: buggy_37.sol:184



string public  name



--------------------

Initial State:



Account: [CREATOR], balance: 0x0, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [SOMEGUY], function: name(), txdata: 0x06fdde03, value: 0x0



==== Unchecked return value from external call. ====

SWC ID: 104

Severity: Medium

Contract: AugustCoin

Function name: UncheckedExternalCall_unchk40()

PC address: 2906

Estimated Gas Usage: 977 - 35165

The return value of a message call is not checked.

External calls return a boolean value. If the callee halts with an exception, 'false' is returned and execution continues in the caller. The caller should check whether an exception happened and react accordingly to avoid unexpected behavior. For example it is often desirable to wrap external calls in require() so the transaction is reverted if the call fails.

--------------------

In file: buggy_37.sol:119



addr_unchk40.send (2 ether)



--------------------

Initial State:



Account: [CREATOR], balance: 0x0, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [SOMEGUY], function: UncheckedExternalCall_unchk40(), txdata: 0x216ea3a2, value: 0x0



==== External Call To User-Supplied Address ====

SWC ID: 107

Severity: Low

Contract: AugustCoin

Function name: my_func_uncheck36(address)

PC address: 3295

Estimated Gas Usage: 1195 - 35666

A call to a user-supplied address is executed.

An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.

--------------------

In file: buggy_37.sol:190



dst.call.value(msg.value)("")



--------------------

Initial State:



Account: [CREATOR], balance: 0x0, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [SOMEGUY], function: my_func_uncheck12(address), txdata: 0xde7df662000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0



==== Unchecked return value from external call. ====

SWC ID: 104

Severity: Medium

Contract: AugustCoin

Function name: my_func_uncheck36(address)

PC address: 3295

Estimated Gas Usage: 1195 - 35666

The return value of a message call is not checked.

External calls return a boolean value. If the callee halts with an exception, 'false' is returned and execution continues in the caller. The caller should check whether an exception happened and react accordingly to avoid unexpected behavior. For example it is often desirable to wrap external calls in require() so the transaction is reverted if the call fails.

--------------------

In file: buggy_37.sol:190



dst.call.value(msg.value)("")



--------------------

Initial State:



Account: [CREATOR], balance: 0x0, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [CREATOR], function: my_func_uncheck12(address), txdata: 0xde7df6620000000000000000000000000000000000000000000000000000000000000000, value: 0x0



==== Unchecked return value from external call. ====

SWC ID: 104

Severity: Medium

Contract: AugustCoin

Function name: my_func_unchk35(address)

PC address: 3578

Estimated Gas Usage: 1029 - 35217

The return value of a message call is not checked.

External calls return a boolean value. If the callee halts with an exception, 'false' is returned and execution continues in the caller. The caller should check whether an exception happened and react accordingly to avoid unexpected behavior. For example it is often desirable to wrap external calls in require() so the transaction is reverted if the call fails.

--------------------

In file: buggy_37.sol:195



dst.send(msg.value)



--------------------

Initial State:



Account: [CREATOR], balance: 0x1842808000492c06, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x40000000000000000, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [ATTACKER], function: my_func_unchk35(address), txdata: 0x8bd3d0d70000000000000000000000000000000000000000000000000000000000000000, value: 0x0



==== Integer Arithmetic Bugs ====

SWC ID: 101

Severity: High

Contract: AugustCoin

Function name: symbol()

PC address: 3624

Estimated Gas Usage: 2449 - 4190

The arithmetic operator can overflow.

It is possible to cause an integer overflow or underflow in the arithmetic operation. 

--------------------

In file: buggy_37.sol:180



string public symbol



--------------------

Initial State:



Account: [CREATOR], balance: 0x0, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [SOMEGUY], function: symbol(), txdata: 0x95d89b41, value: 0x0



==== External Call To User-Supplied Address ====

SWC ID: 107

Severity: Low

Contract: AugustCoin

Function name: approveAndCall(address,uint256,bytes)

PC address: 4202

Estimated Gas Usage: 9471 - 69282

A call to a user-supplied address is executed.

An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.

--------------------

In file: buggy_37.sol:318



ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data)



--------------------

Initial State:



Account: [CREATOR], balance: 0xa, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [CREATOR], function: approveAndCall(address,uint256,bytes), txdata: 0xcae9ca51000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0000000000000000000000000000000000000000000000000000000000000021000000000000000000000000000000000000000000000000000000000000002000, value: 0x0



==== External Call To User-Supplied Address ====

SWC ID: 107

Severity: Low

Contract: AugustCoin

Function name: transferAnyERC20Token(address,uint256)

PC address: 4395

Estimated Gas Usage: 3663 - 38696

A call to a user-supplied address is executed.

An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.

--------------------

In file: buggy_37.sol:341



ERC20Interface(tokenAddress).transfer(owner, tokens)



--------------------

Initial State:



Account: [CREATOR], balance: 0x0, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [CREATOR], function: transferAnyERC20Token(address,uint256), txdata: 0xdc39d06d000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0000000000000000000000000000000000000000000000000000000000000000, value: 0x0





