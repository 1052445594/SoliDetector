==== Unchecked return value from external call. ====

SWC ID: 104

Severity: Medium

Contract: ERC20

Function name: bug_unchk_send23()

PC address: 887

Estimated Gas Usage: 1008 - 35196

The return value of a message call is not checked.

External calls return a boolean value. If the callee halts with an exception, 'false' is returned and execution continues in the caller. The caller should check whether an exception happened and react accordingly to avoid unexpected behavior. For example it is often desirable to wrap external calls in require() so the transaction is reverted if the call fails.

--------------------

In file: buggy_23.sol:317



msg.sender.send(1 ether)



--------------------

Initial State:



Account: [CREATOR], balance: 0x80, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x2042820c218800004, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [ATTACKER], function: bug_unchk_send23(), txdata: 0x4f0af4fc, value: 0xde0b6b3a7640000



==== Unchecked return value from external call. ====

SWC ID: 104

Severity: Medium

Contract: ERC20Burnable

Function name: bug_unchk_send17()

PC address: 1145

Estimated Gas Usage: 985 - 35173

The return value of a message call is not checked.

External calls return a boolean value. If the callee halts with an exception, 'false' is returned and execution continues in the caller. The caller should check whether an exception happened and react accordingly to avoid unexpected behavior. For example it is often desirable to wrap external calls in require() so the transaction is reverted if the call fails.

--------------------

In file: buggy_23.sol:317



msg.sender.send(1 ether)



--------------------

Initial State:



Account: [CREATOR], balance: 0x8000, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x16805fbd20000000, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [ATTACKER], function: bug_unchk_send31(), txdata: 0xafcccbb4, value: 0xde0b6b3a7640000



==== Unchecked return value from external call. ====

SWC ID: 104

Severity: Medium

Contract: AGR

Function name: bug_unchk_send17()

PC address: 1658

Estimated Gas Usage: 1008 - 35196

The return value of a message call is not checked.

External calls return a boolean value. If the callee halts with an exception, 'false' is returned and execution continues in the caller. The caller should check whether an exception happened and react accordingly to avoid unexpected behavior. For example it is often desirable to wrap external calls in require() so the transaction is reverted if the call fails.

--------------------

In file: buggy_23.sol:317



msg.sender.send(1 ether)



--------------------

Initial State:



Account: [CREATOR], balance: 0x10000000000001b82, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [SOMEGUY], function: bug_unchk_send20(), txdata: 0x58ffa620, value: 0xde0b6b3a7640000



==== Integer Arithmetic Bugs ====

SWC ID: 101

Severity: High

Contract: AGR

Function name: name()

PC address: 1692

Estimated Gas Usage: 2433 - 4174

The arithmetic operator can overflow.

It is possible to cause an integer overflow or underflow in the arithmetic operation. 

--------------------

In file: buggy_23.sol:407



return _name



--------------------

Initial State:



Account: [CREATOR], balance: 0x0, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [SOMEGUY], function: name(), txdata: 0x06fdde03, value: 0x0



==== Integer Arithmetic Bugs ====

SWC ID: 101

Severity: High

Contract: AGR

Function name: symbol()

PC address: 2167

Estimated Gas Usage: 2410 - 4151

The arithmetic operator can overflow.

It is possible to cause an integer overflow or underflow in the arithmetic operation. 

--------------------

In file: buggy_23.sol:417



return _symbol



--------------------

Initial State:



Account: [CREATOR], balance: 0x0, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [SOMEGUY], function: symbol(), txdata: 0x95d89b41, value: 0x0



==== Unchecked return value from external call. ====

SWC ID: 104

Severity: Medium

Contract: AGR

Function name: my_func_unchk11(address)

PC address: 2341

Estimated Gas Usage: 1029 - 35217

The return value of a message call is not checked.

External calls return a boolean value. If the callee halts with an exception, 'false' is returned and execution continues in the caller. The caller should check whether an exception happened and react accordingly to avoid unexpected behavior. For example it is often desirable to wrap external calls in require() so the transaction is reverted if the call fails.

--------------------

In file: buggy_23.sol:420



dst.send(msg.value)



--------------------

Initial State:



Account: [CREATOR], balance: 0x17fe, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [CREATOR], function: my_func_unchk11(address), txdata: 0xc7b3ccc80000000000000000000000000000000000000000000000000000000000000000, value: 0x0



==== External Call To User-Supplied Address ====

SWC ID: 107

Severity: Low

Contract: AGR

Function name: my_func_uncheck12(address)

PC address: 2417

Estimated Gas Usage: 1128 - 35599

A call to a user-supplied address is executed.

An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.

--------------------

In file: buggy_23.sol:410



dst.call.value(msg.value)("")



--------------------

Initial State:



Account: [CREATOR], balance: 0x1c10c0400080138, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [SOMEGUY], function: my_func_uncheck12(address), txdata: 0xde7df662000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0



==== Unchecked return value from external call. ====

SWC ID: 104

Severity: Medium

Contract: AGR

Function name: my_func_uncheck12(address)

PC address: 2417

Estimated Gas Usage: 1128 - 35599

The return value of a message call is not checked.

External calls return a boolean value. If the callee halts with an exception, 'false' is returned and execution continues in the caller. The caller should check whether an exception happened and react accordingly to avoid unexpected behavior. For example it is often desirable to wrap external calls in require() so the transaction is reverted if the call fails.

--------------------

In file: buggy_23.sol:410



dst.call.value(msg.value)("")



--------------------

Initial State:



Account: [CREATOR], balance: 0x421c10800020fb98a, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [SOMEGUY], function: my_func_uncheck12(address), txdata: 0xde7df6620000000000000000000000000000000000000000000000000000000000000000, value: 0x0





