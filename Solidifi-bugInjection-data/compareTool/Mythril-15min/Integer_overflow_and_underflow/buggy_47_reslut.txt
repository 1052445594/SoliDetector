==== Integer Arithmetic Bugs ====

SWC ID: 101

Severity: High

Contract: AcunarToken

Function name: name()

PC address: 1774

Estimated Gas Usage: 2413 - 4154

The arithmetic operator can overflow.

It is possible to cause an integer overflow or underflow in the arithmetic operation. 

--------------------

In file: buggy_47.sol:72



string public name = "Acunar"



--------------------

Initial State:



Account: [CREATOR], balance: 0x0, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [CREATOR], function: name(), txdata: 0x06fdde03, value: 0x0



==== Integer Arithmetic Bugs ====

SWC ID: 101

Severity: High

Contract: AcunarToken

Function name: transfer_intou62(address,uint256)

PC address: 2080

Estimated Gas Usage: 12113 - 52774

The arithmetic operator can underflow.

It is possible to cause an integer overflow or underflow in the arithmetic operation. 

--------------------

In file: buggy_47.sol:88



balances_intou6[msg.sender] -= _value



--------------------

Initial State:



Account: [CREATOR], balance: 0x4, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [SOMEGUY], function: transfer_intou62(address,uint256), txdata: 0x19ad713900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001, value: 0x0



==== Integer Arithmetic Bugs ====

SWC ID: 101

Severity: High

Contract: AcunarToken

Function name: transfer_intou62(address,uint256)

PC address: 2105

Estimated Gas Usage: 12113 - 52774

The arithmetic operator can overflow.

It is possible to cause an integer overflow or underflow in the arithmetic operation. 

--------------------

In file: buggy_47.sol:91



balances_intou6[_to] += _value



--------------------

Initial State:



Account: [CREATOR], balance: 0x400800000801dc, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [SOMEGUY], function: transfer_intou62(address,uint256), txdata: 0x19ad7139000000000000000000000000aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa8000000000000000000000000000000000000000000000000000000000000000, value: 0x0



==== Dependence on predictable environment variable ====

SWC ID: 116

Severity: Low

Contract: AcunarToken

Function name: withdraw_intou9()

PC address: 2134

Estimated Gas Usage: 1082 - 1367

A control flow decision is made based on The block.timestamp environment variable.

The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.

--------------------

In file: buggy_47.sol:68



require(now > lockTime_intou9[msg.sender])



--------------------

Initial State:



Account: [CREATOR], balance: 0x2080000000008480, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [SOMEGUY], function: withdraw_intou9(), txdata: 0x1cbdc87d, value: 0x0



==== Integer Arithmetic Bugs ====

SWC ID: 101

Severity: High

Contract: AcunarToken

Function name: transfer_undrflow2(address,uint256)

PC address: 2407

Estimated Gas Usage: 12157 - 52818

The arithmetic operator can underflow.

It is possible to cause an integer overflow or underflow in the arithmetic operation. 

--------------------

In file: buggy_47.sol:223



balances_intou2[msg.sender] -= _value



--------------------

Initial State:



Account: [CREATOR], balance: 0x40000000000000001, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [SOMEGUY], function: transfer_undrflow2(address,uint256), txdata: 0x37ae6b7300000000000000000000000080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001, value: 0x0



==== Integer Arithmetic Bugs ====

SWC ID: 101

Severity: High

Contract: AcunarToken

Function name: transfer_undrflow2(address,uint256)

PC address: 2432

Estimated Gas Usage: 12157 - 52818

The arithmetic operator can overflow.

It is possible to cause an integer overflow or underflow in the arithmetic operation. 

--------------------

In file: buggy_47.sol:224



balances_intou2[_to] += _value



--------------------

Initial State:



Account: [CREATOR], balance: 0x40080000, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [CREATOR], function: transfer_undrflow2(address,uint256), txdata: 0x37ae6b73000000000000000000000000affeaffeaffeaffeaffeaffeaffeaffeaffeaffe8000000000000000000000000000000000000000000000000000000000000000, value: 0x0



==== Integer Arithmetic Bugs ====

SWC ID: 101

Severity: High

Contract: AcunarToken

Function name: transfer_intou26(address,uint256)

PC address: 2478

Estimated Gas Usage: 12201 - 52862

The arithmetic operator can underflow.

It is possible to cause an integer overflow or underflow in the arithmetic operation. 

--------------------

In file: buggy_47.sol:52



balances_intou26[msg.sender] -= _value



--------------------

Initial State:



Account: [CREATOR], balance: 0x1, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [CREATOR], function: transfer_intou26(address,uint256), txdata: 0x46aa924300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001, value: 0x0



==== Integer Arithmetic Bugs ====

SWC ID: 101

Severity: High

Contract: AcunarToken

Function name: transfer_intou26(address,uint256)

PC address: 2503

Estimated Gas Usage: 12201 - 52862

The arithmetic operator can overflow.

It is possible to cause an integer overflow or underflow in the arithmetic operation. 

--------------------

In file: buggy_47.sol:53



balances_intou26[_to] += _value



--------------------

Initial State:



Account: [CREATOR], balance: 0x400, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [CREATOR], function: transfer_intou26(address,uint256), txdata: 0x46aa9243000000000000000000000000affeaffeaffeaffeaffeaffeaffeaffeaffeaffec000000000000000000000000000000000000000000000000000000000000000, value: 0x0



==== Integer Arithmetic Bugs ====

SWC ID: 101

Severity: High

Contract: AcunarToken

Function name: increaseLockTime_intou9(uint256)

PC address: 2530

Estimated Gas Usage: 6139 - 26424

The arithmetic operator can overflow.

It is possible to cause an integer overflow or underflow in the arithmetic operation. 

--------------------

In file: buggy_47.sol:65



lockTime_intou9[msg.sender] += _secondsToIncrease



--------------------

Initial State:



Account: [CREATOR], balance: 0x40400090ea4, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [SOMEGUY], function: increaseLockTime_intou9(uint256), txdata: 0x4d3608dd8000000000000000000000000000000000000000000000000000000000000000, value: 0x0

Caller: [SOMEGUY], function: increaseLockTime_intou9(uint256), txdata: 0x4d3608dda7102410e080a006220020408009300900004400800004000020000404000080, value: 0x0



==== Dependence on predictable environment variable ====

SWC ID: 116

Severity: Low

Contract: AcunarToken

Function name: withdraw_intou21()

PC address: 2658

Estimated Gas Usage: 1126 - 1411

A control flow decision is made based on The block.timestamp environment variable.

The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.

--------------------

In file: buggy_47.sol:197



require(now > lockTime_intou21[msg.sender])



--------------------

Initial State:



Account: [CREATOR], balance: 0x0, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [SOMEGUY], function: withdraw_intou21(), txdata: 0x81bb4758, value: 0x0



==== Dependence on predictable environment variable ====

SWC ID: 116

Severity: Low

Contract: AcunarToken

Function name: withdraw_intou25()

PC address: 2685

Estimated Gas Usage: 1148 - 1433

A control flow decision is made based on The block.timestamp environment variable.

The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.

--------------------

In file: buggy_47.sol:137



require(now > lockTime_intou25[msg.sender])



--------------------

Initial State:



Account: [CREATOR], balance: 0x100000000, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [SOMEGUY], function: withdraw_intou25(), txdata: 0x835185a4, value: 0x0



==== Integer Arithmetic Bugs ====

SWC ID: 101

Severity: High

Contract: AcunarToken

Function name: symbol()

PC address: 2715

Estimated Gas Usage: 2389 - 4130

The arithmetic operator can overflow.

It is possible to cause an integer overflow or underflow in the arithmetic operation. 

--------------------

In file: buggy_47.sol:77



string public symbol = "ACN"



--------------------

Initial State:



Account: [CREATOR], balance: 0x0, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [CREATOR], function: symbol(), txdata: 0x95d89b41, value: 0x0



==== Dependence on predictable environment variable ====

SWC ID: 116

Severity: Low

Contract: AcunarToken

Function name: withdraw_intou29()

PC address: 2803

Estimated Gas Usage: 1103 - 1388

A control flow decision is made based on The block.timestamp environment variable.

The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.

--------------------

In file: buggy_47.sol:31



require(now > lockTime_intou29[msg.sender])



--------------------

Initial State:



Account: [CREATOR], balance: 0x1, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [CREATOR], function: withdraw_intou29(), txdata: 0x9f868ee0, value: 0x0



==== Integer Arithmetic Bugs ====

SWC ID: 101

Severity: High

Contract: AcunarToken

Function name: increaseLockTime_intou21(uint256)

PC address: 2828

Estimated Gas Usage: 6183 - 26468

The arithmetic operator can overflow.

It is possible to cause an integer overflow or underflow in the arithmetic operation. 

--------------------

In file: buggy_47.sol:194



lockTime_intou21[msg.sender] += _secondsToIncrease



--------------------

Initial State:



Account: [CREATOR], balance: 0x4014004000004acba, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [SOMEGUY], function: increaseLockTime_intou21(uint256), txdata: 0xa3af6a708000000001080000040000000100008000000100000000000000008000000020, value: 0x0

Caller: [SOMEGUY], function: increaseLockTime_intou21(uint256), txdata: 0xa3af6a708200000000881020400000002000000000000002000000000200400484000002, value: 0x0



==== Integer Arithmetic Bugs ====

SWC ID: 101

Severity: High

Contract: AcunarToken

Function name: increaseLockTime_intou25(uint256)

PC address: 2999

Estimated Gas Usage: 6161 - 26446

The arithmetic operator can overflow.

It is possible to cause an integer overflow or underflow in the arithmetic operation. 

--------------------

In file: buggy_47.sol:134



lockTime_intou25[msg.sender] += _secondsToIncrease



--------------------

Initial State:



Account: [CREATOR], balance: 0x2000000000020f0e, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x100000004200001, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [ATTACKER], function: increaseLockTime_intou25(uint256), txdata: 0xb10698248000800080000200000000000000000201200002020000004000080000008000, value: 0x0

Caller: [ATTACKER], function: increaseLockTime_intou25(uint256), txdata: 0xb1069824d000000080020004000000080008000000000000000000000001010400000000, value: 0x0



==== Dependence on predictable environment variable ====

SWC ID: 116

Severity: Low

Contract: AcunarToken

Function name: withdraw_intou5()

PC address: 3025

Estimated Gas Usage: 1125 - 1410

A control flow decision is made based on The block.timestamp environment variable.

The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.

--------------------

In file: buggy_47.sol:101



require(now > lockTime_intou5[msg.sender])



--------------------

Initial State:



Account: [CREATOR], balance: 0x0, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [CREATOR], function: withdraw_intou5(), txdata: 0xc017a750, value: 0x0



==== Integer Arithmetic Bugs ====

SWC ID: 101

Severity: High

Contract: AcunarToken

Function name: transfer_intou30(address,uint256)

PC address: 3051

Estimated Gas Usage: 12203 - 52864

The arithmetic operator can underflow.

It is possible to cause an integer overflow or underflow in the arithmetic operation. 

--------------------

In file: buggy_47.sol:15



balances_intou30[msg.sender] -= _value



--------------------

Initial State:



Account: [CREATOR], balance: 0x21c00c0100002214, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [SOMEGUY], function: transfer_intou30(address,uint256), txdata: 0xc036563e00000000000000000000000080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001, value: 0x0



==== Integer Arithmetic Bugs ====

SWC ID: 101

Severity: High

Contract: AcunarToken

Function name: transfer_intou30(address,uint256)

PC address: 3076

Estimated Gas Usage: 12203 - 52864

The arithmetic operator can overflow.

It is possible to cause an integer overflow or underflow in the arithmetic operation. 

--------------------

In file: buggy_47.sol:16



balances_intou30[_to] += _value



--------------------

Initial State:



Account: [CREATOR], balance: 0x21000400000808f6, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [ATTACKER], function: transfer_intou30(address,uint256), txdata: 0xc036563e000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef8000000000000000000000000000000000000000000000000000000000000000, value: 0x0



==== Integer Arithmetic Bugs ====

SWC ID: 101

Severity: High

Contract: AcunarToken

Function name: transfer_intou22(address,uint256)

PC address: 3104

Estimated Gas Usage: 12111 - 52772

The arithmetic operator can underflow.

It is possible to cause an integer overflow or underflow in the arithmetic operation. 

--------------------

In file: buggy_47.sol:183



balances_intou22[msg.sender] -= _value



--------------------

Initial State:



Account: [CREATOR], balance: 0x9, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [ATTACKER], function: transfer_intou22(address,uint256), txdata: 0xd7f8581a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001, value: 0x0



==== Integer Arithmetic Bugs ====

SWC ID: 101

Severity: High

Contract: AcunarToken

Function name: transfer_intou22(address,uint256)

PC address: 3129

Estimated Gas Usage: 12111 - 52772

The arithmetic operator can overflow.

It is possible to cause an integer overflow or underflow in the arithmetic operation. 

--------------------

In file: buggy_47.sol:184



balances_intou22[_to] += _value



--------------------

Initial State:



Account: [CREATOR], balance: 0x8, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [ATTACKER], function: transfer_intou22(address,uint256), txdata: 0xd7f8581a000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef8000000000000000000000000000000000000000000000000000000000000000, value: 0x0



==== Integer Arithmetic Bugs ====

SWC ID: 101

Severity: High

Contract: AcunarToken

Function name: increaseLockTime_intou5(uint256)

PC address: 3199

Estimated Gas Usage: 6182 - 26467

The arithmetic operator can overflow.

It is possible to cause an integer overflow or underflow in the arithmetic operation. 

--------------------

In file: buggy_47.sol:98



lockTime_intou5[msg.sender] += _secondsToIncrease



--------------------

Initial State:



Account: [CREATOR], balance: 0x20001400000401515, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [CREATOR], function: increaseLockTime_intou5(uint256), txdata: 0xe4a2d07f90010000010100100000c0000002000001000000808200008040100000000200, value: 0x0

Caller: [CREATOR], function: increaseLockTime_intou5(uint256), txdata: 0xe4a2d07f8001020000000100000000000040102100022110000000002100000410004000, value: 0x0





