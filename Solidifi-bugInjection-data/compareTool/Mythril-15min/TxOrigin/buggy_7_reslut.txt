==== Dependence on tx.origin ====

SWC ID: 115

Severity: Low

Contract: AccountWallet

Function name: transferTo_txorigin31(address,uint256,address)

PC address: 1913

Estimated Gas Usage: 312 - 407

Use of tx.origin as a part of authorization control.

The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.

--------------------

In file: buggy_7.sol:23



require(tx.origin == owner_txorigin15)



--------------------

Initial State:



Account: [CREATOR], balance: 0x24002400207bfbd, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [SOMEGUY], function: transferTo_txorigin27(address,uint256,address), txdata: 0x0ccb9a12000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0



==== Dependence on tx.origin ====

SWC ID: 115

Severity: Low

Contract: AccountWallet

Function name: bug_txorigin32(address)

PC address: 1939

Estimated Gas Usage: 269 - 364

Use of tx.origin as a part of authorization control.

The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.

--------------------

In file: buggy_7.sol:51



require(tx.origin == owner_txorigin32)



--------------------

Initial State:



Account: [CREATOR], balance: 0x4000000000000000, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [CREATOR], function: bug_txorigin36(address), txdata: 0xb389b2c90000000000000000000000000000000000000000000000000000000000000000, value: 0x0



==== Dependence on tx.origin ====

SWC ID: 115

Severity: Low

Contract: AccountWallet

Function name: stop()

PC address: 1959

Estimated Gas Usage: 1093 - 1188

Use of tx.origin as a part of authorization control.

The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.

--------------------

In file: buggy_7.sol:74



require(isOwner())



--------------------

Initial State:



Account: [CREATOR], balance: 0x10c0002000001, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [ATTACKER], function: stop(), txdata: 0x07da68f5, value: 0x0



==== Dependence on tx.origin ====

SWC ID: 115

Severity: Low

Contract: AccountWallet

Function name: sendto_txorigin21(address,uint256,address)

PC address: 1990

Estimated Gas Usage: 310 - 405

Use of tx.origin as a part of authorization control.

The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.

--------------------

In file: buggy_7.sol:179



require (tx.origin == owner_txorigin21)



--------------------

Initial State:



Account: [CREATOR], balance: 0x7bffc, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [ATTACKER], function: sendto_txorigin33(address,uint256,address), txdata: 0xf7ae6cde000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0



==== Unprotected Ether Withdrawal ====

SWC ID: 105

Severity: High

Contract: AccountWallet

Function name: sendto_txorigin21(address,uint256,address)

PC address: 2027

Estimated Gas Usage: 1237 - 35425

Any sender can withdraw Ether from the contract account.

Arbitrary senders other than the contract creator can profitably extract Ether from the contract account. Verify the business logic carefully and make sure that appropriate security controls are in place to prevent unexpected loss of funds.

--------------------

In file: buggy_7.sol:180



receiver.transfer(amount)



--------------------

Initial State:



Account: [CREATOR], balance: 0x40000010000004a08, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x429c57e0fffffffff, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x1

Caller: [ATTACKER], function: sendto_txorigin21(address,uint256,address), txdata: 0x0b95065e000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0



==== Dependence on tx.origin ====

SWC ID: 115

Severity: Low

Contract: AccountWallet

Function name: withdrawAll_txorigin18(address,address)

PC address: 2071

Estimated Gas Usage: 311 - 406

Use of tx.origin as a part of authorization control.

The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.

--------------------

In file: buggy_7.sol:169



require(tx.origin == owner_txorigin22)



--------------------

Initial State:



Account: [CREATOR], balance: 0x410c00020fbfff, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [SOMEGUY], function: withdrawAll_txorigin14(address,address), txdata: 0xf935226e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0



==== Unprotected Ether Withdrawal ====

SWC ID: 105

Severity: High

Contract: AccountWallet

Function name: withdrawAll_txorigin18(address,address)

PC address: 2108

Estimated Gas Usage: 1930 - 36118

Any sender can withdraw Ether from the contract account.

Arbitrary senders other than the contract creator can profitably extract Ether from the contract account. Verify the business logic carefully and make sure that appropriate security controls are in place to prevent unexpected loss of funds.

--------------------

In file: buggy_7.sol:170



_recipient.transfer(address(this).balance)



--------------------

Initial State:



Account: [CREATOR], balance: 0x40000000000, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x400200, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x1

Caller: [ATTACKER], function: withdrawAll_txorigin34(address,address), txdata: 0x70e309ef000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0



==== Dependence on tx.origin ====

SWC ID: 115

Severity: Low

Contract: AccountWallet

Function name: updateAccount(string,string)

PC address: 2153

Estimated Gas Usage: 1463 - 1558

Use of tx.origin as a part of authorization control.

The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.

--------------------

In file: buggy_7.sol:80



isMaster() || isOwner()



--------------------

Initial State:



Account: [CREATOR], balance: 0x400000c00000803b8, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [SOMEGUY], function: updateAccount(string,string), txdata: 0x534c1bdd00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0



==== Dependence on tx.origin ====

SWC ID: 115

Severity: Low

Contract: AccountWallet

Function name: updateAccount(string,string)

PC address: 2166

Estimated Gas Usage: 1477 - 1572

Use of tx.origin as a part of authorization control.

The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.

--------------------

In file: buggy_7.sol:80



require(isMaster() || isOwner())



--------------------

Initial State:



Account: [CREATOR], balance: 0x1, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [CREATOR], function: updateAccount(string,string), txdata: 0x534c1bdd00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000, value: 0x0



==== Dependence on tx.origin ====

SWC ID: 115

Severity: Low

Contract: AccountWallet

Function name: transferMasterRole(address)

PC address: 2762

Estimated Gas Usage: 1107 - 1202

Use of tx.origin as a part of authorization control.

The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.

--------------------

In file: buggy_7.sol:74



require(isOwner())



--------------------

Initial State:



Account: [CREATOR], balance: 0x4000040057bfbc, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [SOMEGUY], function: transferMasterRole(address), txdata: 0x5e12df070000000000000000000000000000000000000000000000000000000000000000, value: 0x0



==== Dependence on tx.origin ====

SWC ID: 115

Severity: Low

Contract: AccountWallet

Function name: start()

PC address: 2847

Estimated Gas Usage: 1113 - 1208

Use of tx.origin as a part of authorization control.

The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.

--------------------

In file: buggy_7.sol:74



require(isOwner())



--------------------

Initial State:



Account: [CREATOR], balance: 0x0, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [CREATOR], function: start(), txdata: 0xbe9a6555, value: 0x0



==== Integer Arithmetic Bugs ====

SWC ID: 101

Severity: High

Contract: AccountWallet

Function name: getAddress(string)

PC address: 2958

Estimated Gas Usage: 2876 - 8988

The arithmetic operator can overflow.

It is possible to cause an integer overflow or underflow in the arithmetic operation. 

--------------------

In file: buggy_7.sol:233



return (btc[account], eth[account])



--------------------

Initial State:



Account: [CREATOR], balance: 0x800001020cba3f, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [SOMEGUY], function: getAddress(string), txdata: 0xbf40fac1000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000100020000000000000000000000000010000000, value: 0x0



==== Dependence on tx.origin ====

SWC ID: 115

Severity: Low

Contract: AccountWallet

Function name: setAddress(string,string,address)

PC address: 3109

Estimated Gas Usage: 1459 - 1554

Use of tx.origin as a part of authorization control.

The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.

--------------------

In file: buggy_7.sol:80



isMaster() || isOwner()



--------------------

Initial State:



Account: [CREATOR], balance: 0xc10000000f81a2, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [SOMEGUY], function: setAddress(string,string,address), txdata: 0xd4c8e97c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000, value: 0x0



==== Dependence on tx.origin ====

SWC ID: 115

Severity: Low

Contract: AccountWallet

Function name: setAddress(string,string,address)

PC address: 3122

Estimated Gas Usage: 1473 - 1568

Use of tx.origin as a part of authorization control.

The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.

--------------------

In file: buggy_7.sol:80



require(isMaster() || isOwner())



--------------------

Initial State:



Account: [CREATOR], balance: 0x4, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [CREATOR], function: setAddress(string,string,address), txdata: 0xd4c8e97c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000, value: 0x0



==== Dependence on tx.origin ====

SWC ID: 115

Severity: Low

Contract: AccountWallet

Function name: deleteAccount(string)

PC address: 3443

Estimated Gas Usage: 1283 - 1378

Use of tx.origin as a part of authorization control.

The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.

--------------------

In file: buggy_7.sol:80



isMaster() || isOwner()



--------------------

Initial State:



Account: [CREATOR], balance: 0x20000000000000000, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [CREATOR], function: deleteAccount(string), txdata: 0xd5e363f90000000000000000000000000000000000000000000000000000000000000000, value: 0x0



==== Dependence on tx.origin ====

SWC ID: 115

Severity: Low

Contract: AccountWallet

Function name: deleteAccount(string)

PC address: 3456

Estimated Gas Usage: 1297 - 1392

Use of tx.origin as a part of authorization control.

The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.

--------------------

In file: buggy_7.sol:80



require(isMaster() || isOwner())



--------------------

Initial State:



Account: [CREATOR], balance: 0x4000020000030, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [CREATOR], function: deleteAccount(string), txdata: 0xd5e363f90000000000000000000000000000000000000000000000000000000000000000, value: 0x0



==== Dependence on tx.origin ====

SWC ID: 115

Severity: Low

Contract: AccountWallet

Function name: transferOwnership(address)

PC address: 3757

Estimated Gas Usage: 1195 - 1290

Use of tx.origin as a part of authorization control.

The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.

--------------------

In file: buggy_7.sol:74



require(isOwner())



--------------------

Initial State:



Account: [CREATOR], balance: 0x7bdfc, nonce:0, storage:{}

Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}



Transaction Sequence:



Caller: [CREATOR], calldata: , value: 0x0

Caller: [SOMEGUY], function: transferOwnership(address), txdata: 0xf2fde38b0000000000000000000000000000000000000000000000000000000000000000, value: 0x0





