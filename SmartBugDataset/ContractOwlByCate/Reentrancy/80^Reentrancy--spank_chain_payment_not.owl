<rdf:RDF
    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
    xmlns:owl="http://www.w3.org/2002/07/owl#"
    xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
    xmlns:sol="http://www.hty.group/tf/ontologies/2020/07/Solildity#"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema#">
  <owl:Ontology rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity"/>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#FunctionFor">
    <rdfs:subClassOf>
      <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#Function"/>
    </rdfs:subClassOf>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#Function">
    <owl:deprecated rdf:parseType="Resource">
    </owl:deprecated>
    <rdfs:subClassOf>
      <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#Contract"/>
    </rdfs:subClassOf>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#ForCondition">
    <rdfs:subClassOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#FunctionFor"/>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#Param">
    <rdfs:subClassOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#Function"/>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#IfCondition">
    <rdfs:subClassOf>
      <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#FunctionIf"/>
    </rdfs:subClassOf>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#VariableOperation">
    <rdfs:subClassOf>
      <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#Expression"/>
    </rdfs:subClassOf>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#StateVar">
    <rdfs:subClassOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#Contract"/>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#Constructor">
    <rdfs:subClassOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#Contract"/>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#Modifier">
    <rdfs:subClassOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#Contract"/>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#Struct">
    <rdfs:subClassOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#Contract"/>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#Expression">
    <rdfs:subClassOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#Contract"/>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#IfRight">
    <rdfs:subClassOf>
      <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#FunctionIf"/>
    </rdfs:subClassOf>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#FunctionCall">
    <rdfs:subClassOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#Expression"/>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#FunctionIf">
    <rdfs:subClassOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#Function"/>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#Assignment">
    <rdfs:subClassOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#Expression"/>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#Library"/>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#ForContent">
    <rdfs:subClassOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#FunctionFor"/>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#IfWrong">
    <rdfs:subClassOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#FunctionIf"/>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#Interface"/>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#ReturnValue">
    <rdfs:subClassOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#Function"/>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#ReturnClaim">
    <rdfs:subClassOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#Function"/>
  </owl:Class>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#containAssignment"/>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#callFunction"/>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasStateVar"/>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasIfCondition"/>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasParam"/>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasIfWrong">
    <rdfs:subPropertyOf rdf:resource="http://www.w3.org/2002/07/owl#topObjectProperty"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#defineConstructor"/>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#after"/>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasForConditionVar">
    <rdfs:subPropertyOf>
      <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasFor"/>
    </rdfs:subPropertyOf>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasForConditionStep">
    <rdfs:subPropertyOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasFor"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasReturnClaim"/>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasReturnValue"/>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasIfRight">
    <rdfs:subPropertyOf rdf:resource="http://www.w3.org/2002/07/owl#topObjectProperty"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#before">
    <rdfs:subPropertyOf rdf:resource="http://www.w3.org/2002/07/owl#topObjectProperty"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#operateVarible"/>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasFunction"/>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#defineModifier"/>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasForContent">
    <rdfs:subPropertyOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasFor"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasForCondition">
    <rdfs:subPropertyOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasFor"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasStruct"/>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasIf"/>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#assignLeft">
    <rdfs:subPropertyOf rdf:resource="http://www.w3.org/2002/07/owl#topDataProperty"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#conditionValue">
    <rdfs:subPropertyOf rdf:resource="http://www.w3.org/2002/07/owl#topDataProperty"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#storageLocate"/>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#callFunctionObject"/>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasModifier"/>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#conditionVar"/>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#pragmaValue">
    <rdfs:subPropertyOf rdf:resource="http://www.w3.org/2002/07/owl#topDataProperty"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#assignSymbol"/>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#returnText"/>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#assignRight"/>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#conditionSymbol"/>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#opSymbol">
    <rdfs:subPropertyOf rdf:resource="http://www.w3.org/2002/07/owl#topDataProperty"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#pragmaName">
    <rdfs:subPropertyOf rdf:resource="http://www.w3.org/2002/07/owl#topDataProperty"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#conditionStep"/>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#callFunctionName"/>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#typeName"/>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#valueIs"/>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#opVarible">
    <rdfs:subPropertyOf rdf:resource="http://www.w3.org/2002/07/owl#topDataProperty"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#nameIs"/>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#callFunctionArgument"/>
  <sol:Contract rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con.Token.L11*C433">
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.allowance.L45*C2310">
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L45*C2379">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.remaining.L45*C2388">
                <sol:typeName>uint256</sol:typeName>
                <sol:nameIs>remaining</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._spender.L45*C2345">
            <sol:typeName>address</sol:typeName>
            <sol:nameIs>_spender</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._owner.L45*C2329">
            <sol:typeName>address</sol:typeName>
            <sol:nameIs>_owner</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>allowance</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.approve.L41*C2037">
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L41*C2095">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.success.L41*C2104">
                <sol:typeName>bool</sol:typeName>
                <sol:nameIs>success</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._value.L41*C2072">
            <sol:typeName>uint256</sol:typeName>
            <sol:nameIs>_value</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._spender.L41*C2054">
            <sol:typeName>address</sol:typeName>
            <sol:nameIs>_spender</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>approve</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.transferFrom.L36*C1672">
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L36*C1745">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.success.L36*C1754">
                <sol:typeName>bool</sol:typeName>
                <sol:nameIs>success</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._value.L36*C1722">
            <sol:typeName>uint256</sol:typeName>
            <sol:nameIs>_value</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._to.L36*C1709">
            <sol:typeName>address</sol:typeName>
            <sol:nameIs>_to</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._from.L36*C1694">
            <sol:typeName>address</sol:typeName>
            <sol:nameIs>_from</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>transferFrom</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.transfer.L30*C1298">
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L30*C1352">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.success.L30*C1361">
                <sol:typeName>bool</sol:typeName>
                <sol:nameIs>success</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._value.L30*C1329">
            <sol:typeName>uint256</sol:typeName>
            <sol:nameIs>_value</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._to.L30*C1316">
            <sol:typeName>address</sol:typeName>
            <sol:nameIs>_to</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>transfer</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.balanceOf.L25*C1005">
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L25*C1056">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.balance.L25*C1065">
                <sol:typeName>uint256</sol:typeName>
                <sol:nameIs>balance</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._owner.L25*C1024">
            <sol:typeName>address</sol:typeName>
            <sol:nameIs>_owner</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>balanceOf</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_sv.totalSupply.L22*C881">
        <sol:hasModifier>public</sol:hasModifier>
        <sol:typeName>uint256</sol:typeName>
        <sol:nameIs>totalSupply</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:nameIs>Token</sol:nameIs>
  </sol:Contract>
  <sol:Library rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con.ECTools.L49*C2572">
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.recoverSigner.L52*C2722">
        <sol:hasModifier>public</sol:hasModifier>
        <sol:hasModifier>pure</sol:hasModifier>
        <sol:nameIs>recoverSigner</sol:nameIs>
        <sol:hasIf>
          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.bytes__sig_.length!_132.L57*C3000">
            <sol:hasIfRight>
              <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L57*C3000">
                <sol:hasReturnValue>
                  <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.0x0.L58*C3034">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L57*C3000"/>
                    <sol:returnText>0x0</sol:returnText>
                  </sol:ReturnValue>
                </sol:hasReturnValue>
                <sol:before>
                  <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.bytes__sig_.length!_132.L57*C3000">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.bytes__sig_.length!_132.L57*C3000"/>
                    <sol:hasIfCondition>bytes(_sig).length!=132</sol:hasIfCondition>
                  </sol:IfCondition>
                </sol:before>
              </sol:IfRight>
            </sol:hasIfRight>
            <sol:before>
              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes32prefixedHash.L56*C2927">
                <sol:before>
                  <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemoryprefix.L55*C2868">
                    <sol:before>
                      <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L53*C2811">
                        <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.recoverSigner.L52*C2722"/>
                        <sol:callFunctionArgument>_hashedMsg!=0x00</sol:callFunctionArgument>
                        <sol:callFunctionName>require</sol:callFunctionName>
                      </sol:FunctionCall>
                    </sol:before>
                    <sol:storageLocate>memory</sol:storageLocate>
                    <sol:valueIs>"\x19Ethereum Signed Message:\n32"</sol:valueIs>
                    <sol:nameIs>prefix</sol:nameIs>
                    <sol:typeName>bytes</sol:typeName>
                  </sol:StateVar>
                </sol:before>
                <sol:valueIs>keccak256(abi.encodePacked(prefix,_hashedMsg))</sol:valueIs>
                <sol:nameIs>prefixedHash</sol:nameIs>
                <sol:typeName>bytes32</sol:typeName>
              </sol:StateVar>
            </sol:before>
            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.bytes__sig_.length!_132.L57*C3000"/>
          </sol:FunctionIf>
        </sol:hasIf>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemoryprefix.L55*C2868"/>
        <sol:hasIf>
          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.v_27.L69*C3246">
            <sol:hasIfRight>
              <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L69*C3246">
                <sol:containAssignment>
                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.v__27.L70*C3261">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L69*C3246"/>
                    <sol:assignSymbol>=</sol:assignSymbol>
                    <sol:assignRight>v+27</sol:assignRight>
                    <sol:assignLeft>v</sol:assignLeft>
                  </sol:Assignment>
                </sol:containAssignment>
                <sol:before>
                  <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.v_27.L69*C3246">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.v_27.L69*C3246"/>
                    <sol:hasIfCondition>v&lt;27</sol:hasIfCondition>
                  </sol:IfCondition>
                </sol:before>
              </sol:IfRight>
            </sol:hasIfRight>
            <sol:before>
              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemorysig.L63*C3084">
                <sol:before>
                  <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uint8v.L62*C3074">
                    <sol:before>
                      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes32s.L61*C3062">
                        <sol:before>
                          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes32r.L60*C3050">
                            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.0x0.L58*C3034"/>
                            <sol:valueIs>null</sol:valueIs>
                            <sol:nameIs>r</sol:nameIs>
                            <sol:typeName>bytes32</sol:typeName>
                          </sol:StateVar>
                        </sol:before>
                        <sol:valueIs>null</sol:valueIs>
                        <sol:nameIs>s</sol:nameIs>
                        <sol:typeName>bytes32</sol:typeName>
                      </sol:StateVar>
                    </sol:before>
                    <sol:valueIs>null</sol:valueIs>
                    <sol:nameIs>v</sol:nameIs>
                    <sol:typeName>uint8</sol:typeName>
                  </sol:StateVar>
                </sol:before>
                <sol:storageLocate>memory</sol:storageLocate>
                <sol:valueIs>hexstrToBytes(substring(_sig,2,132))</sol:valueIs>
                <sol:nameIs>sig</sol:nameIs>
                <sol:typeName>bytes</sol:typeName>
              </sol:StateVar>
            </sol:before>
            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.v_27.L69*C3246"/>
          </sol:FunctionIf>
        </sol:hasIf>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes32prefixedHash.L56*C2927"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uint8v.L62*C3074"/>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L53*C2811"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._hashedMsg.L52*C2745">
            <sol:typeName>bytes32</sol:typeName>
            <sol:nameIs>_hashedMsg</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L52*C2790">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.address.L52*C2799">
                <sol:typeName>address</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemorysig.L63*C3084"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes32s.L61*C3062"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes32r.L60*C3050"/>
        <sol:hasIf>
          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.v_27__v_28.L72*C3274">
            <sol:hasIfRight>
              <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L72*C3274">
                <sol:hasReturnValue>
                  <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.0x0.L73*C3299">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L72*C3274"/>
                    <sol:returnText>0x0</sol:returnText>
                  </sol:ReturnValue>
                </sol:hasReturnValue>
                <sol:before>
                  <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.v_27__v_28.L72*C3274">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.v_27__v_28.L72*C3274"/>
                    <sol:hasIfCondition>v&lt;27||v&gt;28</sol:hasIfCondition>
                  </sol:IfCondition>
                </sol:before>
              </sol:IfRight>
            </sol:hasIfRight>
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.v__27.L70*C3261"/>
            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.v_27__v_28.L72*C3274"/>
          </sol:FunctionIf>
        </sol:hasIf>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.ecrecover_prefixedHash_v_r_s_.L75*C3315">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.0x0.L73*C3299"/>
            <sol:returnText>ecrecover(prefixedHash,v,r,s)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._sig.L52*C2765">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_sig</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.substring.L145*C5703">
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemoryresult.L150*C5943">
            <sol:before>
              <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L149*C5903">
                <sol:before>
                  <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L148*C5875">
                    <sol:before>
                      <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L147*C5839">
                        <sol:before>
                          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemorystrBytes.L146*C5801">
                            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.substring.L145*C5703"/>
                            <sol:storageLocate>memory</sol:storageLocate>
                            <sol:valueIs>bytes(_str)</sol:valueIs>
                            <sol:nameIs>strBytes</sol:nameIs>
                            <sol:typeName>bytes</sol:typeName>
                          </sol:StateVar>
                        </sol:before>
                        <sol:callFunctionArgument>_startIndex&lt;=_endIndex</sol:callFunctionArgument>
                        <sol:callFunctionName>require</sol:callFunctionName>
                      </sol:FunctionCall>
                    </sol:before>
                    <sol:callFunctionArgument>_startIndex&gt;=0</sol:callFunctionArgument>
                    <sol:callFunctionName>require</sol:callFunctionName>
                  </sol:FunctionCall>
                </sol:before>
                <sol:callFunctionArgument>_endIndex&lt;=strBytes.length</sol:callFunctionArgument>
                <sol:callFunctionName>require</sol:callFunctionName>
              </sol:FunctionCall>
            </sol:before>
            <sol:storageLocate>memory</sol:storageLocate>
            <sol:valueIs>newbytes(_endIndex-_startIndex)</sol:valueIs>
            <sol:nameIs>result</sol:nameIs>
            <sol:typeName>bytes</sol:typeName>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasModifier>pure</sol:hasModifier>
        <sol:nameIs>substring</sol:nameIs>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._startIndex.L145*C5735">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>_startIndex</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.string_result_.L154*C6095">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.result_i-_startIndex__strBytes_i_.L152*C6052">
                <sol:before>
                  <sol:FunctionFor rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for.for_uinti__startIndexi__endIndexi____result_i-_startIndex__strBytes_i__.L151*C6002">
                    <sol:conditionStep>i++</sol:conditionStep>
                    <sol:hasForCondition>
                      <sol:ForCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.i__endIndex.L151*C6002">
                        <sol:conditionValue>_endIndex</sol:conditionValue>
                        <sol:conditionSymbol>&lt;</sol:conditionSymbol>
                      </sol:ForCondition>
                    </sol:hasForCondition>
                    <sol:conditionVar>i</sol:conditionVar>
                    <sol:hasStateVar>
                      <sol:stateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.uinti.L151*C6002">
                        <sol:valueIs>_startIndex</sol:valueIs>
                        <sol:nameIs>i</sol:nameIs>
                        <sol:typeName>uint</sol:typeName>
                      </sol:stateVar>
                    </sol:hasStateVar>
                    <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.result_i-_startIndex__strBytes_i_.L152*C6052"/>
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemoryresult.L150*C5943"/>
                  </sol:FunctionFor>
                </sol:before>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>strBytes[i]</sol:assignRight>
                <sol:assignLeft>result[i-_startIndex]</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:returnText>string(result)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._str.L145*C5722">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_str</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemorystrBytes.L146*C5801"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._endIndex.L145*C5753">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>_endIndex</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasFor rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for.for_uinti__startIndexi__endIndexi____result_i-_startIndex__strBytes_i__.L151*C6002"/>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L145*C5781">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.string.L145*C5790">
                <sol:typeName>string</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L148*C5875"/>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L147*C5839"/>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L149*C5903"/>
        <sol:hasModifier>public</sol:hasModifier>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.uintToBytes32.L114*C4717">
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.b_newbytes_32_.L115*C4785">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.uintToBytes32.L114*C4717"/>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>newbytes(32)</sol:assignRight>
            <sol:assignLeft>b</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L114*C4764">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.b.L114*C4773">
                <sol:typeName>bytes</sol:typeName>
                <sol:nameIs>b</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:hasModifier>pure</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._uint.L114*C4740">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>_uint</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>uintToBytes32</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.hexstrToBytes.L83*C3632">
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintk.L87*C3810">
            <sol:before>
              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemorybstr.L86*C3761">
                <sol:before>
                  <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L85*C3737">
                    <sol:before>
                      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintlen.L84*C3702">
                        <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.hexstrToBytes.L83*C3632"/>
                        <sol:valueIs>bytes(_hexstr).length</sol:valueIs>
                        <sol:nameIs>len</sol:nameIs>
                        <sol:typeName>uint</sol:typeName>
                      </sol:StateVar>
                    </sol:before>
                    <sol:callFunctionArgument>len%2==0</sol:callFunctionArgument>
                    <sol:callFunctionName>require</sol:callFunctionName>
                  </sol:FunctionCall>
                </sol:before>
                <sol:storageLocate>memory</sol:storageLocate>
                <sol:valueIs>bytes(newstring(len/2))</sol:valueIs>
                <sol:nameIs>bstr</sol:nameIs>
                <sol:typeName>bytes</sol:typeName>
              </sol:StateVar>
            </sol:before>
            <sol:valueIs>0</sol:valueIs>
            <sol:nameIs>k</sol:nameIs>
            <sol:typeName>uint</sol:typeName>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemorybstr.L86*C3761"/>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.bstr.L96*C4062">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.bstr_k____uintToBytes32_p__31_.L94*C4024">
                <sol:before>
                  <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for_varDeclare.uintp.L93*C3970">
                    <sol:before>
                      <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.r_substring__hexstr_i_1_i_2_.L92*C3931">
                        <sol:before>
                          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.s_substring__hexstr_i_i_1_.L91*C3896">
                            <sol:before>
                              <sol:FunctionFor rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for.for_uinti_0i_leni__2__s_substring__hexstr_i_i_1_r_substring__hexstr_i_1_i_2_uintp_parseInt16Char_s__16_parseInt16Char_r_bstr_k____uintToBytes32_p__31__.L90*C3859">
                                <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.r_substring__hexstr_i_1_i_2_.L92*C3931"/>
                                <sol:before>
                                  <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.stringmemoryr.L89*C3841">
                                    <sol:before>
                                      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.stringmemorys.L88*C3823">
                                        <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintk.L87*C3810"/>
                                        <sol:storageLocate>memory</sol:storageLocate>
                                        <sol:valueIs>null</sol:valueIs>
                                        <sol:nameIs>s</sol:nameIs>
                                        <sol:typeName>string</sol:typeName>
                                      </sol:StateVar>
                                    </sol:before>
                                    <sol:storageLocate>memory</sol:storageLocate>
                                    <sol:valueIs>null</sol:valueIs>
                                    <sol:nameIs>r</sol:nameIs>
                                    <sol:typeName>string</sol:typeName>
                                  </sol:StateVar>
                                </sol:before>
                                <sol:hasStateVar>
                                  <sol:stateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.uinti.L90*C3859">
                                    <sol:valueIs>0</sol:valueIs>
                                    <sol:nameIs>i</sol:nameIs>
                                    <sol:typeName>uint</sol:typeName>
                                  </sol:stateVar>
                                </sol:hasStateVar>
                                <sol:hasForCondition>
                                  <sol:ForCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.i_len.L90*C3859">
                                    <sol:conditionValue>len</sol:conditionValue>
                                    <sol:conditionSymbol>&lt;</sol:conditionSymbol>
                                  </sol:ForCondition>
                                </sol:hasForCondition>
                                <sol:conditionVar>i</sol:conditionVar>
                                <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.s_substring__hexstr_i_i_1_.L91*C3896"/>
                                <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.bstr_k____uintToBytes32_p__31_.L94*C4024"/>
                                <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for_varDeclare.uintp.L93*C3970"/>
                                <sol:conditionStep>i+=2</sol:conditionStep>
                              </sol:FunctionFor>
                            </sol:before>
                            <sol:assignSymbol>=</sol:assignSymbol>
                            <sol:assignRight>substring(_hexstr,i,i+1)</sol:assignRight>
                            <sol:assignLeft>s</sol:assignLeft>
                          </sol:Assignment>
                        </sol:before>
                        <sol:assignSymbol>=</sol:assignSymbol>
                        <sol:assignRight>substring(_hexstr,i+1,i+2)</sol:assignRight>
                        <sol:assignLeft>r</sol:assignLeft>
                      </sol:Assignment>
                    </sol:before>
                    <sol:valueIs>parseInt16Char(s)*16+parseInt16Char(r)</sol:valueIs>
                    <sol:nameIs>p</sol:nameIs>
                    <sol:typeName>uint</sol:typeName>
                  </sol:StateVar>
                </sol:before>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>uintToBytes32(p)[31]</sol:assignRight>
                <sol:assignLeft>bstr[k++]</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:returnText>bstr</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintlen.L84*C3702"/>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L85*C3737"/>
        <sol:nameIs>hexstrToBytes</sol:nameIs>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.stringmemorys.L88*C3823"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._hexstr.L83*C3655">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_hexstr</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasFor rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for.for_uinti_0i_leni__2__s_substring__hexstr_i_i_1_r_substring__hexstr_i_1_i_2_uintp_parseInt16Char_s__16_parseInt16Char_r_bstr_k____uintToBytes32_p__31__.L90*C3859"/>
        <sol:hasModifier>pure</sol:hasModifier>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L83*C3683">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.bytes.L83*C3692">
                <sol:typeName>bytes</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.stringmemoryr.L89*C3841"/>
      </sol:Function>
    </sol:hasFunction>
    <sol:nameIs>ECTools</sol:nameIs>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.uintToString.L127*C5262">
        <sol:hasModifier>public</sol:hasModifier>
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemoryb.L134*C5407">
            <sol:before>
              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintm.L129*C5347">
                <sol:before>
                  <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintlen.L128*C5332">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.uintToString.L127*C5262"/>
                    <sol:valueIs>0</sol:valueIs>
                    <sol:nameIs>len</sol:nameIs>
                    <sol:typeName>uint</sol:typeName>
                  </sol:StateVar>
                </sol:before>
                <sol:valueIs>_uint+0</sol:valueIs>
                <sol:nameIs>m</sol:nameIs>
                <sol:typeName>uint</sol:typeName>
              </sol:StateVar>
            </sol:before>
            <sol:storageLocate>memory</sol:storageLocate>
            <sol:valueIs>newbytes(len)</sol:valueIs>
            <sol:nameIs>b</sol:nameIs>
            <sol:typeName>bytes</sol:typeName>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._uint.L127*C5284">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>_uint</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L127*C5308">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.str.L127*C5317">
                <sol:typeName>string</sol:typeName>
                <sol:nameIs>str</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.str_string_b_.L141*C5568">
            <sol:before>
              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uinti.L135*C5441">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemoryb.L134*C5407"/>
                <sol:valueIs>len-1</sol:valueIs>
                <sol:nameIs>i</sol:nameIs>
                <sol:typeName>uint</sol:typeName>
              </sol:StateVar>
            </sol:before>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>string(b)</sol:assignRight>
            <sol:assignLeft>str</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintm.L129*C5347"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintlen.L128*C5332"/>
        <sol:hasModifier>pure</sol:hasModifier>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uinti.L135*C5441"/>
        <sol:nameIs>uintToString</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.parseInt16Char.L99*C4159">
        <sol:hasIf>
          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if._bresult_0___48_&amp;&amp;_bresult_0___57_.L102*C4292">
            <sol:hasIfWrong>
              <sol:IfWrong rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifWrong._.L102*C4292">
                <sol:hasIf>
                  <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_if_ifWrong_if._bresult_0___65_&amp;&amp;_bresult_0___70_.L104*C4379">
                    <sol:hasIfWrong>
                      <sol:IfWrong rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if_ifWrong._.L104*C4379">
                        <sol:hasIf>
                          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_if_ifWrong_if_ifWrong_if._bresult_0___97_&amp;&amp;_bresult_0___102_.L106*C4466">
                            <sol:hasIfWrong>
                              <sol:IfWrong rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#7_con_fun_if_ifWrong_if_ifWrong_if_ifWrong._.L106*C4466">
                                <sol:callFunction>
                                  <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.revert.L109*C4557">
                                    <sol:before>
                                      <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#7_con_fun_if_ifWrong_if_ifWrong_if_ifRight_return.uint_bresult_0__-87.L107*C4516">
                                        <sol:before>
                                          <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#7_con_fun_if_ifWrong_if_ifWrong_if_ifRight._.L106*C4466">
                                            <sol:hasReturnValue rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#7_con_fun_if_ifWrong_if_ifWrong_if_ifRight_return.uint_bresult_0__-87.L107*C4516"/>
                                            <sol:before>
                                              <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#7_con_fun_if_ifWrong_if_ifWrong_if._bresult_0___97_&amp;&amp;_bresult_0___102_.L106*C4466">
                                                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_if_ifWrong_if_ifWrong_if._bresult_0___97_&amp;&amp;_bresult_0___102_.L106*C4466"/>
                                                <sol:hasIfCondition
                                                >(bresult[0]&gt;=97)&amp;&amp;(bresult[0]&lt;=102)</sol:hasIfCondition>
                                              </sol:IfCondition>
                                            </sol:before>
                                          </sol:IfRight>
                                        </sol:before>
                                        <sol:returnText>uint(bresult[0])-87</sol:returnText>
                                      </sol:ReturnValue>
                                    </sol:before>
                                    <sol:callFunctionArgument
                                    ></sol:callFunctionArgument>
                                    <sol:callFunctionName>revert</sol:callFunctionName>
                                  </sol:FunctionCall>
                                </sol:callFunction>
                                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#7_con_fun_if_ifWrong_if_ifWrong_if._bresult_0___97_&amp;&amp;_bresult_0___102_.L106*C4466"/>
                              </sol:IfWrong>
                            </sol:hasIfWrong>
                            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#7_con_fun_if_ifWrong_if_ifWrong_if_ifRight._.L106*C4466"/>
                            <sol:before>
                              <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if_ifRight_return.uint_bresult_0__-55.L105*C4428">
                                <sol:before>
                                  <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if_ifRight._.L104*C4379">
                                    <sol:hasReturnValue rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if_ifRight_return.uint_bresult_0__-55.L105*C4428"/>
                                    <sol:before>
                                      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if._bresult_0___65_&amp;&amp;_bresult_0___70_.L104*C4379">
                                        <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_if_ifWrong_if._bresult_0___65_&amp;&amp;_bresult_0___70_.L104*C4379"/>
                                        <sol:hasIfCondition>(bresult[0]&gt;=65)&amp;&amp;(bresult[0]&lt;=70)</sol:hasIfCondition>
                                      </sol:IfCondition>
                                    </sol:before>
                                  </sol:IfRight>
                                </sol:before>
                                <sol:returnText>uint(bresult[0])-55</sol:returnText>
                              </sol:ReturnValue>
                            </sol:before>
                            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#7_con_fun_if_ifWrong_if_ifWrong_if._bresult_0___97_&amp;&amp;_bresult_0___102_.L106*C4466"/>
                          </sol:FunctionIf>
                        </sol:hasIf>
                        <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if._bresult_0___65_&amp;&amp;_bresult_0___70_.L104*C4379"/>
                      </sol:IfWrong>
                    </sol:hasIfWrong>
                    <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if_ifRight._.L104*C4379"/>
                    <sol:before>
                      <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.uint_bresult_0__-48.L103*C4341">
                        <sol:before>
                          <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L102*C4292">
                            <sol:hasReturnValue rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.uint_bresult_0__-48.L103*C4341"/>
                            <sol:before>
                              <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if._bresult_0___48_&amp;&amp;_bresult_0___57_.L102*C4292">
                                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if._bresult_0___48_&amp;&amp;_bresult_0___57_.L102*C4292"/>
                                <sol:hasIfCondition>(bresult[0]&gt;=48)&amp;&amp;(bresult[0]&lt;=57)</sol:hasIfCondition>
                              </sol:IfCondition>
                            </sol:before>
                          </sol:IfRight>
                        </sol:before>
                        <sol:returnText>uint(bresult[0])-48</sol:returnText>
                      </sol:ReturnValue>
                    </sol:before>
                    <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if._bresult_0___65_&amp;&amp;_bresult_0___70_.L104*C4379"/>
                  </sol:FunctionIf>
                </sol:hasIf>
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if._bresult_0___48_&amp;&amp;_bresult_0___57_.L102*C4292"/>
              </sol:IfWrong>
            </sol:hasIfWrong>
            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L102*C4292"/>
            <sol:before>
              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemorybresult.L100*C4227">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.parseInt16Char.L99*C4159"/>
                <sol:storageLocate>memory</sol:storageLocate>
                <sol:valueIs>bytes(_char)</sol:valueIs>
                <sol:nameIs>bresult</sol:nameIs>
                <sol:typeName>bytes</sol:typeName>
              </sol:StateVar>
            </sol:before>
            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if._bresult_0___48_&amp;&amp;_bresult_0___57_.L102*C4292"/>
          </sol:FunctionIf>
        </sol:hasIf>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemorybresult.L100*C4227"/>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L99*C4209">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.uint.L99*C4218">
                <sol:typeName>uint</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:hasModifier>pure</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._char.L99*C4183">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_char</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>parseInt16Char</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.toEthereumSignedMessage.L120*C4965">
        <sol:callFunction>
          <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L122*C5076">
            <sol:before>
              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintlen.L121*C5044">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.toEthereumSignedMessage.L120*C4965"/>
                <sol:valueIs>bytes(_msg).length</sol:valueIs>
                <sol:nameIs>len</sol:nameIs>
                <sol:typeName>uint</sol:typeName>
              </sol:StateVar>
            </sol:before>
            <sol:callFunctionArgument>len&gt;0</sol:callFunctionArgument>
            <sol:callFunctionName>require</sol:callFunctionName>
          </sol:FunctionCall>
        </sol:callFunction>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L120*C5023">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.bytes32.L120*C5032">
                <sol:typeName>bytes32</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintlen.L121*C5044"/>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.keccak256_abi.encodePacked_prefix_uintToString_len___msg__.L124*C5152">
            <sol:before>
              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemoryprefix.L123*C5095">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L122*C5076"/>
                <sol:storageLocate>memory</sol:storageLocate>
                <sol:valueIs>"\x19Ethereum Signed Message:\n"</sol:valueIs>
                <sol:nameIs>prefix</sol:nameIs>
                <sol:typeName>bytes</sol:typeName>
              </sol:StateVar>
            </sol:before>
            <sol:returnText>keccak256(abi.encodePacked(prefix,uintToString(len),_msg))</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:nameIs>toEthereumSignedMessage</sol:nameIs>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._msg.L120*C4998">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_msg</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasModifier>pure</sol:hasModifier>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemoryprefix.L123*C5095"/>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.isSignedBy.L78*C3417">
        <sol:callFunction>
          <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L79*C3515">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.isSignedBy.L78*C3417"/>
            <sol:callFunctionArgument>_addr!=0x0</sol:callFunctionArgument>
            <sol:callFunctionName>require</sol:callFunctionName>
          </sol:FunctionCall>
        </sol:callFunction>
        <sol:nameIs>isSignedBy</sol:nameIs>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._sig.L78*C3457">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_sig</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._addr.L78*C3470">
            <sol:typeName>address</sol:typeName>
            <sol:nameIs>_addr</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._hashedMsg.L78*C3437">
            <sol:typeName>bytes32</sol:typeName>
            <sol:nameIs>_hashedMsg</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return._addr__recoverSigner__hashedMsg__sig_.L80*C3539">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L79*C3515"/>
            <sol:returnText>_addr==recoverSigner(_hashedMsg,_sig)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasModifier>pure</sol:hasModifier>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L78*C3497">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.bool.L78*C3506">
                <sol:typeName>bool</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>public</sol:hasModifier>
      </sol:Function>
    </sol:hasFunction>
  </sol:Library>
  <sol:Pragma rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_pragma.^0.4.23.L7*C271">
    <sol:pragmaValue>^0.4.23</sol:pragmaValue>
    <sol:pragmaName>solidity</sol:pragmaName>
  </sol:Pragma>
  <sol:Contract rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con.HumanStandardToken.L193*C7792">
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.approveAndCall.L218*C9188">
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.true.L225*C9922">
            <sol:before>
              <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L224*C9781">
                <sol:before>
                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.allowed_msg.sender___spender___value.L219*C9297">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.approveAndCall.L218*C9188"/>
                    <sol:assignSymbol>=</sol:assignSymbol>
                    <sol:assignRight>_value</sol:assignRight>
                    <sol:assignLeft>allowed[msg.sender][_spender]</sol:assignLeft>
                  </sol:Assignment>
                </sol:before>
                <sol:callFunctionArgument>_spender.call(bytes4(bytes32(keccak256("receiveApproval(address,uint256,address,bytes)"))),msg.sender,_value,this,_extraData)</sol:callFunctionArgument>
                <sol:callFunctionName>require</sol:callFunctionName>
              </sol:FunctionCall>
            </sol:before>
            <sol:returnText>true</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L224*C9781"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._extraData.L218*C9246">
            <sol:typeName>bytes</sol:typeName>
            <sol:nameIs>_extraData</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L218*C9271">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.success.L218*C9280">
                <sol:typeName>bool</sol:typeName>
                <sol:nameIs>success</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._value.L218*C9230">
            <sol:typeName>uint256</sol:typeName>
            <sol:nameIs>_value</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._spender.L218*C9212">
            <sol:typeName>address</sol:typeName>
            <sol:nameIs>_spender</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.allowed_msg.sender___spender___value.L219*C9297"/>
        <sol:nameIs>approveAndCall</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:defineConstructor>
      <sol:Constructor rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_constructor._.L205*C8566">
        <sol:hasModifier>public</sol:hasModifier>
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.decimals__decimalUnits.L214*C8941">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.name__tokenName.L213*C8850">
                <sol:before>
                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.totalSupply__initialAmount.L212*C8773">
                    <sol:before>
                      <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.balances_msg.sender___initialAmount.L211*C8680">
                        <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_constructor._.L205*C8566"/>
                        <sol:assignSymbol>=</sol:assignSymbol>
                        <sol:assignRight>_initialAmount</sol:assignRight>
                        <sol:assignLeft>balances[msg.sender]</sol:assignLeft>
                      </sol:Assignment>
                    </sol:before>
                    <sol:assignSymbol>=</sol:assignSymbol>
                    <sol:assignRight>_initialAmount</sol:assignRight>
                    <sol:assignLeft>totalSupply</sol:assignLeft>
                  </sol:Assignment>
                </sol:before>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>_tokenName</sol:assignRight>
                <sol:assignLeft>name</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>_decimalUnits</sol:assignRight>
            <sol:assignLeft>decimals</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.symbol__tokenSymbol.L215*C9038">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.decimals__decimalUnits.L214*C8941"/>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>_tokenSymbol</sol:assignRight>
            <sol:assignLeft>symbol</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_constructor_param._decimalUnits.L208*C8625">
            <sol:typeName>uint8</sol:typeName>
            <sol:nameIs>_decimalUnits</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_constructor_param._initialAmount.L206*C8580">
            <sol:typeName>uint256</sol:typeName>
            <sol:nameIs>_initialAmount</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_constructor_param._tokenName.L207*C8605">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_tokenName</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_constructor_param._tokenSymbol.L209*C8647">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_tokenSymbol</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.name__tokenName.L213*C8850"/>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.balances_msg.sender___initialAmount.L211*C8680"/>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.totalSupply__initialAmount.L212*C8773"/>
      </sol:Constructor>
    </sol:defineConstructor>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_sv.version.L204*C8468">
        <sol:hasModifier>public</sol:hasModifier>
        <sol:valueIs>'H0.1'</sol:valueIs>
        <sol:typeName>string</sol:typeName>
        <sol:nameIs>version</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_sv.symbol.L203*C8405">
        <sol:hasModifier>public</sol:hasModifier>
        <sol:typeName>string</sol:typeName>
        <sol:nameIs>symbol</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_sv.decimals.L202*C8214">
        <sol:hasModifier>public</sol:hasModifier>
        <sol:typeName>uint8</sol:typeName>
        <sol:nameIs>decimals</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_sv.name.L201*C8146">
        <sol:hasModifier>public</sol:hasModifier>
        <sol:typeName>string</sol:typeName>
        <sol:nameIs>name</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:inherit>StandardToken</sol:inherit>
    <sol:nameIs>HumanStandardToken</sol:nameIs>
  </sol:Contract>
  <sol:Contract rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con.StandardToken.L157*C6125">
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.transferFrom.L169*C6709">
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._value.L169*C6759">
            <sol:typeName>uint256</sol:typeName>
            <sol:nameIs>_value</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.true.L177*C7237">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.allowed__from__msg.sender_-__value.L175*C7162">
                <sol:before>
                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.balances__from_-__value.L174*C7134">
                    <sol:before>
                      <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.balances__to____value.L173*C7108">
                        <sol:before>
                          <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L172*C7031">
                            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.transferFrom.L169*C6709"/>
                            <sol:callFunctionArgument>balances[_from]&gt;=_value&amp;&amp;allowed[_from][msg.sender]&gt;=_value</sol:callFunctionArgument>
                            <sol:callFunctionName>require</sol:callFunctionName>
                          </sol:FunctionCall>
                        </sol:before>
                        <sol:assignSymbol>=</sol:assignSymbol>
                        <sol:assignRight>balances[_to]+_value</sol:assignRight>
                        <sol:assignLeft>balances[_to]</sol:assignLeft>
                      </sol:Assignment>
                    </sol:before>
                    <sol:assignSymbol>=</sol:assignSymbol>
                    <sol:assignRight>balances[_from]-_value</sol:assignRight>
                    <sol:assignLeft>balances[_from]</sol:assignLeft>
                  </sol:Assignment>
                </sol:before>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>allowed[_from][msg.sender]-_value</sol:assignRight>
                <sol:assignLeft>allowed[_from][msg.sender]</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:returnText>true</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._from.L169*C6731">
            <sol:typeName>address</sol:typeName>
            <sol:nameIs>_from</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L172*C7031"/>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:nameIs>transferFrom</sol:nameIs>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.balances__from_-__value.L174*C7134"/>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.balances__to____value.L173*C7108"/>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.allowed__from__msg.sender_-__value.L175*C7162"/>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L169*C6782">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.success.L169*C6791">
                <sol:typeName>bool</sol:typeName>
                <sol:nameIs>success</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._to.L169*C6746">
            <sol:typeName>address</sol:typeName>
            <sol:nameIs>_to</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.approve.L182*C7363">
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.true.L185*C7534">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.allowed_msg.sender___spender___value.L183*C7447">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.approve.L182*C7363"/>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>_value</sol:assignRight>
                <sol:assignLeft>allowed[msg.sender][_spender]</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:returnText>true</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.allowed_msg.sender___spender___value.L183*C7447"/>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L182*C7421">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.success.L182*C7430">
                <sol:typeName>bool</sol:typeName>
                <sol:nameIs>success</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._value.L182*C7398">
            <sol:typeName>uint256</sol:typeName>
            <sol:nameIs>_value</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._spender.L182*C7380">
            <sol:typeName>address</sol:typeName>
            <sol:nameIs>_spender</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>approve</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:nameIs>StandardToken</sol:nameIs>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.balanceOf.L179*C7254">
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.balances__owner_.L180*C7334">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.balanceOf.L179*C7254"/>
            <sol:returnText>balances[_owner]</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L179*C7305">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.balance.L179*C7314">
                <sol:typeName>uint256</sol:typeName>
                <sol:nameIs>balance</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._owner.L179*C7273">
            <sol:typeName>address</sol:typeName>
            <sol:nameIs>_owner</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>balanceOf</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_sv.allowed.L191*C7729">
        <sol:elementTypeName2>mapping(address=&gt;uint256)</sol:elementTypeName2>
        <sol:elementTypeName1>address</sol:elementTypeName1>
        <sol:typeName>mapping</sol:typeName>
        <sol:nameIs>allowed</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.allowance.L187*C7551">
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.allowed__owner___spender_.L188*C7651">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.allowance.L187*C7551"/>
            <sol:returnText>allowed[_owner][_spender]</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L187*C7620">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.remaining.L187*C7629">
                <sol:typeName>uint256</sol:typeName>
                <sol:nameIs>remaining</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._spender.L187*C7586">
            <sol:typeName>address</sol:typeName>
            <sol:nameIs>_spender</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._owner.L187*C7570">
            <sol:typeName>address</sol:typeName>
            <sol:nameIs>_owner</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>allowance</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_sv.balances.L190*C7689">
        <sol:elementTypeName2>uint256</sol:elementTypeName2>
        <sol:elementTypeName1>address</sol:elementTypeName1>
        <sol:typeName>mapping</sol:typeName>
        <sol:nameIs>balances</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:inherit>Token</sol:inherit>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.transfer.L158*C6160">
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._value.L158*C6191">
            <sol:typeName>uint256</sol:typeName>
            <sol:nameIs>_value</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>transfer</sol:nameIs>
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.balances__to____value.L165*C6625">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.balances_msg.sender_-__value.L164*C6592">
                <sol:before>
                  <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L163*C6550">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.transfer.L158*C6160"/>
                    <sol:callFunctionArgument>balances[msg.sender]&gt;=_value</sol:callFunctionArgument>
                    <sol:callFunctionName>require</sol:callFunctionName>
                  </sol:FunctionCall>
                </sol:before>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>balances[msg.sender]-_value</sol:assignRight>
                <sol:assignLeft>balances[msg.sender]</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>balances[_to]+_value</sol:assignRight>
            <sol:assignLeft>balances[_to]</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.true.L167*C6692">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.balances__to____value.L165*C6625"/>
            <sol:returnText>true</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.balances_msg.sender_-__value.L164*C6592"/>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L158*C6214">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.success.L158*C6223">
                <sol:typeName>bool</sol:typeName>
                <sol:nameIs>success</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L163*C6550"/>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._to.L158*C6178">
            <sol:typeName>address</sol:typeName>
            <sol:nameIs>_to</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
      </sol:Function>
    </sol:hasFunction>
  </sol:Contract>
  <sol:Contract rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con.LedgerChannel.L228*C9942">
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.updateLCstate.L473*C18811">
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.channel.sequence_updateParams_0_.L508*C19868">
            <sol:before>
              <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L506*C19771">
                <sol:before>
                  <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L505*C19694">
                    <sol:before>
                      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes32_state.L490*C19450">
                        <sol:before>
                          <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L488*C19406">
                            <sol:before>
                              <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L487*C19364">
                                <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L488*C19406"/>
                                <sol:before>
                                  <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.channel.isUpdateLCSettling__true.L487*C19364">
                                    <sol:before>
                                      <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.channel.isUpdateLCSettling__true.L487*C19364">
                                        <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L487*C19364"/>
                                        <sol:before>
                                          <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L486*C19264">
                                            <sol:before>
                                              <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L485*C19168">
                                                <sol:before>
                                                  <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L484*C19090">
                                                    <sol:before>
                                                      <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L483*C19064">
                                                        <sol:before>
                                                          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.Channelstoragechannel.L482*C19020">
                                                            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.updateLCstate.L473*C18811"/>
                                                            <sol:storageLocate
                                                            >storage</sol:storageLocate>
                                                            <sol:valueIs
                                                            >Channels[_lcID]</sol:valueIs>
                                                            <sol:nameIs
                                                            >channel</sol:nameIs>
                                                            <sol:typeName
                                                            >Channel</sol:typeName>
                                                          </sol:StateVar>
                                                        </sol:before>
                                                        <sol:callFunctionArgument
                                                        >channel.isOpen</sol:callFunctionArgument>
                                                        <sol:callFunctionName
                                                        >require</sol:callFunctionName>
                                                      </sol:FunctionCall>
                                                    </sol:before>
                                                    <sol:callFunctionArgument
                                                    >channel.sequence&lt;updateParams[0]</sol:callFunctionArgument>
                                                    <sol:callFunctionName
                                                    >require</sol:callFunctionName>
                                                  </sol:FunctionCall>
                                                </sol:before>
                                                <sol:callFunctionArgument
                                                >channel.ethBalances[0]+channel.ethBalances[1]&gt;=updateParams[2]+updateParams[3]</sol:callFunctionArgument>
                                                <sol:callFunctionName
                                                >require</sol:callFunctionName>
                                              </sol:FunctionCall>
                                            </sol:before>
                                            <sol:callFunctionArgument
                                            >channel.erc20Balances[0]+channel.erc20Balances[1]&gt;=updateParams[4]+updateParams[5]</sol:callFunctionArgument>
                                            <sol:callFunctionName
                                            >require</sol:callFunctionName>
                                          </sol:FunctionCall>
                                        </sol:before>
                                        <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.channel.isUpdateLCSettling__true.L487*C19364"/>
                                      </sol:FunctionIf>
                                    </sol:before>
                                    <sol:hasIfCondition>channel.isUpdateLCSettling==true</sol:hasIfCondition>
                                  </sol:IfCondition>
                                </sol:before>
                              </sol:IfRight>
                            </sol:before>
                            <sol:callFunctionArgument>channel.updateLCtimeout&gt;now</sol:callFunctionArgument>
                            <sol:callFunctionName>require</sol:callFunctionName>
                          </sol:FunctionCall>
                        </sol:before>
                        <sol:valueIs>keccak256(abi.encodePacked(_lcID,false,updateParams[0],updateParams[1],_VCroot,channel.partyAddresses[0],channel.partyAddresses[1],updateParams[2],updateParams[3],updateParams[4],updateParams[5]))</sol:valueIs>
                        <sol:nameIs>_state</sol:nameIs>
                        <sol:typeName>bytes32</sol:typeName>
                      </sol:StateVar>
                    </sol:before>
                    <sol:callFunctionArgument>channel.partyAddresses[0]==ECTools.recoverSigner(_state,_sigA)</sol:callFunctionArgument>
                    <sol:callFunctionName>require</sol:callFunctionName>
                  </sol:FunctionCall>
                </sol:before>
                <sol:callFunctionArgument>channel.partyAddresses[1]==ECTools.recoverSigner(_state,_sigI)</sol:callFunctionArgument>
                <sol:callFunctionName>require</sol:callFunctionName>
              </sol:FunctionCall>
            </sol:before>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>updateParams[0]</sol:assignRight>
            <sol:assignLeft>channel.sequence</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L506*C19771"/>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L483*C19064"/>
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.channel.ethBalances_1__updateParams_3_.L511*C19986">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.channel.ethBalances_0__updateParams_2_.L510*C19943">
                <sol:before>
                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.channel.numOpenVC_updateParams_1_.L509*C19905">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.channel.sequence_updateParams_0_.L508*C19868"/>
                    <sol:assignSymbol>=</sol:assignSymbol>
                    <sol:assignRight>updateParams[1]</sol:assignRight>
                    <sol:assignLeft>channel.numOpenVC</sol:assignLeft>
                  </sol:Assignment>
                </sol:before>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>updateParams[2]</sol:assignRight>
                <sol:assignLeft>channel.ethBalances[0]</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>updateParams[3]</sol:assignRight>
            <sol:assignLeft>channel.ethBalances[1]</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes32_state.L490*C19450"/>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L484*C19090"/>
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.channel.VCrootHash__VCroot.L514*C20119">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.channel.erc20Balances_1__updateParams_5_.L513*C20074">
                <sol:before>
                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.channel.erc20Balances_0__updateParams_4_.L512*C20029">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.channel.ethBalances_1__updateParams_3_.L511*C19986"/>
                    <sol:assignSymbol>=</sol:assignSymbol>
                    <sol:assignRight>updateParams[4]</sol:assignRight>
                    <sol:assignLeft>channel.erc20Balances[0]</sol:assignLeft>
                  </sol:Assignment>
                </sol:before>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>updateParams[5]</sol:assignRight>
                <sol:assignLeft>channel.erc20Balances[1]</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>_VCroot</sol:assignRight>
            <sol:assignLeft>channel.VCrootHash</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.channel.isUpdateLCSettling__true.L487*C19364"/>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L505*C19694"/>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L485*C19168"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._sigI.L478*C18992">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_sigI</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.channel.ethBalances_0__updateParams_2_.L510*C19943"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._sigA.L477*C18977">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_sigA</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.channel.updateLCtimeout_now_channel.confirmTime.L516*C20186">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.channel.isUpdateLCSettling_true.L515*C20150">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.channel.VCrootHash__VCroot.L514*C20119"/>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>true</sol:assignRight>
                <sol:assignLeft>channel.isUpdateLCSettling</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>now+channel.confirmTime</sol:assignRight>
            <sol:assignLeft>channel.updateLCtimeout</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:nameIs>updateLCstate</sol:nameIs>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._lcID.L474*C18836">
            <sol:typeName>bytes32</sol:typeName>
            <sol:nameIs>_lcID</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.channel.isUpdateLCSettling_true.L515*C20150"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._VCroot.L476*C18959">
            <sol:typeName>bytes32</sol:typeName>
            <sol:nameIs>_VCroot</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.Channelstoragechannel.L482*C19020"/>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L486*C19264"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.updateParams.L475*C18852">
            <sol:typeName>uint256[6]</sol:typeName>
            <sol:nameIs>updateParams</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.channel.numOpenVC_updateParams_1_.L509*C19905"/>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.channel.erc20Balances_0__updateParams_4_.L512*C20029"/>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.channel.erc20Balances_1__updateParams_5_.L513*C20074"/>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.getVirtualChannel.L750*C29477">
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return._virtualChannel.isClose_virtualChannel.isInSettlementState_virtualChannel.sequence_virtualChannel.challenger_virtualChannel.updateVCtimeout_virtualChannel.partyA_virtualChannel.partyB_virtualChannel.partyI_virtualChannel.ethBalances_virtualChannel.erc20Balances_virtualChannel.bond_.L764*C29716">
            <sol:before>
              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.VirtualChannelmemoryvirtualChannel.L763*C29655">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.getVirtualChannel.L750*C29477"/>
                <sol:storageLocate>memory</sol:storageLocate>
                <sol:valueIs>virtualChannels[id]</sol:valueIs>
                <sol:nameIs>virtualChannel</sol:nameIs>
                <sol:typeName>VirtualChannel</sol:typeName>
              </sol:StateVar>
            </sol:before>
            <sol:returnText>(virtualChannel.isClose,virtualChannel.isInSettlementState,virtualChannel.sequence,virtualChannel.challenger,virtualChannel.updateVCtimeout,virtualChannel.partyA,virtualChannel.partyB,virtualChannel.partyI,virtualChannel.ethBalances,virtualChannel.erc20Balances,virtualChannel.bond)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.VirtualChannelmemoryvirtualChannel.L763*C29655"/>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L750*C29528">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.address.L756*C29582">
                <sol:typeName>address</sol:typeName>
              </sol:Param>
            </sol:hasParam>
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.uint256[2].L761*C29638">
                <sol:typeName>uint256[2]</sol:typeName>
              </sol:Param>
            </sol:hasParam>
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.address.L757*C29592">
                <sol:typeName>address</sol:typeName>
              </sol:Param>
            </sol:hasParam>
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.uint256[2].L760*C29625">
                <sol:typeName>uint256[2]</sol:typeName>
              </sol:Param>
            </sol:hasParam>
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.bool.L752*C29545">
                <sol:typeName>bool</sol:typeName>
              </sol:Param>
            </sol:hasParam>
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.uint256.L755*C29572">
                <sol:typeName>uint256</sol:typeName>
              </sol:Param>
            </sol:hasParam>
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.address.L758*C29602">
                <sol:typeName>address</sol:typeName>
              </sol:Param>
            </sol:hasParam>
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.bool.L751*C29538">
                <sol:typeName>bool</sol:typeName>
              </sol:Param>
            </sol:hasParam>
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.uint256[2].L759*C29612">
                <sol:typeName>uint256[2]</sol:typeName>
              </sol:Param>
            </sol:hasParam>
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.uint256.L753*C29552">
                <sol:typeName>uint256</sol:typeName>
              </sol:Param>
            </sol:hasParam>
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.address.L754*C29562">
                <sol:typeName>address</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:hasModifier>view</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.id.L750*C29504">
            <sol:typeName>bytes32</sol:typeName>
            <sol:nameIs>id</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>getVirtualChannel</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.consensusCloseChannel.L427*C17026">
        <sol:hasIf>
          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if._balances_0_!_0___balances_1_!_0.L461*C18190">
            <sol:hasIfRight>
              <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L461*C18190">
                <sol:callFunction>
                  <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.Channels__lcID_.partyAddresses_1_.transfer.L463*C18295">
                    <sol:before>
                      <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.Channels__lcID_.partyAddresses_0_.transfer.L462*C18236">
                        <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L461*C18190"/>
                        <sol:callFunctionArgument>_balances[0]</sol:callFunctionArgument>
                        <sol:callFunctionName>transfer</sol:callFunctionName>
                        <sol:callFunctionObject>Channels[_lcID].partyAddresses[0]</sol:callFunctionObject>
                      </sol:FunctionCall>
                    </sol:before>
                    <sol:callFunctionArgument>_balances[1]</sol:callFunctionArgument>
                    <sol:callFunctionName>transfer</sol:callFunctionName>
                    <sol:callFunctionObject>Channels[_lcID].partyAddresses[1]</sol:callFunctionObject>
                  </sol:FunctionCall>
                </sol:callFunction>
                <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.Channels__lcID_.partyAddresses_0_.transfer.L462*C18236"/>
                <sol:before>
                  <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if._balances_0_!_0___balances_1_!_0.L461*C18190">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if._balances_0_!_0___balances_1_!_0.L461*C18190"/>
                    <sol:hasIfCondition>_balances[0]!=0||_balances[1]!=0</sol:hasIfCondition>
                  </sol:IfCondition>
                </sol:before>
              </sol:IfRight>
            </sol:hasIfRight>
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.Channels__lcID_.isOpen_false.L460*C18157">
                <sol:before>
                  <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L459*C18072">
                    <sol:before>
                      <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L458*C17987">
                        <sol:before>
                          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes32_state.L443*C17746">
                            <sol:before>
                              <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L442*C17686">
                                <sol:before>
                                  <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L441*C17628">
                                    <sol:before>
                                      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uint256totalTokenDeposit.L440*C17494">
                                        <sol:before>
                                          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uint256totalEthDeposit.L439*C17366">
                                            <sol:before>
                                              <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L438*C17324">
                                                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.consensusCloseChannel.L427*C17026"/>
                                                <sol:callFunctionArgument
                                                >Channels[_lcID].isOpen==true</sol:callFunctionArgument>
                                                <sol:callFunctionName
                                                >require</sol:callFunctionName>
                                              </sol:FunctionCall>
                                            </sol:before>
                                            <sol:valueIs>Channels[_lcID].initialDeposit[0]+Channels[_lcID].ethBalances[2]+Channels[_lcID].ethBalances[3]</sol:valueIs>
                                            <sol:nameIs>totalEthDeposit</sol:nameIs>
                                            <sol:typeName>uint256</sol:typeName>
                                          </sol:StateVar>
                                        </sol:before>
                                        <sol:valueIs>Channels[_lcID].initialDeposit[1]+Channels[_lcID].erc20Balances[2]+Channels[_lcID].erc20Balances[3]</sol:valueIs>
                                        <sol:nameIs>totalTokenDeposit</sol:nameIs>
                                        <sol:typeName>uint256</sol:typeName>
                                      </sol:StateVar>
                                    </sol:before>
                                    <sol:callFunctionArgument
                                    >totalEthDeposit==_balances[0]+_balances[1]</sol:callFunctionArgument>
                                    <sol:callFunctionName>require</sol:callFunctionName>
                                  </sol:FunctionCall>
                                </sol:before>
                                <sol:callFunctionArgument>totalTokenDeposit==_balances[2]+_balances[3]</sol:callFunctionArgument>
                                <sol:callFunctionName>require</sol:callFunctionName>
                              </sol:FunctionCall>
                            </sol:before>
                            <sol:valueIs>keccak256(abi.encodePacked(_lcID,true,_sequence,uint256(0),bytes32(0x0),Channels[_lcID].partyAddresses[0],Channels[_lcID].partyAddresses[1],_balances[0],_balances[1],_balances[2],_balances[3]))</sol:valueIs>
                            <sol:nameIs>_state</sol:nameIs>
                            <sol:typeName>bytes32</sol:typeName>
                          </sol:StateVar>
                        </sol:before>
                        <sol:callFunctionArgument>Channels[_lcID].partyAddresses[0]==ECTools.recoverSigner(_state,_sigA)</sol:callFunctionArgument>
                        <sol:callFunctionName>require</sol:callFunctionName>
                      </sol:FunctionCall>
                    </sol:before>
                    <sol:callFunctionArgument>Channels[_lcID].partyAddresses[1]==ECTools.recoverSigner(_state,_sigI)</sol:callFunctionArgument>
                    <sol:callFunctionName>require</sol:callFunctionName>
                  </sol:FunctionCall>
                </sol:before>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>false</sol:assignRight>
                <sol:assignLeft>Channels[_lcID].isOpen</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if._balances_0_!_0___balances_1_!_0.L461*C18190"/>
          </sol:FunctionIf>
        </sol:hasIf>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._balances.L430*C17095">
            <sol:typeName>uint256[4]</sol:typeName>
            <sol:nameIs>_balances</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.Channels__lcID_.isOpen_false.L460*C18157"/>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L442*C17686"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._sigI.L432*C17197">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_sigI</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uint256totalEthDeposit.L439*C17366"/>
        <sol:operateVarible>
          <sol:VariableOperation rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprVaribleOp.numChannels--.L469*C18676">
            <sol:before>
              <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L467*C18538">
                <sol:before>
                  <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L466*C18403">
                    <sol:before>
                      <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L465*C18357">
                        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L467*C18538"/>
                        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L466*C18403"/>
                        <sol:before>
                          <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if._balances_2_!_0___balances_3_!_0.L465*C18357">
                            <sol:before>
                              <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if._balances_2_!_0___balances_3_!_0.L465*C18357">
                                <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L465*C18357"/>
                                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.Channels__lcID_.partyAddresses_1_.transfer.L463*C18295"/>
                                <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if._balances_2_!_0___balances_3_!_0.L465*C18357"/>
                              </sol:FunctionIf>
                            </sol:before>
                            <sol:hasIfCondition>_balances[2]!=0||_balances[3]!=0</sol:hasIfCondition>
                          </sol:IfCondition>
                        </sol:before>
                      </sol:IfRight>
                    </sol:before>
                    <sol:callFunctionArgument>Channels[_lcID].token.transfer(Channels[_lcID].partyAddresses[0],_balances[2]),"happyCloseChannel: token transfer failure"</sol:callFunctionArgument>
                    <sol:callFunctionName>require</sol:callFunctionName>
                  </sol:FunctionCall>
                </sol:before>
                <sol:callFunctionArgument>Channels[_lcID].token.transfer(Channels[_lcID].partyAddresses[1],_balances[3]),"happyCloseChannel: token transfer failure"</sol:callFunctionArgument>
                <sol:callFunctionName>require</sol:callFunctionName>
              </sol:FunctionCall>
            </sol:before>
            <sol:opSymbol>--</sol:opSymbol>
            <sol:opVarible>numChannels</sol:opVarible>
          </sol:VariableOperation>
        </sol:operateVarible>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes32_state.L443*C17746"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._sigA.L431*C17182">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_sigA</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._sequence.L429*C17075">
            <sol:typeName>uint256</sol:typeName>
            <sol:nameIs>_sequence</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>consensusCloseChannel</sol:nameIs>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L441*C17628"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uint256totalTokenDeposit.L440*C17494"/>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L438*C17324"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._lcID.L428*C17059">
            <sol:typeName>bytes32</sol:typeName>
            <sol:nameIs>_lcID</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if._balances_2_!_0___balances_3_!_0.L465*C18357"/>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L459*C18072"/>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L458*C17987"/>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun._isContained.L706*C28512">
        <sol:hasModifier>pure</sol:hasModifier>
        <sol:hasFor>
          <sol:FunctionFor rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for.for_uint256i_64i___proof.lengthi__32__assembly_proofElem:_mload_add__proof_i___if_cursor_proofElem__cursor_keccak256_abi.encodePacked_cursor_proofElem___else_cursor_keccak256_abi.encodePacked_proofElem_cursor____.L709*C28655">
            <sol:conditionStep>i+=32</sol:conditionStep>
            <sol:hasForCondition>
              <sol:ForCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.i___proof.length.L709*C28655">
                <sol:conditionValue>_proof.length</sol:conditionValue>
                <sol:conditionSymbol>&lt;=</sol:conditionSymbol>
              </sol:ForCondition>
            </sol:hasForCondition>
            <sol:conditionVar>i</sol:conditionVar>
            <sol:hasStateVar>
              <sol:stateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.uint256i.L709*C28655">
                <sol:valueIs>64</sol:valueIs>
                <sol:nameIs>i</sol:nameIs>
                <sol:typeName>uint256</sol:typeName>
              </sol:stateVar>
            </sol:hasStateVar>
            <sol:hasIf>
              <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_for_if.cursor_proofElem.L711*C28757">
                <sol:hasIfWrong>
                  <sol:IfWrong rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if_ifWrong._.L711*C28757">
                    <sol:containAssignment>
                      <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.cursor_keccak256_abi.encodePacked_proofElem_cursor__.L714*C28852">
                        <sol:before>
                          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.cursor_keccak256_abi.encodePacked_cursor_proofElem__.L712*C28784">
                            <sol:before>
                              <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if_ifRight._.L711*C28757">
                                <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.cursor_keccak256_abi.encodePacked_cursor_proofElem__.L712*C28784"/>
                                <sol:before>
                                  <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if.cursor_proofElem.L711*C28757">
                                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_for_if.cursor_proofElem.L711*C28757"/>
                                    <sol:hasIfCondition>cursor&lt;proofElem</sol:hasIfCondition>
                                  </sol:IfCondition>
                                </sol:before>
                              </sol:IfRight>
                            </sol:before>
                            <sol:assignSymbol>=</sol:assignSymbol>
                            <sol:assignRight>keccak256(abi.encodePacked(cursor,proofElem))</sol:assignRight>
                            <sol:assignLeft>cursor</sol:assignLeft>
                          </sol:Assignment>
                        </sol:before>
                        <sol:assignSymbol>=</sol:assignSymbol>
                        <sol:assignRight>keccak256(abi.encodePacked(proofElem,cursor))</sol:assignRight>
                        <sol:assignLeft>cursor</sol:assignLeft>
                      </sol:Assignment>
                    </sol:containAssignment>
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if.cursor_proofElem.L711*C28757"/>
                  </sol:IfWrong>
                </sol:hasIfWrong>
                <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if_ifRight._.L711*C28757"/>
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for.for_uint256i_64i___proof.lengthi__32__assembly_proofElem:_mload_add__proof_i___if_cursor_proofElem__cursor_keccak256_abi.encodePacked_cursor_proofElem___else_cursor_keccak256_abi.encodePacked_proofElem_cursor____.L709*C28655"/>
                <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if.cursor_proofElem.L711*C28757"/>
              </sol:FunctionIf>
            </sol:hasIf>
            <sol:before>
              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes32proofElem.L708*C28635">
                <sol:before>
                  <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes32cursor.L707*C28610">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun._isContained.L706*C28512"/>
                    <sol:valueIs>_hash</sol:valueIs>
                    <sol:nameIs>cursor</sol:nameIs>
                    <sol:typeName>bytes32</sol:typeName>
                  </sol:StateVar>
                </sol:before>
                <sol:valueIs>null</sol:valueIs>
                <sol:nameIs>proofElem</sol:nameIs>
                <sol:typeName>bytes32</sol:typeName>
              </sol:StateVar>
            </sol:before>
          </sol:FunctionFor>
        </sol:hasFor>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes32cursor.L707*C28610"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._hash.L706*C28534">
            <sol:typeName>bytes32</sol:typeName>
            <sol:nameIs>_hash</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>_isContained</sol:nameIs>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._proof.L706*C28549">
            <sol:typeName>bytes</sol:typeName>
            <sol:nameIs>_proof</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._root.L706*C28563">
            <sol:typeName>bytes32</sol:typeName>
            <sol:nameIs>_root</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.cursor___root.L717*C28916">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.cursor_keccak256_abi.encodePacked_proofElem_cursor__.L714*C28852"/>
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.cursor_keccak256_abi.encodePacked_cursor_proofElem__.L712*C28784"/>
            <sol:returnText>cursor==_root</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes32proofElem.L708*C28635"/>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L706*C28592">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.bool.L706*C28601">
                <sol:typeName>bool</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.initVCstate.L531*C20510">
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._partyA.L535*C20580">
            <sol:typeName>address</sol:typeName>
            <sol:nameIs>_partyA</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._lcID.L532*C20533">
            <sol:typeName>bytes32</sol:typeName>
            <sol:nameIs>_lcID</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.virtualChannels__vcID_.erc20Balances_1___balances_3_.L564*C21936">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.virtualChannels__vcID_.erc20Balances_0___balances_2_.L563*C21879">
                <sol:before>
                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.virtualChannels__vcID_.ethBalances_1___balances_1_.L562*C21824">
                    <sol:before>
                      <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.virtualChannels__vcID_.ethBalances_0___balances_0_.L561*C21769">
                        <sol:before>
                          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.virtualChannels__vcID_.sequence_uint256_0_.L560*C21722">
                            <sol:before>
                              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.virtualChannels__vcID_.partyB__partyB.L559*C21660">
                                <sol:before>
                                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.virtualChannels__vcID_.partyA__partyA.L558*C21598">
                                    <sol:before>
                                      <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L557*C21518">
                                        <sol:before>
                                          <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L555*C21413">
                                            <sol:before>
                                              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes32_initState.L551*C21179">
                                                <sol:before>
                                                  <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L549*C21099">
                                                    <sol:before>
                                                      <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L547*C20982">
                                                        <sol:before>
                                                          <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L545*C20829">
                                                            <sol:before>
                                                              <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L543*C20749">
    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.initVCstate.L531*C20510"/>
    <sol:callFunctionArgument>Channels[_lcID].isOpen,"LC is closed."</sol:callFunctionArgument>
    <sol:callFunctionName>require</sol:callFunctionName>      </sol:FunctionCall>
                                                            </sol:before>
                                                            <sol:callFunctionArgument
                                                            >!virtualChannels[_vcID].isClose,"VC is closed."</sol:callFunctionArgument>
                                                            <sol:callFunctionName
                                                            >require</sol:callFunctionName>
                                                          </sol:FunctionCall>
                                                        </sol:before>
                                                        <sol:callFunctionArgument
                                                        >Channels[_lcID].updateLCtimeout&lt;now,"LC timeout not over."</sol:callFunctionArgument>
                                                        <sol:callFunctionName
                                                        >require</sol:callFunctionName>
                                                      </sol:FunctionCall>
                                                    </sol:before>
                                                    <sol:callFunctionArgument
                                                    >virtualChannels[_vcID].updateVCtimeout==0</sol:callFunctionArgument>
                                                    <sol:callFunctionName
                                                    >require</sol:callFunctionName>
                                                  </sol:FunctionCall>
                                                </sol:before>
                                                <sol:valueIs>keccak256(abi.encodePacked(_vcID,uint256(0),_partyA,_partyB,_bond[0],_bond[1],_balances[0],_balances[1],_balances[2],_balances[3]))</sol:valueIs>
                                                <sol:nameIs>_initState</sol:nameIs>
                                                <sol:typeName
                                                >bytes32</sol:typeName>
                                              </sol:StateVar>
                                            </sol:before>
                                            <sol:callFunctionArgument
                                            >_partyA==ECTools.recoverSigner(_initState,sigA)</sol:callFunctionArgument>
                                            <sol:callFunctionName
                                            >require</sol:callFunctionName>
                                          </sol:FunctionCall>
                                        </sol:before>
                                        <sol:callFunctionArgument
                                        >_isContained(_initState,_proof,Channels[_lcID].VCrootHash)==true</sol:callFunctionArgument>
                                        <sol:callFunctionName
                                        >require</sol:callFunctionName>
                                      </sol:FunctionCall>
                                    </sol:before>
                                    <sol:assignSymbol>=</sol:assignSymbol>
                                    <sol:assignRight>_partyA</sol:assignRight>
                                    <sol:assignLeft>virtualChannels[_vcID].partyA</sol:assignLeft>
                                  </sol:Assignment>
                                </sol:before>
                                <sol:assignSymbol>=</sol:assignSymbol>
                                <sol:assignRight>_partyB</sol:assignRight>
                                <sol:assignLeft>virtualChannels[_vcID].partyB</sol:assignLeft>
                              </sol:Assignment>
                            </sol:before>
                            <sol:assignSymbol>=</sol:assignSymbol>
                            <sol:assignRight>uint256(0)</sol:assignRight>
                            <sol:assignLeft>virtualChannels[_vcID].sequence</sol:assignLeft>
                          </sol:Assignment>
                        </sol:before>
                        <sol:assignSymbol>=</sol:assignSymbol>
                        <sol:assignRight>_balances[0]</sol:assignRight>
                        <sol:assignLeft>virtualChannels[_vcID].ethBalances[0]</sol:assignLeft>
                      </sol:Assignment>
                    </sol:before>
                    <sol:assignSymbol>=</sol:assignSymbol>
                    <sol:assignRight>_balances[1]</sol:assignRight>
                    <sol:assignLeft>virtualChannels[_vcID].ethBalances[1]</sol:assignLeft>
                  </sol:Assignment>
                </sol:before>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>_balances[2]</sol:assignRight>
                <sol:assignLeft>virtualChannels[_vcID].erc20Balances[0]</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>_balances[3]</sol:assignRight>
            <sol:assignLeft>virtualChannels[_vcID].erc20Balances[1]</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.virtualChannels__vcID_.ethBalances_1___balances_1_.L562*C21824"/>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L545*C20829"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes32_initState.L551*C21179"/>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L547*C20982"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._proof.L534*C20565">
            <sol:typeName>bytes</sol:typeName>
            <sol:nameIs>_proof</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.virtualChannels__vcID_.bond__bond.L565*C21993">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.virtualChannels__vcID_.erc20Balances_1___balances_3_.L564*C21936"/>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>_bond</sol:assignRight>
            <sol:assignLeft>virtualChannels[_vcID].bond</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L555*C21413"/>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.virtualChannels__vcID_.sequence_uint256_0_.L560*C21722"/>
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.virtualChannels__vcID_.isInSettlementState_true.L567*C22108">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.virtualChannels__vcID_.updateVCtimeout_now_Channels__lcID_.confirmTime.L566*C22031">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.virtualChannels__vcID_.bond__bond.L565*C21993"/>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>now+Channels[_lcID].confirmTime</sol:assignRight>
                <sol:assignLeft>virtualChannels[_vcID].updateVCtimeout</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>true</sol:assignRight>
            <sol:assignLeft>virtualChannels[_vcID].isInSettlementState</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L549*C21099"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._vcID.L533*C20549">
            <sol:typeName>bytes32</sol:typeName>
            <sol:nameIs>_vcID</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.sigA.L539*C20722">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>sigA</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._partyB.L536*C20598">
            <sol:typeName>address</sol:typeName>
            <sol:nameIs>_partyB</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.virtualChannels__vcID_.erc20Balances_0___balances_2_.L563*C21879"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._bond.L537*C20616">
            <sol:typeName>uint256[2]</sol:typeName>
            <sol:nameIs>_bond</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L543*C20749"/>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.virtualChannels__vcID_.partyA__partyA.L558*C21598"/>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.virtualChannels__vcID_.partyB__partyB.L559*C21660"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._balances.L538*C20635">
            <sol:typeName>uint256[4]</sol:typeName>
            <sol:nameIs>_balances</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.virtualChannels__vcID_.updateVCtimeout_now_Channels__lcID_.confirmTime.L566*C22031"/>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:nameIs>initVCstate</sol:nameIs>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.virtualChannels__vcID_.ethBalances_0___balances_0_.L561*C21769"/>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L557*C21518"/>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.byzantineCloseChannel.L655*C26312">
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._lcID.L655*C26343">
            <sol:typeName>bytes32</sol:typeName>
            <sol:nameIs>_lcID</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.channel.erc20Balances_0__0.L686*C27849">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.channel.ethBalances_1__0.L685*C27820">
                <sol:before>
                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.channel.ethBalances_0__0.L684*C27791">
                    <sol:before>
                      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uint256tokenbalanceI.L683*C27740">
                        <sol:before>
                          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uint256tokenbalanceA.L682*C27689">
                            <sol:before>
                              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uint256ethbalanceI.L681*C27642">
                                <sol:before>
                                  <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uint256ethbalanceA.L680*C27595">
                                    <sol:before>
                                      <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L677*C27513">
                                        <sol:before>
                                          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.channel.erc20Balances_1___channel.erc20Balances_3_.L675*C27450">
                                            <sol:before>
                                              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.channel.erc20Balances_0___channel.erc20Balances_2_.L674*C27397">
                                                <sol:before>
                                                  <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L673*C27338">
                                                    <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.channel.erc20Balances_1___channel.erc20Balances_3_.L675*C27450"/>
                                                    <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.channel.erc20Balances_0___channel.erc20Balances_2_.L674*C27397"/>
                                                    <sol:before>
                                                      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.possibleTotalTokenBeforeDeposit_totalTokenDeposit.L673*C27338">
                                                        <sol:before>
                                                          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.possibleTotalTokenBeforeDeposit_totalTokenDeposit.L673*C27338">
                                                            <sol:hasIfWrong>
                                                              <sol:IfWrong rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifWrong._.L673*C27338">
    <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L677*C27513"/>
    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.possibleTotalTokenBeforeDeposit_totalTokenDeposit.L673*C27338"/>
                                                              </sol:IfWrong>
                                                            </sol:hasIfWrong>
                                                            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L673*C27338"/>
                                                            <sol:before>
                                                              <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L671*C27275">
    <sol:before>
      <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.channel.ethBalances_1___channel.ethBalances_3_.L669*C27216">
        <sol:before>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.channel.ethBalances_0___channel.ethBalances_2_.L668*C27167">
            <sol:before>
              <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L667*C27112">
                <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.channel.ethBalances_1___channel.ethBalances_3_.L669*C27216"/>
                <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.channel.ethBalances_0___channel.ethBalances_2_.L668*C27167"/>
                <sol:before>
                  <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.possibleTotalEthBeforeDeposit_totalEthDeposit.L667*C27112">
                    <sol:before>
                      <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.possibleTotalEthBeforeDeposit_totalEthDeposit.L667*C27112">
                        <sol:hasIfWrong>
                          <sol:IfWrong rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifWrong._.L667*C27112">
                            <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L671*C27275"/>
                            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.possibleTotalEthBeforeDeposit_totalEthDeposit.L667*C27112"/>
                          </sol:IfWrong>
                        </sol:hasIfWrong>
                        <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L667*C27112"/>
                        <sol:before>
                          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uint256possibleTotalTokenBeforeDeposit.L666*C27016">
                            <sol:before>
                              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uint256possibleTotalEthBeforeDeposit.L665*C26926">
                                <sol:before>
                                  <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uint256totalTokenDeposit.L664*C26816">
                                    <sol:before>
                                      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uint256totalEthDeposit.L663*C26712">
                                        <sol:before>
                                          <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L661*C26567">
                                            <sol:before>
                                              <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L660*C26533">
                                                <sol:before>
                                                  <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L659*C26487">
                                                    <sol:before>
                                                      <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L658*C26438">
                                                        <sol:before>
                                                          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.Channelstoragechannel.L656*C26368">
                                                            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.byzantineCloseChannel.L655*C26312"/>
                                                            <sol:storageLocate
                                                            >storage</sol:storageLocate>
                                                            <sol:valueIs
                                                            >Channels[_lcID]</sol:valueIs>
                                                            <sol:nameIs
                                                            >channel</sol:nameIs>
                                                            <sol:typeName
                                                            >Channel</sol:typeName>
                                                          </sol:StateVar>
                                                        </sol:before>
                                                        <sol:callFunctionArgument
                                                        >channel.isOpen,"Channel is not open"</sol:callFunctionArgument>
                                                        <sol:callFunctionName
                                                        >require</sol:callFunctionName>
                                                      </sol:FunctionCall>
                                                    </sol:before>
                                                    <sol:callFunctionArgument
                                                    >channel.isUpdateLCSettling==true</sol:callFunctionArgument>
                                                    <sol:callFunctionName
                                                    >require</sol:callFunctionName>
                                                  </sol:FunctionCall>
                                                </sol:before>
                                                <sol:callFunctionArgument
                                                >channel.numOpenVC==0</sol:callFunctionArgument>
                                                <sol:callFunctionName
                                                >require</sol:callFunctionName>
                                              </sol:FunctionCall>
                                            </sol:before>
                                            <sol:callFunctionArgument
                                            >channel.updateLCtimeout&lt;now,"LC timeout over."</sol:callFunctionArgument>
                                            <sol:callFunctionName
                                            >require</sol:callFunctionName>
                                          </sol:FunctionCall>
                                        </sol:before>
                                        <sol:valueIs>channel.initialDeposit[0]+channel.ethBalances[2]+channel.ethBalances[3]</sol:valueIs>
                                        <sol:nameIs>totalEthDeposit</sol:nameIs>
                                        <sol:typeName>uint256</sol:typeName>
                                      </sol:StateVar>
                                    </sol:before>
                                    <sol:valueIs>channel.initialDeposit[1]+channel.erc20Balances[2]+channel.erc20Balances[3]</sol:valueIs>
                                    <sol:nameIs>totalTokenDeposit</sol:nameIs>
                                    <sol:typeName>uint256</sol:typeName>
                                  </sol:StateVar>
                                </sol:before>
                                <sol:valueIs>channel.ethBalances[0]+channel.ethBalances[1]</sol:valueIs>
                                <sol:nameIs>possibleTotalEthBeforeDeposit</sol:nameIs>
                                <sol:typeName>uint256</sol:typeName>
                              </sol:StateVar>
                            </sol:before>
                            <sol:valueIs>channel.erc20Balances[0]+channel.erc20Balances[1]</sol:valueIs>
                            <sol:nameIs>possibleTotalTokenBeforeDeposit</sol:nameIs>
                            <sol:typeName>uint256</sol:typeName>
                          </sol:StateVar>
                        </sol:before>
                        <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.possibleTotalEthBeforeDeposit_totalEthDeposit.L667*C27112"/>
                      </sol:FunctionIf>
                    </sol:before>
                    <sol:hasIfCondition>possibleTotalEthBeforeDeposit&lt;totalEthDeposit</sol:hasIfCondition>
                  </sol:IfCondition>
                </sol:before>
              </sol:IfRight>
            </sol:before>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>channel.ethBalances[0]+channel.ethBalances[2]</sol:assignRight>
            <sol:assignLeft>channel.ethBalances[0]</sol:assignLeft>
          </sol:Assignment>
        </sol:before>
        <sol:assignSymbol>=</sol:assignSymbol>
        <sol:assignRight>channel.ethBalances[1]+channel.ethBalances[3]</sol:assignRight>
        <sol:assignLeft>channel.ethBalances[1]</sol:assignLeft>
      </sol:Assignment>
    </sol:before>
    <sol:callFunctionArgument>possibleTotalEthBeforeDeposit==totalEthDeposit</sol:callFunctionArgument>
    <sol:callFunctionName>require</sol:callFunctionName>      </sol:FunctionCall>
                                                            </sol:before>
                                                            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.channel.ethBalances_1___channel.ethBalances_3_.L669*C27216"/>
                                                            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.possibleTotalTokenBeforeDeposit_totalTokenDeposit.L673*C27338"/>
                                                          </sol:FunctionIf>
                                                        </sol:before>
                                                        <sol:hasIfCondition
                                                        >possibleTotalTokenBeforeDeposit&lt;totalTokenDeposit</sol:hasIfCondition>
                                                      </sol:IfCondition>
                                                    </sol:before>
                                                  </sol:IfRight>
                                                </sol:before>
                                                <sol:assignSymbol
                                                >=</sol:assignSymbol>
                                                <sol:assignRight
                                                >channel.erc20Balances[0]+channel.erc20Balances[2]</sol:assignRight>
                                                <sol:assignLeft
                                                >channel.erc20Balances[0]</sol:assignLeft>
                                              </sol:Assignment>
                                            </sol:before>
                                            <sol:assignSymbol
                                            >=</sol:assignSymbol>
                                            <sol:assignRight>channel.erc20Balances[1]+channel.erc20Balances[3]</sol:assignRight>
                                            <sol:assignLeft>channel.erc20Balances[1]</sol:assignLeft>
                                          </sol:Assignment>
                                        </sol:before>
                                        <sol:callFunctionArgument
                                        >possibleTotalTokenBeforeDeposit==totalTokenDeposit</sol:callFunctionArgument>
                                        <sol:callFunctionName
                                        >require</sol:callFunctionName>
                                      </sol:FunctionCall>
                                    </sol:before>
                                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.channel.erc20Balances_1___channel.erc20Balances_3_.L675*C27450"/>
                                    <sol:valueIs>channel.ethBalances[0]</sol:valueIs>
                                    <sol:nameIs>ethbalanceA</sol:nameIs>
                                    <sol:typeName>uint256</sol:typeName>
                                  </sol:StateVar>
                                </sol:before>
                                <sol:valueIs>channel.ethBalances[1]</sol:valueIs>
                                <sol:nameIs>ethbalanceI</sol:nameIs>
                                <sol:typeName>uint256</sol:typeName>
                              </sol:StateVar>
                            </sol:before>
                            <sol:valueIs>channel.erc20Balances[0]</sol:valueIs>
                            <sol:nameIs>tokenbalanceA</sol:nameIs>
                            <sol:typeName>uint256</sol:typeName>
                          </sol:StateVar>
                        </sol:before>
                        <sol:valueIs>channel.erc20Balances[1]</sol:valueIs>
                        <sol:nameIs>tokenbalanceI</sol:nameIs>
                        <sol:typeName>uint256</sol:typeName>
                      </sol:StateVar>
                    </sol:before>
                    <sol:assignSymbol>=</sol:assignSymbol>
                    <sol:assignRight>0</sol:assignRight>
                    <sol:assignLeft>channel.ethBalances[0]</sol:assignLeft>
                  </sol:Assignment>
                </sol:before>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>0</sol:assignRight>
                <sol:assignLeft>channel.ethBalances[1]</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>0</sol:assignRight>
            <sol:assignLeft>channel.erc20Balances[0]</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uint256possibleTotalEthBeforeDeposit.L665*C26926"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uint256ethbalanceA.L680*C27595"/>
        <sol:hasIf>
          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.tokenbalanceA!_0__tokenbalanceI!_0.L692*C28058">
            <sol:hasIfRight>
              <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L692*C28058">
                <sol:callFunction>
                  <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L697*C28236">
                    <sol:before>
                      <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L693*C28106">
                        <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L692*C28058"/>
                        <sol:callFunctionArgument>channel.token.transfer(channel.partyAddresses[0],tokenbalanceA),"byzantineCloseChannel: token transfer failure"</sol:callFunctionArgument>
                        <sol:callFunctionName>require</sol:callFunctionName>
                      </sol:FunctionCall>
                    </sol:before>
                    <sol:callFunctionArgument>channel.token.transfer(channel.partyAddresses[1],tokenbalanceI),"byzantineCloseChannel: token transfer failure"</sol:callFunctionArgument>
                    <sol:callFunctionName>require</sol:callFunctionName>
                  </sol:FunctionCall>
                </sol:callFunction>
                <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L693*C28106"/>
                <sol:before>
                  <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.tokenbalanceA!_0__tokenbalanceI!_0.L692*C28058">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.tokenbalanceA!_0__tokenbalanceI!_0.L692*C28058"/>
                    <sol:hasIfCondition>tokenbalanceA!=0||tokenbalanceI!=0</sol:hasIfCondition>
                  </sol:IfCondition>
                </sol:before>
              </sol:IfRight>
            </sol:hasIfRight>
            <sol:before>
              <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.channel.partyAddresses_1_.transfer.L690*C28005">
                <sol:before>
                  <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.channel.partyAddresses_0_.transfer.L689*C27955">
                    <sol:before>
                      <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L688*C27911">
                        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.channel.partyAddresses_1_.transfer.L690*C28005"/>
                        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.channel.partyAddresses_0_.transfer.L689*C27955"/>
                        <sol:before>
                          <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.ethbalanceA!_0__ethbalanceI!_0.L688*C27911">
                            <sol:before>
                              <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.ethbalanceA!_0__ethbalanceI!_0.L688*C27911">
                                <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L688*C27911"/>
                                <sol:before>
                                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.channel.erc20Balances_1__0.L687*C27880">
                                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.channel.erc20Balances_0__0.L686*C27849"/>
                                    <sol:assignSymbol>=</sol:assignSymbol>
                                    <sol:assignRight>0</sol:assignRight>
                                    <sol:assignLeft>channel.erc20Balances[1]</sol:assignLeft>
                                  </sol:Assignment>
                                </sol:before>
                                <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.ethbalanceA!_0__ethbalanceI!_0.L688*C27911"/>
                              </sol:FunctionIf>
                            </sol:before>
                            <sol:hasIfCondition>ethbalanceA!=0||ethbalanceI!=0</sol:hasIfCondition>
                          </sol:IfCondition>
                        </sol:before>
                      </sol:IfRight>
                    </sol:before>
                    <sol:callFunctionArgument>ethbalanceA</sol:callFunctionArgument>
                    <sol:callFunctionName>transfer</sol:callFunctionName>
                    <sol:callFunctionObject>channel.partyAddresses[0]</sol:callFunctionObject>
                  </sol:FunctionCall>
                </sol:before>
                <sol:callFunctionArgument>ethbalanceI</sol:callFunctionArgument>
                <sol:callFunctionName>transfer</sol:callFunctionName>
                <sol:callFunctionObject>channel.partyAddresses[1]</sol:callFunctionObject>
              </sol:FunctionCall>
            </sol:before>
            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.tokenbalanceA!_0__tokenbalanceI!_0.L692*C28058"/>
          </sol:FunctionIf>
        </sol:hasIf>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.channel.ethBalances_0__0.L684*C27791"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uint256ethbalanceI.L681*C27642"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uint256possibleTotalTokenBeforeDeposit.L666*C27016"/>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.channel.erc20Balances_1__0.L687*C27880"/>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.ethbalanceA!_0__ethbalanceI!_0.L688*C27911"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uint256tokenbalanceA.L682*C27689"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.Channelstoragechannel.L656*C26368"/>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L661*C26567"/>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L659*C26487"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uint256totalEthDeposit.L663*C26712"/>
        <sol:operateVarible>
          <sol:VariableOperation rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprVaribleOp.numChannels--.L703*C28394">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.channel.isOpen_false.L702*C28369">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L697*C28236"/>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>false</sol:assignRight>
                <sol:assignLeft>channel.isOpen</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:opSymbol>--</sol:opSymbol>
            <sol:opVarible>numChannels</sol:opVarible>
          </sol:VariableOperation>
        </sol:operateVarible>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.channel.isOpen_false.L702*C28369"/>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.possibleTotalEthBeforeDeposit_totalEthDeposit.L667*C27112"/>
        <sol:nameIs>byzantineCloseChannel</sol:nameIs>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uint256tokenbalanceI.L683*C27740"/>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.possibleTotalTokenBeforeDeposit_totalTokenDeposit.L673*C27338"/>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L660*C26533"/>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.channel.ethBalances_1__0.L685*C27820"/>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L658*C26438"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uint256totalTokenDeposit.L664*C26816"/>
      </sol:Function>
    </sol:hasFunction>
    <sol:nameIs>LedgerChannel</sol:nameIs>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_sv.virtualChannels.L328*C12411">
        <sol:hasModifier>public</sol:hasModifier>
        <sol:elementTypeName2>VirtualChannel</sol:elementTypeName2>
        <sol:elementTypeName1>bytes32</sol:elementTypeName1>
        <sol:typeName>mapping</sol:typeName>
        <sol:nameIs>virtualChannels</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.joinChannel.L381*C14895">
        <sol:hasModifier>public</sol:hasModifier>
        <sol:nameIs>joinChannel</sol:nameIs>
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.Channels__lcID_.initialDeposit_0____balances_0_.L393*C15460">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.Channels__lcID_.erc20Balances_1___balances_1_.L391*C15407">
                <sol:before>
                  <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L390*C15291">
                    <sol:before>
                      <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L389*C15266">
                        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.Channels__lcID_.erc20Balances_1___balances_1_.L391*C15407"/>
                        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L390*C15291"/>
                        <sol:before>
                          <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if._balances_1_!_0.L389*C15266">
                            <sol:before>
                              <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if._balances_1_!_0.L389*C15266">
                                <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L389*C15266"/>
                                <sol:before>
                                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.Channels__lcID_.ethBalances_1__msg.value.L387*C15218">
                                    <sol:before>
                                      <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L386*C15138">
                                        <sol:before>
                                          <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L385*C15113">
                                            <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.Channels__lcID_.ethBalances_1__msg.value.L387*C15218"/>
                                            <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L386*C15138"/>
                                            <sol:before>
                                              <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if._balances_0_!_0.L385*C15113">
                                                <sol:before>
                                                  <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if._balances_0_!_0.L385*C15113">
                                                    <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L385*C15113"/>
                                                    <sol:before>
                                                      <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L384*C15054">
                                                        <sol:before>
                                                          <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L383*C15011">
                                                            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.joinChannel.L381*C14895"/>
                                                            <sol:callFunctionArgument
                                                            >Channels[_lcID].isOpen==false</sol:callFunctionArgument>
                                                            <sol:callFunctionName
                                                            >require</sol:callFunctionName>
                                                          </sol:FunctionCall>
                                                        </sol:before>
                                                        <sol:callFunctionArgument
                                                        >msg.sender==Channels[_lcID].partyAddresses[1]</sol:callFunctionArgument>
                                                        <sol:callFunctionName
                                                        >require</sol:callFunctionName>
                                                      </sol:FunctionCall>
                                                    </sol:before>
                                                    <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if._balances_0_!_0.L385*C15113"/>
                                                  </sol:FunctionIf>
                                                </sol:before>
                                                <sol:hasIfCondition
                                                >_balances[0]!=0</sol:hasIfCondition>
                                              </sol:IfCondition>
                                            </sol:before>
                                          </sol:IfRight>
                                        </sol:before>
                                        <sol:callFunctionArgument
                                        >msg.value==_balances[0],"state balance does not match sent value"</sol:callFunctionArgument>
                                        <sol:callFunctionName
                                        >require</sol:callFunctionName>
                                      </sol:FunctionCall>
                                    </sol:before>
                                    <sol:assignSymbol>=</sol:assignSymbol>
                                    <sol:assignRight>msg.value</sol:assignRight>
                                    <sol:assignLeft>Channels[_lcID].ethBalances[1]</sol:assignLeft>
                                  </sol:Assignment>
                                </sol:before>
                                <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if._balances_1_!_0.L389*C15266"/>
                              </sol:FunctionIf>
                            </sol:before>
                            <sol:hasIfCondition>_balances[1]!=0</sol:hasIfCondition>
                          </sol:IfCondition>
                        </sol:before>
                      </sol:IfRight>
                    </sol:before>
                    <sol:callFunctionArgument>Channels[_lcID].token.transferFrom(msg.sender,this,_balances[1]),"joinChannel: token transfer failure"</sol:callFunctionArgument>
                    <sol:callFunctionName>require</sol:callFunctionName>
                  </sol:FunctionCall>
                </sol:before>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>_balances[1]</sol:assignRight>
                <sol:assignLeft>Channels[_lcID].erc20Balances[1]</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>Channels[_lcID].initialDeposit[0]+_balances[0]</sol:assignRight>
            <sol:assignLeft>Channels[_lcID].initialDeposit[0]</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._lcID.L381*C14916">
            <sol:typeName>bytes32</sol:typeName>
            <sol:nameIs>_lcID</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.Channels__lcID_.isOpen_true.L396*C15611">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.Channels__lcID_.initialDeposit_1____balances_1_.L394*C15510">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.Channels__lcID_.initialDeposit_0____balances_0_.L393*C15460"/>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>Channels[_lcID].initialDeposit[1]+_balances[1]</sol:assignRight>
                <sol:assignLeft>Channels[_lcID].initialDeposit[1]</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>true</sol:assignRight>
            <sol:assignLeft>Channels[_lcID].isOpen</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L383*C15011"/>
        <sol:operateVarible>
          <sol:VariableOperation rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprVaribleOp.numChannels__.L397*C15643">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.Channels__lcID_.isOpen_true.L396*C15611"/>
            <sol:opSymbol>++</sol:opSymbol>
            <sol:opVarible>numChannels</sol:opVarible>
          </sol:VariableOperation>
        </sol:operateVarible>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L384*C15054"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._balances.L381*C14931">
            <sol:typeName>uint256[2]</sol:typeName>
            <sol:nameIs>_balances</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if._balances_1_!_0.L389*C15266"/>
        <sol:hasModifier>payable</sol:hasModifier>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.Channels__lcID_.initialDeposit_1____balances_1_.L394*C15510"/>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if._balances_0_!_0.L385*C15113"/>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_sv.numChannels.L231*C10060">
        <sol:hasModifier>public</sol:hasModifier>
        <sol:valueIs>0</sol:valueIs>
        <sol:typeName>uint256</sol:typeName>
        <sol:nameIs>numChannels</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.deposit.L402*C15792">
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._balance.L402*C15843">
            <sol:typeName>uint256</sol:typeName>
            <sol:nameIs>_balance</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:callFunction>
          <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L403*C15893">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.deposit.L402*C15792"/>
            <sol:callFunctionArgument>Channels[_lcID].isOpen==true,"Tried adding funds to a closed channel"</sol:callFunctionArgument>
            <sol:callFunctionName>require</sol:callFunctionName>
          </sol:FunctionCall>
        </sol:callFunction>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._lcID.L402*C15809">
            <sol:typeName>bytes32</sol:typeName>
            <sol:nameIs>_lcID</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasIf>
          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.Channels__lcID_.partyAddresses_1___recipient.L415*C16477">
            <sol:hasIfRight>
              <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L415*C16477">
                <sol:hasIf>
                  <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_if_ifRight_if.isToken.L416*C16532">
                    <sol:hasIfWrong>
                      <sol:IfWrong rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if_ifWrong._.L416*C16532">
                        <sol:containAssignment>
                          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.Channels__lcID_.ethBalances_3___msg.value.L421*C16788">
                            <sol:before>
                              <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L420*C16712">
                                <sol:before>
                                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.Channels__lcID_.erc20Balances_3____balance.L418*C16655">
                                    <sol:before>
                                      <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L417*C16547">
                                        <sol:before>
                                          <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if_ifRight._.L416*C16532">
                                            <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.Channels__lcID_.erc20Balances_3____balance.L418*C16655"/>
                                            <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L417*C16547"/>
                                            <sol:before>
                                              <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if.isToken.L416*C16532">
                                                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_if_ifRight_if.isToken.L416*C16532"/>
                                                <sol:hasIfCondition
                                                >isToken</sol:hasIfCondition>
                                              </sol:IfCondition>
                                            </sol:before>
                                          </sol:IfRight>
                                        </sol:before>
                                        <sol:callFunctionArgument
                                        >Channels[_lcID].token.transferFrom(msg.sender,this,_balance),"deposit: token transfer failure"</sol:callFunctionArgument>
                                        <sol:callFunctionName
                                        >require</sol:callFunctionName>
                                      </sol:FunctionCall>
                                    </sol:before>
                                    <sol:assignSymbol>=</sol:assignSymbol>
                                    <sol:assignRight>Channels[_lcID].erc20Balances[3]+_balance</sol:assignRight>
                                    <sol:assignLeft>Channels[_lcID].erc20Balances[3]</sol:assignLeft>
                                  </sol:Assignment>
                                </sol:before>
                                <sol:callFunctionArgument>msg.value==_balance,"state balance does not match sent value"</sol:callFunctionArgument>
                                <sol:callFunctionName>require</sol:callFunctionName>
                              </sol:FunctionCall>
                            </sol:before>
                            <sol:assignSymbol>=</sol:assignSymbol>
                            <sol:assignRight>Channels[_lcID].ethBalances[3]+msg.value</sol:assignRight>
                            <sol:assignLeft>Channels[_lcID].ethBalances[3]</sol:assignLeft>
                          </sol:Assignment>
                        </sol:containAssignment>
                        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L420*C16712"/>
                        <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if.isToken.L416*C16532"/>
                      </sol:IfWrong>
                    </sol:hasIfWrong>
                    <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if_ifRight._.L416*C16532"/>
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L415*C16477"/>
                    <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if.isToken.L416*C16532"/>
                  </sol:FunctionIf>
                </sol:hasIf>
                <sol:before>
                  <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.Channels__lcID_.partyAddresses_1___recipient.L415*C16477">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.Channels__lcID_.partyAddresses_1___recipient.L415*C16477"/>
                    <sol:hasIfCondition>Channels[_lcID].partyAddresses[1]==recipient</sol:hasIfCondition>
                  </sol:IfCondition>
                </sol:before>
              </sol:IfRight>
            </sol:hasIfRight>
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.Channels__lcID_.ethBalances_2___msg.value.L412*C16425">
                <sol:before>
                  <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L411*C16349">
                    <sol:before>
                      <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.Channels__lcID_.erc20Balances_2____balance.L409*C16292">
                        <sol:before>
                          <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L408*C16184">
                            <sol:before>
                              <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if_ifRight._.L407*C16169">
                                <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.Channels__lcID_.erc20Balances_2____balance.L409*C16292"/>
                                <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L408*C16184"/>
                                <sol:before>
                                  <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if.isToken.L407*C16169">
                                    <sol:before>
                                      <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_if_ifRight_if.isToken.L407*C16169">
                                        <sol:hasIfWrong>
                                          <sol:IfWrong rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if_ifWrong._.L407*C16169">
                                            <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.Channels__lcID_.ethBalances_2___msg.value.L412*C16425"/>
                                            <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L411*C16349"/>
                                            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if.isToken.L407*C16169"/>
                                          </sol:IfWrong>
                                        </sol:hasIfWrong>
                                        <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if_ifRight._.L407*C16169"/>
                                        <sol:before>
                                          <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L406*C16114">
                                            <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_if_ifRight_if.isToken.L407*C16169"/>
                                            <sol:before>
                                              <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.Channels__lcID_.partyAddresses_0___recipient.L406*C16114">
                                                <sol:before>
                                                  <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.Channels__lcID_.partyAddresses_0___recipient.L406*C16114">
                                                    <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L406*C16114"/>
                                                    <sol:before>
                                                      <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L404*C15977">
                                                        <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L403*C15893"/>
                                                        <sol:callFunctionArgument
                                                        >recipient==Channels[_lcID].partyAddresses[0]||recipient==Channels[_lcID].partyAddresses[1]</sol:callFunctionArgument>
                                                        <sol:callFunctionName
                                                        >require</sol:callFunctionName>
                                                      </sol:FunctionCall>
                                                    </sol:before>
                                                    <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.Channels__lcID_.partyAddresses_0___recipient.L406*C16114"/>
                                                  </sol:FunctionIf>
                                                </sol:before>
                                                <sol:hasIfCondition
                                                >Channels[_lcID].partyAddresses[0]==recipient</sol:hasIfCondition>
                                              </sol:IfCondition>
                                            </sol:before>
                                          </sol:IfRight>
                                        </sol:before>
                                        <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if.isToken.L407*C16169"/>
                                      </sol:FunctionIf>
                                    </sol:before>
                                    <sol:hasIfCondition>isToken</sol:hasIfCondition>
                                  </sol:IfCondition>
                                </sol:before>
                              </sol:IfRight>
                            </sol:before>
                            <sol:callFunctionArgument>Channels[_lcID].token.transferFrom(msg.sender,this,_balance),"deposit: token transfer failure"</sol:callFunctionArgument>
                            <sol:callFunctionName>require</sol:callFunctionName>
                          </sol:FunctionCall>
                        </sol:before>
                        <sol:assignSymbol>=</sol:assignSymbol>
                        <sol:assignRight>Channels[_lcID].erc20Balances[2]+_balance</sol:assignRight>
                        <sol:assignLeft>Channels[_lcID].erc20Balances[2]</sol:assignLeft>
                      </sol:Assignment>
                    </sol:before>
                    <sol:callFunctionArgument>msg.value==_balance,"state balance does not match sent value"</sol:callFunctionArgument>
                    <sol:callFunctionName>require</sol:callFunctionName>
                  </sol:FunctionCall>
                </sol:before>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>Channels[_lcID].ethBalances[2]+msg.value</sol:assignRight>
                <sol:assignLeft>Channels[_lcID].ethBalances[2]</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.Channels__lcID_.erc20Balances_2____balance.L409*C16292"/>
            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.Channels__lcID_.partyAddresses_1___recipient.L415*C16477"/>
          </sol:FunctionIf>
        </sol:hasIf>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.recipient.L402*C15824">
            <sol:typeName>address</sol:typeName>
            <sol:nameIs>recipient</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.isToken.L402*C15861">
            <sol:typeName>bool</sol:typeName>
            <sol:nameIs>isToken</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasModifier>payable</sol:hasModifier>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:nameIs>deposit</sol:nameIs>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L404*C15977"/>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.Channels__lcID_.partyAddresses_0___recipient.L406*C16114"/>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_sv.NAME.L229*C9968">
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:valueIs>"Ledger Channel"</sol:valueIs>
        <sol:typeName>string</sol:typeName>
        <sol:nameIs>NAME</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasStruct>
      <sol:Struct rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_struct.VirtualChannel.L313*C12005">
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_sv.address.L322*C12284">
            <sol:typeName>address</sol:typeName>
            <sol:nameIs>partyI</sol:nameIs>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_sv.uint256.L318*C12138">
            <sol:typeName>uint256</sol:typeName>
            <sol:nameIs>updateVCtimeout</sol:nameIs>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_sv.address.L321*C12247">
            <sol:typeName>address</sol:typeName>
            <sol:nameIs>partyB</sol:nameIs>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_sv.uint256[2].L323*C12311">
            <sol:typeName>uint256[2]</sol:typeName>
            <sol:nameIs>ethBalances</sol:nameIs>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_sv.uint256[2].L324*C12336">
            <sol:typeName>uint256[2]</sol:typeName>
            <sol:nameIs>erc20Balances</sol:nameIs>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_sv.bool.L315*C12045">
            <sol:typeName>bool</sol:typeName>
            <sol:nameIs>isInSettlementState</sol:nameIs>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_sv.address.L320*C12210">
            <sol:typeName>address</sol:typeName>
            <sol:nameIs>partyA</sol:nameIs>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:nameIs>VirtualChannel</sol:nameIs>
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_sv.HumanStandardToken.L326*C12381">
            <sol:typeName>HumanStandardToken</sol:typeName>
            <sol:nameIs>token</sol:nameIs>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_sv.uint256[2].L325*C12363">
            <sol:typeName>uint256[2]</sol:typeName>
            <sol:nameIs>bond</sol:nameIs>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_sv.bool.L314*C12030">
            <sol:typeName>bool</sol:typeName>
            <sol:nameIs>isClose</sol:nameIs>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_sv.address.L317*C12091">
            <sol:typeName>address</sol:typeName>
            <sol:nameIs>challenger</sol:nameIs>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_sv.uint256.L316*C12072">
            <sol:typeName>uint256</sol:typeName>
            <sol:nameIs>sequence</sol:nameIs>
          </sol:StateVar>
        </sol:hasStateVar>
      </sol:Struct>
    </sol:hasStruct>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.settleVC.L573*C22445">
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.virtualChannels__vcID_.updateVCtimeout_now_Channels__lcID_.confirmTime.L626*C24459">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.virtualChannels__vcID_.erc20Balances_1__updateBal_3_.L625*C24402">
                <sol:before>
                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.virtualChannels__vcID_.erc20Balances_0__updateBal_2_.L624*C24345">
                    <sol:before>
                      <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.virtualChannels__vcID_.ethBalances_1__updateBal_1_.L623*C24290">
                        <sol:before>
                          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.virtualChannels__vcID_.ethBalances_0__updateBal_0_.L622*C24235">
                            <sol:before>
                              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.virtualChannels__vcID_.sequence_updateSeq.L620*C24171">
                                <sol:before>
                                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.virtualChannels__vcID_.challenger_msg.sender.L619*C24122">
                                    <sol:before>
                                      <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L616*C23957">
                                        <sol:before>
                                          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes32_updateState.L601*C23672">
                                            <sol:before>
                                              <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L600*C23607">
                                                <sol:before>
                                                  <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L592*C23094">
                                                    <sol:before>
                                                      <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L588*C22913">
                                                        <sol:before>
                                                          <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L587*C22811">
                                                            <sol:before>
                                                              <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L586*C22751">
    <sol:before>
      <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L584*C22671">
        <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.settleVC.L573*C22445"/>
        <sol:callFunctionArgument>Channels[_lcID].isOpen,"LC is closed."</sol:callFunctionArgument>
        <sol:callFunctionName>require</sol:callFunctionName>
      </sol:FunctionCall>
    </sol:before>
    <sol:callFunctionArgument>!virtualChannels[_vcID].isClose,"VC is closed."</sol:callFunctionArgument>
    <sol:callFunctionName>require</sol:callFunctionName>      </sol:FunctionCall>
                                                            </sol:before>
                                                            <sol:callFunctionArgument
                                                            >virtualChannels[_vcID].sequence&lt;updateSeq,"VC sequence is higher than update sequence."</sol:callFunctionArgument>
                                                            <sol:callFunctionName
                                                            >require</sol:callFunctionName>
                                                          </sol:FunctionCall>
                                                        </sol:before>
                                                        <sol:callFunctionArgument
                                                        >virtualChannels[_vcID].ethBalances[1]&lt;updateBal[1]&amp;&amp;virtualChannels[_vcID].erc20Balances[1]&lt;updateBal[3],"State updates may only increase recipient balance."</sol:callFunctionArgument>
                                                        <sol:callFunctionName
                                                        >require</sol:callFunctionName>
                                                      </sol:FunctionCall>
                                                    </sol:before>
                                                    <sol:callFunctionArgument
                                                    >virtualChannels[_vcID].bond[0]==updateBal[0]+updateBal[1]&amp;&amp;virtualChannels[_vcID].bond[1]==updateBal[2]+updateBal[3],"Incorrect balances for bonded amount"</sol:callFunctionArgument>
                                                    <sol:callFunctionName
                                                    >require</sol:callFunctionName>
                                                  </sol:FunctionCall>
                                                </sol:before>
                                                <sol:callFunctionArgument
                                                >Channels[_lcID].updateLCtimeout&lt;now</sol:callFunctionArgument>
                                                <sol:callFunctionName
                                                >require</sol:callFunctionName>
                                              </sol:FunctionCall>
                                            </sol:before>
                                            <sol:valueIs>keccak256(abi.encodePacked(_vcID,updateSeq,_partyA,_partyB,virtualChannels[_vcID].bond[0],virtualChannels[_vcID].bond[1],updateBal[0],updateBal[1],updateBal[2],updateBal[3]))</sol:valueIs>
                                            <sol:nameIs>_updateState</sol:nameIs>
                                            <sol:typeName>bytes32</sol:typeName>
                                          </sol:StateVar>
                                        </sol:before>
                                        <sol:callFunctionArgument
                                        >virtualChannels[_vcID].partyA==ECTools.recoverSigner(_updateState,sigA)</sol:callFunctionArgument>
                                        <sol:callFunctionName
                                        >require</sol:callFunctionName>
                                      </sol:FunctionCall>
                                    </sol:before>
                                    <sol:assignSymbol>=</sol:assignSymbol>
                                    <sol:assignRight>msg.sender</sol:assignRight>
                                    <sol:assignLeft>virtualChannels[_vcID].challenger</sol:assignLeft>
                                  </sol:Assignment>
                                </sol:before>
                                <sol:assignSymbol>=</sol:assignSymbol>
                                <sol:assignRight>updateSeq</sol:assignRight>
                                <sol:assignLeft>virtualChannels[_vcID].sequence</sol:assignLeft>
                              </sol:Assignment>
                            </sol:before>
                            <sol:assignSymbol>=</sol:assignSymbol>
                            <sol:assignRight>updateBal[0]</sol:assignRight>
                            <sol:assignLeft>virtualChannels[_vcID].ethBalances[0]</sol:assignLeft>
                          </sol:Assignment>
                        </sol:before>
                        <sol:assignSymbol>=</sol:assignSymbol>
                        <sol:assignRight>updateBal[1]</sol:assignRight>
                        <sol:assignLeft>virtualChannels[_vcID].ethBalances[1]</sol:assignLeft>
                      </sol:Assignment>
                    </sol:before>
                    <sol:assignSymbol>=</sol:assignSymbol>
                    <sol:assignRight>updateBal[2]</sol:assignRight>
                    <sol:assignLeft>virtualChannels[_vcID].erc20Balances[0]</sol:assignLeft>
                  </sol:Assignment>
                </sol:before>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>updateBal[3]</sol:assignRight>
                <sol:assignLeft>virtualChannels[_vcID].erc20Balances[1]</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>now+Channels[_lcID].confirmTime</sol:assignRight>
            <sol:assignLeft>virtualChannels[_vcID].updateVCtimeout</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L587*C22811"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.updateSeq.L576*C22497">
            <sol:typeName>uint256</sol:typeName>
            <sol:nameIs>updateSeq</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.virtualChannels__vcID_.erc20Balances_0__updateBal_2_.L624*C24345"/>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L600*C23607"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.sigA.L580*C22644">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>sigA</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.virtualChannels__vcID_.sequence_updateSeq.L620*C24171"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes32_updateState.L601*C23672"/>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.virtualChannels__vcID_.ethBalances_0__updateBal_0_.L622*C24235"/>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L584*C22671"/>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.virtualChannels__vcID_.challenger_msg.sender.L619*C24122"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._lcID.L574*C22465">
            <sol:typeName>bytes32</sol:typeName>
            <sol:nameIs>_lcID</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L586*C22751"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._vcID.L575*C22481">
            <sol:typeName>bytes32</sol:typeName>
            <sol:nameIs>_vcID</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L588*C22913"/>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._partyB.L578*C22535">
            <sol:typeName>address</sol:typeName>
            <sol:nameIs>_partyB</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.virtualChannels__vcID_.erc20Balances_1__updateBal_3_.L625*C24402"/>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L592*C23094"/>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.virtualChannels__vcID_.ethBalances_1__updateBal_1_.L623*C24290"/>
        <sol:nameIs>settleVC</sol:nameIs>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._partyA.L577*C22517">
            <sol:typeName>address</sol:typeName>
            <sol:nameIs>_partyA</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.updateBal.L579*C22553">
            <sol:typeName>uint256[4]</sol:typeName>
            <sol:nameIs>updateBal</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L616*C23957"/>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.getChannel.L720*C28962">
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return._channel.partyAddresses_channel.ethBalances_channel.erc20Balances_channel.initialDeposit_channel.sequence_channel.confirmTime_channel.VCrootHash_channel.LCopenTimeout_channel.updateLCtimeout_channel.isOpen_channel.isUpdateLCSettling_channel.numOpenVC_.L735*C29187">
            <sol:before>
              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.Channelmemorychannel.L734*C29147">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.getChannel.L720*C28962"/>
                <sol:storageLocate>memory</sol:storageLocate>
                <sol:valueIs>Channels[id]</sol:valueIs>
                <sol:nameIs>channel</sol:nameIs>
                <sol:typeName>Channel</sol:typeName>
              </sol:StateVar>
            </sol:before>
            <sol:returnText>(channel.partyAddresses,channel.ethBalances,channel.erc20Balances,channel.initialDeposit,channel.sequence,channel.confirmTime,channel.VCrootHash,channel.LCopenTimeout,channel.updateLCtimeout,channel.isOpen,channel.isUpdateLCSettling,channel.numOpenVC)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.Channelmemorychannel.L734*C29147"/>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L720*C29006">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.uint256[4].L722*C29030">
                <sol:typeName>uint256[4]</sol:typeName>
              </sol:Param>
            </sol:hasParam>
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.bytes32.L727*C29089">
                <sol:typeName>bytes32</sol:typeName>
              </sol:Param>
            </sol:hasParam>
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.uint256.L729*C29109">
                <sol:typeName>uint256</sol:typeName>
              </sol:Param>
            </sol:hasParam>
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.address[2].L721*C29017">
                <sol:typeName>address[2]</sol:typeName>
              </sol:Param>
            </sol:hasParam>
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.uint256[2].L724*C29056">
                <sol:typeName>uint256[2]</sol:typeName>
              </sol:Param>
            </sol:hasParam>
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.uint256.L726*C29079">
                <sol:typeName>uint256</sol:typeName>
              </sol:Param>
            </sol:hasParam>
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.bool.L731*C29126">
                <sol:typeName>bool</sol:typeName>
              </sol:Param>
            </sol:hasParam>
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.uint256.L728*C29099">
                <sol:typeName>uint256</sol:typeName>
              </sol:Param>
            </sol:hasParam>
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.uint256.L725*C29069">
                <sol:typeName>uint256</sol:typeName>
              </sol:Param>
            </sol:hasParam>
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.uint256.L732*C29133">
                <sol:typeName>uint256</sol:typeName>
              </sol:Param>
            </sol:hasParam>
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.uint256[4].L723*C29043">
                <sol:typeName>uint256[4]</sol:typeName>
              </sol:Param>
            </sol:hasParam>
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.bool.L730*C29119">
                <sol:typeName>bool</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:hasModifier>view</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.id.L720*C28982">
            <sol:typeName>bytes32</sol:typeName>
            <sol:nameIs>id</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>getChannel</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.createChannel.L330*C12517">
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.Channels__lcID_.partyAddresses_0__msg.sender.L347*C13113">
            <sol:before>
              <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L342*C12844">
                <sol:before>
                  <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L341*C12773">
                    <sol:before>
                      <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L340*C12677">
                        <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.createChannel.L330*C12517"/>
                        <sol:callFunctionArgument>Channels[_lcID].partyAddresses[0]==address(0),"Channel has already been created."</sol:callFunctionArgument>
                        <sol:callFunctionName>require</sol:callFunctionName>
                      </sol:FunctionCall>
                    </sol:before>
                    <sol:callFunctionArgument>_partyI!=0x0,"No partyI address provided to LC creation"</sol:callFunctionArgument>
                    <sol:callFunctionName>require</sol:callFunctionName>
                  </sol:FunctionCall>
                </sol:before>
                <sol:callFunctionArgument>_balances[0]&gt;=0&amp;&amp;_balances[1]&gt;=0,"Balances cannot be negative"</sol:callFunctionArgument>
                <sol:callFunctionName>require</sol:callFunctionName>
              </sol:FunctionCall>
            </sol:before>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>msg.sender</sol:assignRight>
            <sol:assignLeft>Channels[_lcID].partyAddresses[0]</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.Channels__lcID_.confirmTime__confirmTime.L359*C13639">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.Channels__lcID_.sequence_0.L358*C13608">
                <sol:before>
                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.Channels__lcID_.erc20Balances_0___balances_1_.L356*C13555">
                    <sol:before>
                      <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L355*C13437">
                        <sol:before>
                          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.Channels__lcID_.token_HumanStandardToken__token_.L354*C13384">
                            <sol:before>
                              <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L353*C13359">
                                <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.Channels__lcID_.erc20Balances_0___balances_1_.L356*C13555"/>
                                <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L355*C13437"/>
                                <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.Channels__lcID_.token_HumanStandardToken__token_.L354*C13384"/>
                                <sol:before>
                                  <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if._balances_1_!_0.L353*C13359">
                                    <sol:before>
                                      <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if._balances_1_!_0.L353*C13359">
                                        <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L353*C13359"/>
                                        <sol:before>
                                          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.Channels__lcID_.ethBalances_0__msg.value.L351*C13311">
                                            <sol:before>
                                              <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L350*C13233">
                                                <sol:before>
                                                  <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L349*C13208">
                                                    <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.Channels__lcID_.ethBalances_0__msg.value.L351*C13311"/>
                                                    <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L350*C13233"/>
                                                    <sol:before>
                                                      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if._balances_0_!_0.L349*C13208">
                                                        <sol:before>
                                                          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if._balances_0_!_0.L349*C13208">
                                                            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L349*C13208"/>
                                                            <sol:before>
                                                              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.Channels__lcID_.partyAddresses_1___partyI.L348*C13162">
    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.Channels__lcID_.partyAddresses_0__msg.sender.L347*C13113"/>
    <sol:assignSymbol>=</sol:assignSymbol>
    <sol:assignRight>_partyI</sol:assignRight>
    <sol:assignLeft>Channels[_lcID].partyAddresses[1]</sol:assignLeft>
                                                              </sol:Assignment>
                                                            </sol:before>
                                                            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if._balances_0_!_0.L349*C13208"/>
                                                          </sol:FunctionIf>
                                                        </sol:before>
                                                        <sol:hasIfCondition
                                                        >_balances[0]!=0</sol:hasIfCondition>
                                                      </sol:IfCondition>
                                                    </sol:before>
                                                  </sol:IfRight>
                                                </sol:before>
                                                <sol:callFunctionArgument
                                                >msg.value==_balances[0],"Eth balance does not match sent value"</sol:callFunctionArgument>
                                                <sol:callFunctionName
                                                >require</sol:callFunctionName>
                                              </sol:FunctionCall>
                                            </sol:before>
                                            <sol:assignSymbol
                                            >=</sol:assignSymbol>
                                            <sol:assignRight>msg.value</sol:assignRight>
                                            <sol:assignLeft>Channels[_lcID].ethBalances[0]</sol:assignLeft>
                                          </sol:Assignment>
                                        </sol:before>
                                        <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if._balances_1_!_0.L353*C13359"/>
                                      </sol:FunctionIf>
                                    </sol:before>
                                    <sol:hasIfCondition>_balances[1]!=0</sol:hasIfCondition>
                                  </sol:IfCondition>
                                </sol:before>
                              </sol:IfRight>
                            </sol:before>
                            <sol:assignSymbol>=</sol:assignSymbol>
                            <sol:assignRight>HumanStandardToken(_token)</sol:assignRight>
                            <sol:assignLeft>Channels[_lcID].token</sol:assignLeft>
                          </sol:Assignment>
                        </sol:before>
                        <sol:callFunctionArgument>Channels[_lcID].token.transferFrom(msg.sender,this,_balances[1]),"CreateChannel: token transfer failure"</sol:callFunctionArgument>
                        <sol:callFunctionName>require</sol:callFunctionName>
                      </sol:FunctionCall>
                    </sol:before>
                    <sol:assignSymbol>=</sol:assignSymbol>
                    <sol:assignRight>_balances[1]</sol:assignRight>
                    <sol:assignLeft>Channels[_lcID].erc20Balances[0]</sol:assignLeft>
                  </sol:Assignment>
                </sol:before>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>0</sol:assignRight>
                <sol:assignLeft>Channels[_lcID].sequence</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>_confirmTime</sol:assignRight>
            <sol:assignLeft>Channels[_lcID].confirmTime</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L342*C12844"/>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if._balances_0_!_0.L349*C13208"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._balances.L335*C12616">
            <sol:typeName>uint256[2]</sol:typeName>
            <sol:nameIs>_balances</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasModifier>payable</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._token.L334*C12599">
            <sol:typeName>address</sol:typeName>
            <sol:nameIs>_token</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if._balances_1_!_0.L353*C13359"/>
        <sol:nameIs>createChannel</sol:nameIs>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.Channels__lcID_.sequence_0.L358*C13608"/>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L340*C12677"/>
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.Channels__lcID_.initialDeposit__balances.L363*C13966">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.Channels__lcID_.LCopenTimeout_now__confirmTime.L362*C13913">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.Channels__lcID_.confirmTime__confirmTime.L359*C13639"/>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>now+_confirmTime</sol:assignRight>
                <sol:assignLeft>Channels[_lcID].LCopenTimeout</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>_balances</sol:assignRight>
            <sol:assignLeft>Channels[_lcID].initialDeposit</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.Channels__lcID_.partyAddresses_1___partyI.L348*C13162"/>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L341*C12773"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._partyI.L332*C12558">
            <sol:typeName>address</sol:typeName>
            <sol:nameIs>_partyI</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._lcID.L331*C12542">
            <sol:typeName>bytes32</sol:typeName>
            <sol:nameIs>_lcID</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._confirmTime.L333*C12576">
            <sol:typeName>uint256</sol:typeName>
            <sol:nameIs>_confirmTime</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.Channels__lcID_.LCopenTimeout_now__confirmTime.L362*C13913"/>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasStruct>
      <sol:Struct rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_struct.Channel.L296*C11340">
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_sv.uint256.L303*C11730">
            <sol:typeName>uint256</sol:typeName>
            <sol:nameIs>confirmTime</sol:nameIs>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_sv.uint256[2].L301*C11663">
            <sol:typeName>uint256[2]</sol:typeName>
            <sol:nameIs>initialDeposit</sol:nameIs>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:nameIs>Channel</sol:nameIs>
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_sv.uint256.L302*C11711">
            <sol:typeName>uint256</sol:typeName>
            <sol:nameIs>sequence</sol:nameIs>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_sv.uint256.L306*C11797">
            <sol:typeName>uint256</sol:typeName>
            <sol:nameIs>updateLCtimeout</sol:nameIs>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_sv.uint256[4].L299*C11507">
            <sol:typeName>uint256[4]</sol:typeName>
            <sol:nameIs>ethBalances</sol:nameIs>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_sv.bool.L307*C11851">
            <sol:typeName>bool</sol:typeName>
            <sol:nameIs>isOpen</sol:nameIs>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_sv.uint256[4].L300*C11584">
            <sol:typeName>uint256[4]</sol:typeName>
            <sol:nameIs>erc20Balances</sol:nameIs>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_sv.address[2].L298*C11456">
            <sol:typeName>address[2]</sol:typeName>
            <sol:nameIs>partyAddresses</sol:nameIs>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_sv.uint256.L305*C11773">
            <sol:typeName>uint256</sol:typeName>
            <sol:nameIs>LCopenTimeout</sol:nameIs>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_sv.bool.L308*C11903">
            <sol:typeName>bool</sol:typeName>
            <sol:nameIs>isUpdateLCSettling</sol:nameIs>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_sv.HumanStandardToken.L310*C11949">
            <sol:typeName>HumanStandardToken</sol:typeName>
            <sol:nameIs>token</sol:nameIs>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_sv.uint256.L309*C11929">
            <sol:typeName>uint256</sol:typeName>
            <sol:nameIs>numOpenVC</sol:nameIs>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_sv.bytes32.L304*C11752">
            <sol:typeName>bytes32</sol:typeName>
            <sol:nameIs>VCrootHash</sol:nameIs>
          </sol:StateVar>
        </sol:hasStateVar>
      </sol:Struct>
    </sol:hasStruct>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.closeVirtualChannel.L629*C24663">
        <sol:nameIs>closeVirtualChannel</sol:nameIs>
        <sol:callFunction>
          <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L633*C24906">
            <sol:before>
              <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L632*C24818">
                <sol:before>
                  <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L631*C24767">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.closeVirtualChannel.L629*C24663"/>
                    <sol:callFunctionArgument>Channels[_lcID].isOpen,"LC is closed."</sol:callFunctionArgument>
                    <sol:callFunctionName>require</sol:callFunctionName>
                  </sol:FunctionCall>
                </sol:before>
                <sol:callFunctionArgument>virtualChannels[_vcID].isInSettlementState,"VC is not in settlement state."</sol:callFunctionArgument>
                <sol:callFunctionName>require</sol:callFunctionName>
              </sol:FunctionCall>
            </sol:before>
            <sol:callFunctionArgument>virtualChannels[_vcID].updateVCtimeout&lt;now,"Update vc timeout has not elapsed."</sol:callFunctionArgument>
            <sol:callFunctionName>require</sol:callFunctionName>
          </sol:FunctionCall>
        </sol:callFunction>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L631*C24767"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._vcID.L629*C24707">
            <sol:typeName>bytes32</sol:typeName>
            <sol:nameIs>_vcID</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._lcID.L629*C24692">
            <sol:typeName>bytes32</sol:typeName>
            <sol:nameIs>_lcID</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasIf>
          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.virtualChannels__vcID_.partyA__Channels__lcID_.partyAddresses_0_.L641*C25337">
            <sol:hasIfWrong>
              <sol:IfWrong rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifWrong._.L641*C25337">
                <sol:hasIf>
                  <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_if_ifWrong_if.virtualChannels__vcID_.partyB__Channels__lcID_.partyAddresses_0_.L646*C25722">
                    <sol:hasIfRight>
                      <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if_ifRight._.L646*C25722">
                        <sol:containAssignment>
                          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.Channels__lcID_.erc20Balances_1___virtualChannels__vcID_.erc20Balances_0_.L650*C26023">
                            <sol:before>
                              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.Channels__lcID_.erc20Balances_0___virtualChannels__vcID_.erc20Balances_1_.L649*C25945">
                                <sol:before>
                                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.Channels__lcID_.ethBalances_1___virtualChannels__vcID_.ethBalances_0_.L648*C25871">
                                    <sol:before>
                                      <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.Channels__lcID_.ethBalances_0___virtualChannels__vcID_.ethBalances_1_.L647*C25797">
                                        <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if_ifRight._.L646*C25722"/>
                                        <sol:assignSymbol>=</sol:assignSymbol>
                                        <sol:assignRight>Channels[_lcID].ethBalances[0]+virtualChannels[_vcID].ethBalances[1]</sol:assignRight>
                                        <sol:assignLeft>Channels[_lcID].ethBalances[0]</sol:assignLeft>
                                      </sol:Assignment>
                                    </sol:before>
                                    <sol:assignSymbol>=</sol:assignSymbol>
                                    <sol:assignRight>Channels[_lcID].ethBalances[1]+virtualChannels[_vcID].ethBalances[0]</sol:assignRight>
                                    <sol:assignLeft>Channels[_lcID].ethBalances[1]</sol:assignLeft>
                                  </sol:Assignment>
                                </sol:before>
                                <sol:assignSymbol>=</sol:assignSymbol>
                                <sol:assignRight>Channels[_lcID].erc20Balances[0]+virtualChannels[_vcID].erc20Balances[1]</sol:assignRight>
                                <sol:assignLeft>Channels[_lcID].erc20Balances[0]</sol:assignLeft>
                              </sol:Assignment>
                            </sol:before>
                            <sol:assignSymbol>=</sol:assignSymbol>
                            <sol:assignRight>Channels[_lcID].erc20Balances[1]+virtualChannels[_vcID].erc20Balances[0]</sol:assignRight>
                            <sol:assignLeft>Channels[_lcID].erc20Balances[1]</sol:assignLeft>
                          </sol:Assignment>
                        </sol:containAssignment>
                        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.Channels__lcID_.erc20Balances_0___virtualChannels__vcID_.erc20Balances_1_.L649*C25945"/>
                        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.Channels__lcID_.ethBalances_1___virtualChannels__vcID_.ethBalances_0_.L648*C25871"/>
                        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.Channels__lcID_.ethBalances_0___virtualChannels__vcID_.ethBalances_1_.L647*C25797"/>
                        <sol:before>
                          <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if.virtualChannels__vcID_.partyB__Channels__lcID_.partyAddresses_0_.L646*C25722">
                            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_if_ifWrong_if.virtualChannels__vcID_.partyB__Channels__lcID_.partyAddresses_0_.L646*C25722"/>
                            <sol:hasIfCondition>virtualChannels[_vcID].partyB==Channels[_lcID].partyAddresses[0]</sol:hasIfCondition>
                          </sol:IfCondition>
                        </sol:before>
                      </sol:IfRight>
                    </sol:hasIfRight>
                    <sol:before>
                      <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.Channels__lcID_.erc20Balances_1___virtualChannels__vcID_.erc20Balances_1_.L645*C25637">
                        <sol:before>
                          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.Channels__lcID_.erc20Balances_0___virtualChannels__vcID_.erc20Balances_0_.L644*C25559">
                            <sol:before>
                              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.Channels__lcID_.ethBalances_1___virtualChannels__vcID_.ethBalances_1_.L643*C25485">
                                <sol:before>
                                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.Channels__lcID_.ethBalances_0___virtualChannels__vcID_.ethBalances_0_.L642*C25411">
                                    <sol:before>
                                      <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L641*C25337">
                                        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.Channels__lcID_.erc20Balances_1___virtualChannels__vcID_.erc20Balances_1_.L645*C25637"/>
                                        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.Channels__lcID_.erc20Balances_0___virtualChannels__vcID_.erc20Balances_0_.L644*C25559"/>
                                        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.Channels__lcID_.ethBalances_1___virtualChannels__vcID_.ethBalances_1_.L643*C25485"/>
                                        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.Channels__lcID_.ethBalances_0___virtualChannels__vcID_.ethBalances_0_.L642*C25411"/>
                                        <sol:before>
                                          <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.virtualChannels__vcID_.partyA__Channels__lcID_.partyAddresses_0_.L641*C25337">
                                            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.virtualChannels__vcID_.partyA__Channels__lcID_.partyAddresses_0_.L641*C25337"/>
                                            <sol:hasIfCondition
                                            >virtualChannels[_vcID].partyA==Channels[_lcID].partyAddresses[0]</sol:hasIfCondition>
                                          </sol:IfCondition>
                                        </sol:before>
                                      </sol:IfRight>
                                    </sol:before>
                                    <sol:assignSymbol>=</sol:assignSymbol>
                                    <sol:assignRight>Channels[_lcID].ethBalances[0]+virtualChannels[_vcID].ethBalances[0]</sol:assignRight>
                                    <sol:assignLeft>Channels[_lcID].ethBalances[0]</sol:assignLeft>
                                  </sol:Assignment>
                                </sol:before>
                                <sol:assignSymbol>=</sol:assignSymbol>
                                <sol:assignRight>Channels[_lcID].ethBalances[1]+virtualChannels[_vcID].ethBalances[1]</sol:assignRight>
                                <sol:assignLeft>Channels[_lcID].ethBalances[1]</sol:assignLeft>
                              </sol:Assignment>
                            </sol:before>
                            <sol:assignSymbol>=</sol:assignSymbol>
                            <sol:assignRight>Channels[_lcID].erc20Balances[0]+virtualChannels[_vcID].erc20Balances[0]</sol:assignRight>
                            <sol:assignLeft>Channels[_lcID].erc20Balances[0]</sol:assignLeft>
                          </sol:Assignment>
                        </sol:before>
                        <sol:assignSymbol>=</sol:assignSymbol>
                        <sol:assignRight>Channels[_lcID].erc20Balances[1]+virtualChannels[_vcID].erc20Balances[1]</sol:assignRight>
                        <sol:assignLeft>Channels[_lcID].erc20Balances[1]</sol:assignLeft>
                      </sol:Assignment>
                    </sol:before>
                    <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if.virtualChannels__vcID_.partyB__Channels__lcID_.partyAddresses_0_.L646*C25722"/>
                  </sol:FunctionIf>
                </sol:hasIf>
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.virtualChannels__vcID_.partyA__Channels__lcID_.partyAddresses_0_.L641*C25337"/>
              </sol:IfWrong>
            </sol:hasIfWrong>
            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L641*C25337"/>
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.virtualChannels__vcID_.isClose_true.L638*C25176">
                <sol:before>
                  <sol:VariableOperation rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprVaribleOp.Channels__lcID_.numOpenVC--.L636*C25127">
                    <sol:before>
                      <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L634*C25000">
                        <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L633*C24906"/>
                        <sol:callFunctionArgument>!virtualChannels[_vcID].isClose,"VC is already closed"</sol:callFunctionArgument>
                        <sol:callFunctionName>require</sol:callFunctionName>
                      </sol:FunctionCall>
                    </sol:before>
                    <sol:opSymbol>--</sol:opSymbol>
                    <sol:opVarible>Channels__lcID_.numOpenVC</sol:opVarible>
                  </sol:VariableOperation>
                </sol:before>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>true</sol:assignRight>
                <sol:assignLeft>virtualChannels[_vcID].isClose</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.virtualChannels__vcID_.partyA__Channels__lcID_.partyAddresses_0_.L641*C25337"/>
          </sol:FunctionIf>
        </sol:hasIf>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.virtualChannels__vcID_.isClose_true.L638*C25176"/>
        <sol:operateVarible rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprVaribleOp.Channels__lcID_.numOpenVC--.L636*C25127"/>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L632*C24818"/>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L634*C25000"/>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_sv.VERSION.L230*C10017">
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:valueIs>"0.0.1"</sol:valueIs>
        <sol:typeName>string</sol:typeName>
        <sol:nameIs>VERSION</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.LCOpenTimeout.L366*C14126">
        <sol:operateVarible>
          <sol:VariableOperation rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprVaribleOp.deleteChannels__lcID_.L379*C14867">
            <sol:before>
              <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L375*C14547">
                <sol:before>
                  <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L373*C14471">
                    <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L375*C14547"/>
                    <sol:before>
                      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.Channels__lcID_.initialDeposit_1_!_0.L373*C14471">
                        <sol:before>
                          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.Channels__lcID_.initialDeposit_1_!_0.L373*C14471">
                            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L373*C14471"/>
                            <sol:before>
                              <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.Channels__lcID_.partyAddresses_0_.transfer.L371*C14391">
                                <sol:before>
                                  <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L369*C14315">
                                    <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.Channels__lcID_.partyAddresses_0_.transfer.L371*C14391"/>
                                    <sol:before>
                                      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.Channels__lcID_.initialDeposit_0_!_0.L369*C14315">
                                        <sol:before>
                                          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.Channels__lcID_.initialDeposit_0_!_0.L369*C14315">
                                            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L369*C14315"/>
                                            <sol:before>
                                              <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L368*C14268">
                                                <sol:before>
                                                  <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L367*C14174">
                                                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.LCOpenTimeout.L366*C14126"/>
                                                    <sol:callFunctionArgument
                                                    >msg.sender==Channels[_lcID].partyAddresses[0]&amp;&amp;Channels[_lcID].isOpen==false</sol:callFunctionArgument>
                                                    <sol:callFunctionName
                                                    >require</sol:callFunctionName>
                                                  </sol:FunctionCall>
                                                </sol:before>
                                                <sol:callFunctionArgument
                                                >now&gt;Channels[_lcID].LCopenTimeout</sol:callFunctionArgument>
                                                <sol:callFunctionName
                                                >require</sol:callFunctionName>
                                              </sol:FunctionCall>
                                            </sol:before>
                                            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.Channels__lcID_.initialDeposit_0_!_0.L369*C14315"/>
                                          </sol:FunctionIf>
                                        </sol:before>
                                        <sol:hasIfCondition>Channels[_lcID].initialDeposit[0]!=0</sol:hasIfCondition>
                                      </sol:IfCondition>
                                    </sol:before>
                                  </sol:IfRight>
                                </sol:before>
                                <sol:callFunctionArgument>Channels[_lcID].ethBalances[0]</sol:callFunctionArgument>
                                <sol:callFunctionName>transfer</sol:callFunctionName>
                                <sol:callFunctionObject>Channels[_lcID].partyAddresses[0]</sol:callFunctionObject>
                              </sol:FunctionCall>
                            </sol:before>
                            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.Channels__lcID_.initialDeposit_1_!_0.L373*C14471"/>
                          </sol:FunctionIf>
                        </sol:before>
                        <sol:hasIfCondition>Channels[_lcID].initialDeposit[1]!=0</sol:hasIfCondition>
                      </sol:IfCondition>
                    </sol:before>
                  </sol:IfRight>
                </sol:before>
                <sol:callFunctionArgument>Channels[_lcID].token.transfer(Channels[_lcID].partyAddresses[0],Channels[_lcID].erc20Balances[0]),"CreateChannel: token transfer failure"</sol:callFunctionArgument>
                <sol:callFunctionName>require</sol:callFunctionName>
              </sol:FunctionCall>
            </sol:before>
            <sol:opSymbol>Channels[_lcID]</sol:opSymbol>
            <sol:opVarible>delete</sol:opVarible>
          </sol:VariableOperation>
        </sol:operateVarible>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.Channels__lcID_.initialDeposit_1_!_0.L373*C14471"/>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.Channels__lcID_.initialDeposit_0_!_0.L369*C14315"/>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L368*C14268"/>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L367*C14174"/>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._lcID.L366*C14149">
            <sol:typeName>bytes32</sol:typeName>
            <sol:nameIs>_lcID</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>LCOpenTimeout</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_sv.Channels.L329*C12471">
        <sol:hasModifier>public</sol:hasModifier>
        <sol:elementTypeName2>Channel</sol:elementTypeName2>
        <sol:elementTypeName1>bytes32</sol:elementTypeName1>
        <sol:typeName>mapping</sol:typeName>
        <sol:nameIs>Channels</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
  </sol:Contract>
</rdf:RDF>
