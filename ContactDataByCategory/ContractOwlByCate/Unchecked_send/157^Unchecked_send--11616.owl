<rdf:RDF
    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
    xmlns:owl="http://www.w3.org/2002/07/owl#"
    xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
    xmlns:sol="http://www.hty.group/tf/ontologies/2020/07/Solildity#"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema#">
  <owl:Ontology rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity"/>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#FunctionFor">
    <rdfs:subClassOf>
      <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#Function"/>
    </rdfs:subClassOf>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#Function">
    <owl:deprecated rdf:parseType="Resource">
    </owl:deprecated>
    <rdfs:subClassOf>
      <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#Contract"/>
    </rdfs:subClassOf>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#ForCondition">
    <rdfs:subClassOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#FunctionFor"/>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#Param">
    <rdfs:subClassOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#Function"/>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#VariableOperation">
    <rdfs:subClassOf>
      <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#Expression"/>
    </rdfs:subClassOf>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#IfCondition">
    <rdfs:subClassOf>
      <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#FunctionIf"/>
    </rdfs:subClassOf>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#StateVar">
    <rdfs:subClassOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#Contract"/>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#Constructor">
    <rdfs:subClassOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#Contract"/>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#Modifier">
    <rdfs:subClassOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#Contract"/>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#Struct">
    <rdfs:subClassOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#Contract"/>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#Expression">
    <rdfs:subClassOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#Contract"/>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#IfRight">
    <rdfs:subClassOf>
      <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#FunctionIf"/>
    </rdfs:subClassOf>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#FunctionCall">
    <rdfs:subClassOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#Expression"/>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#FunctionIf">
    <rdfs:subClassOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#Function"/>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#Assignment">
    <rdfs:subClassOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#Expression"/>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#Library"/>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#ForContent">
    <rdfs:subClassOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#FunctionFor"/>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#IfWrong">
    <rdfs:subClassOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#FunctionIf"/>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#Interface"/>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#ReturnValue">
    <rdfs:subClassOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#Function"/>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#ReturnClaim">
    <rdfs:subClassOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#Function"/>
  </owl:Class>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#containAssignment"/>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#callFunction"/>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasIfCondition"/>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasStateVar"/>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasParam"/>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasIfWrong">
    <rdfs:subPropertyOf rdf:resource="http://www.w3.org/2002/07/owl#topObjectProperty"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#defineConstructor"/>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#after"/>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasForConditionVar">
    <rdfs:subPropertyOf>
      <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasFor"/>
    </rdfs:subPropertyOf>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasForConditionStep">
    <rdfs:subPropertyOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasFor"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasReturnClaim"/>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasReturnValue"/>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasIfRight">
    <rdfs:subPropertyOf rdf:resource="http://www.w3.org/2002/07/owl#topObjectProperty"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#before">
    <rdfs:subPropertyOf rdf:resource="http://www.w3.org/2002/07/owl#topObjectProperty"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#operateVarible"/>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasFunction"/>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#defineModifier"/>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasForContent">
    <rdfs:subPropertyOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasFor"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasForCondition">
    <rdfs:subPropertyOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasFor"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasStruct"/>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasIf"/>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#assignLeft">
    <rdfs:subPropertyOf rdf:resource="http://www.w3.org/2002/07/owl#topDataProperty"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#conditionValue">
    <rdfs:subPropertyOf rdf:resource="http://www.w3.org/2002/07/owl#topDataProperty"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#storageLocate"/>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#callFunctionObject"/>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasModifier"/>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#conditionVar"/>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#pragmaValue">
    <rdfs:subPropertyOf rdf:resource="http://www.w3.org/2002/07/owl#topDataProperty"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#assignSymbol"/>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#assignRight"/>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#returnText"/>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#conditionSymbol"/>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#opSymbol">
    <rdfs:subPropertyOf rdf:resource="http://www.w3.org/2002/07/owl#topDataProperty"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#pragmaName">
    <rdfs:subPropertyOf rdf:resource="http://www.w3.org/2002/07/owl#topDataProperty"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#conditionStep"/>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#callFunctionName"/>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#typeName"/>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#valueIs"/>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#opVarible">
    <rdfs:subPropertyOf rdf:resource="http://www.w3.org/2002/07/owl#topDataProperty"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#callFunctionArgument"/>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#nameIs"/>
  <sol:Contract rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con.usingOraclize.L34*C1922">
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.OAR.L46*C2366">
        <sol:typeName>OraclizeAddrResolverI</sol:typeName>
        <sol:nameIs>OAR</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.networkID_consensys.L45*C2323">
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:valueIs>161</sol:valueIs>
        <sol:typeName>uint8</sol:typeName>
        <sol:nameIs>networkID_consensys</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.month.L37*C2013">
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:valueIs>60*60*24*30</sol:valueIs>
        <sol:typeName>uint</sol:typeName>
        <sol:nameIs>month</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.networkID_morden.L44*C2285">
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:valueIs>2</sol:valueIs>
        <sol:typeName>uint8</sol:typeName>
        <sol:nameIs>networkID_morden</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_setNetwork.L63*C2732">
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.false.L76*C3271">
            <sol:before>
              <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.true.L74*C3254">
                <sol:before>
                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.OAR_OraclizeAddrResolverI_0x20e12a1f859b3feae5fb2a0a32c18f5a65555bbf_.L73*C3180">
                    <sol:before>
                      <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L72*C3115">
                        <sol:hasReturnValue rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.true.L74*C3254"/>
                        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.OAR_OraclizeAddrResolverI_0x20e12a1f859b3feae5fb2a0a32c18f5a65555bbf_.L73*C3180"/>
                        <sol:before>
                          <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.getCodeSize_0x20e12a1f859b3feae5fb2a0a32c18f5a65555bbf__0.L72*C3115">
                            <sol:before>
                              <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.getCodeSize_0x20e12a1f859b3feae5fb2a0a32c18f5a65555bbf__0.L72*C3115">
                                <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L72*C3115"/>
                                <sol:before>
                                  <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.true.L70*C3098">
                                    <sol:before>
                                      <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.OAR_OraclizeAddrResolverI_0x9efbea6358bed926b293d2ce63a730d6d98d43dd_.L69*C3024">
                                        <sol:before>
                                          <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L68*C2959">
                                            <sol:hasReturnValue rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.true.L70*C3098"/>
                                            <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.OAR_OraclizeAddrResolverI_0x9efbea6358bed926b293d2ce63a730d6d98d43dd_.L69*C3024"/>
                                            <sol:before>
                                              <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.getCodeSize_0x9efbea6358bed926b293d2ce63a730d6d98d43dd__0.L68*C2959">
                                                <sol:before>
                                                  <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.getCodeSize_0x9efbea6358bed926b293d2ce63a730d6d98d43dd__0.L68*C2959">
                                                    <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L68*C2959"/>
                                                    <sol:before>
                                                      <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.true.L66*C2942">
                                                        <sol:before>
                                                          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.OAR_OraclizeAddrResolverI_0x1d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed_.L65*C2868">
                                                            <sol:before>
                                                              <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L64*C2803">
    <sol:hasReturnValue rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.true.L66*C2942"/>
    <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.OAR_OraclizeAddrResolverI_0x1d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed_.L65*C2868"/>
    <sol:before>
      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.getCodeSize_0x1d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed__0.L64*C2803">
        <sol:before>
          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.getCodeSize_0x1d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed__0.L64*C2803">
            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L64*C2803"/>
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_setNetwork.L63*C2732"/>
            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.getCodeSize_0x1d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed__0.L64*C2803"/>
          </sol:FunctionIf>
        </sol:before>
        <sol:hasIfCondition>getCodeSize(0x1d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed)&gt;0</sol:hasIfCondition>
      </sol:IfCondition>
    </sol:before>                                             </sol:IfRight>
                                                            </sol:before>
                                                            <sol:assignSymbol
                                                            >=</sol:assignSymbol>
                                                            <sol:assignRight
                                                            >OraclizeAddrResolverI(0x1d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed)</sol:assignRight>
                                                            <sol:assignLeft
                                                            >OAR</sol:assignLeft>
                                                          </sol:Assignment>
                                                        </sol:before>
                                                        <sol:returnText
                                                        >true</sol:returnText>
                                                      </sol:ReturnValue>
                                                    </sol:before>
                                                    <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.getCodeSize_0x9efbea6358bed926b293d2ce63a730d6d98d43dd__0.L68*C2959"/>
                                                  </sol:FunctionIf>
                                                </sol:before>
                                                <sol:hasIfCondition
                                                >getCodeSize(0x9efbea6358bed926b293d2ce63a730d6d98d43dd)&gt;0</sol:hasIfCondition>
                                              </sol:IfCondition>
                                            </sol:before>
                                          </sol:IfRight>
                                        </sol:before>
                                        <sol:assignSymbol>=</sol:assignSymbol>
                                        <sol:assignRight>OraclizeAddrResolverI(0x9efbea6358bed926b293d2ce63a730d6d98d43dd)</sol:assignRight>
                                        <sol:assignLeft>OAR</sol:assignLeft>
                                      </sol:Assignment>
                                    </sol:before>
                                    <sol:returnText>true</sol:returnText>
                                  </sol:ReturnValue>
                                </sol:before>
                                <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.getCodeSize_0x20e12a1f859b3feae5fb2a0a32c18f5a65555bbf__0.L72*C3115"/>
                              </sol:FunctionIf>
                            </sol:before>
                            <sol:hasIfCondition>getCodeSize(0x20e12a1f859b3feae5fb2a0a32c18f5a65555bbf)&gt;0</sol:hasIfCondition>
                          </sol:IfCondition>
                        </sol:before>
                      </sol:IfRight>
                    </sol:before>
                    <sol:assignSymbol>=</sol:assignSymbol>
                    <sol:assignRight>OraclizeAddrResolverI(0x20e12a1f859b3feae5fb2a0a32c18f5a65555bbf)</sol:assignRight>
                    <sol:assignLeft>OAR</sol:assignLeft>
                  </sol:Assignment>
                </sol:before>
                <sol:returnText>true</sol:returnText>
              </sol:ReturnValue>
            </sol:before>
            <sol:returnText>false</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.getCodeSize_0x20e12a1f859b3feae5fb2a0a32c18f5a65555bbf__0.L72*C3115"/>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.getCodeSize_0x9efbea6358bed926b293d2ce63a730d6d98d43dd__0.L68*C2959"/>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.getCodeSize_0x1d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed__0.L64*C2803"/>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L63*C2787">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.bool.L63*C2795">
                <sol:typeName>bool</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.networkID.L63*C2761">
            <sol:typeName>uint8</sol:typeName>
            <sol:nameIs>networkID</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>oraclize_setNetwork</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.parseInt.L218*C8832">
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.parseInt__a_0_.L219*C8888">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.parseInt.L218*C8832"/>
            <sol:returnText>parseInt(_a,0)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L218*C8870">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.uint.L218*C8879">
                <sol:typeName>uint</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._a.L218*C8850">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_a</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>parseInt</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_cbAddress.L119*C5948">
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize.cbAddress__.L120*C6019">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_cbAddress.L119*C5948"/>
            <sol:returnText>oraclize.cbAddress()</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L119*C5999">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.address.L119*C6008">
                <sol:typeName>address</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:nameIs>oraclize_cbAddress</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:nameIs>usingOraclize</sol:nameIs>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L84*C3576">
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L84*C3668">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.id.L84*C3677">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.timestamp.L84*C3600">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>timestamp</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasIf>
          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.price_1ether_tx.gasprice_200000.L86*C3736">
            <sol:hasIfRight>
              <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L86*C3736">
                <sol:hasReturnValue>
                  <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.0.L86*C3778">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L86*C3736"/>
                    <sol:returnText>0</sol:returnText>
                  </sol:ReturnValue>
                </sol:hasReturnValue>
                <sol:before>
                  <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.price_1ether_tx.gasprice_200000.L86*C3736">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.price_1ether_tx.gasprice_200000.L86*C3736"/>
                    <sol:hasIfCondition>price&gt;1ether+tx.gasprice*200000</sol:hasIfCondition>
                  </sol:IfCondition>
                </sol:before>
              </sol:IfRight>
            </sol:hasIfRight>
            <sol:before>
              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintprice.L85*C3691">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L84*C3576"/>
                <sol:valueIs>oraclize.getPrice(datasource)</sol:valueIs>
                <sol:nameIs>price</sol:nameIs>
                <sol:typeName>uint</sol:typeName>
              </sol:StateVar>
            </sol:before>
            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.price_1ether_tx.gasprice_200000.L86*C3736"/>
          </sol:FunctionIf>
        </sol:hasIf>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintprice.L85*C3691"/>
        <sol:nameIs>oraclize_query</sol:nameIs>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L84*C3616">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize.query.value_price__timestamp_datasource_arg_.L87*C3816">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.0.L86*C3778"/>
            <sol:returnText>oraclize.query.value(price)(timestamp,datasource,arg)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.arg.L84*C3635">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>arg</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.strConcat.L211*C8584">
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.strConcat__a__b__c_&quot;&quot;_&quot;&quot;_.L212*C8665">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.strConcat.L211*C8584"/>
            <sol:returnText>strConcat(_a,_b,_c,"","")</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L211*C8645">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.string.L211*C8654">
                <sol:typeName>string</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._c.L211*C8625">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_c</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._b.L211*C8614">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_b</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._a.L211*C8603">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_a</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>strConcat</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.networkID_testnet.L43*C2246">
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:valueIs>2</sol:valueIs>
        <sol:typeName>uint8</sol:typeName>
        <sol:nameIs>networkID_testnet</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.strConcat.L214*C8707">
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.strConcat__a__b_&quot;&quot;_&quot;&quot;_&quot;&quot;_.L215*C8777">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.strConcat.L214*C8707"/>
            <sol:returnText>strConcat(_a,_b,"","","")</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L214*C8757">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.string.L214*C8766">
                <sol:typeName>string</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._b.L214*C8737">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_b</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._a.L214*C8726">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_a</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>strConcat</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.proofStorage_IPFS.L40*C2130">
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:valueIs>0x01</sol:valueIs>
        <sol:typeName>byte</sol:typeName>
        <sol:nameIs>proofStorage_IPFS</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L89*C3884">
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintprice.L90*C4014">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L89*C3884"/>
            <sol:valueIs>oraclize.getPrice(datasource,gaslimit)</sol:valueIs>
            <sol:nameIs>price</sol:nameIs>
            <sol:typeName>uint</sol:typeName>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L89*C3924">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L89*C3991">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.id.L89*C4000">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasIf>
          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.price_1ether_tx.gasprice_gaslimit.L91*C4069">
            <sol:hasIfRight>
              <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L91*C4069">
                <sol:hasReturnValue>
                  <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.0.L91*C4113">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L91*C4069"/>
                    <sol:returnText>0</sol:returnText>
                  </sol:ReturnValue>
                </sol:hasReturnValue>
                <sol:before>
                  <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.price_1ether_tx.gasprice_gaslimit.L91*C4069">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.price_1ether_tx.gasprice_gaslimit.L91*C4069"/>
                    <sol:hasIfCondition>price&gt;1ether+tx.gasprice*gaslimit</sol:hasIfCondition>
                  </sol:IfCondition>
                </sol:before>
              </sol:IfRight>
            </sol:hasIfRight>
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintprice.L90*C4014"/>
            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.price_1ether_tx.gasprice_gaslimit.L91*C4069"/>
          </sol:FunctionIf>
        </sol:hasIf>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.timestamp.L89*C3908">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>timestamp</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>oraclize_query</sol:nameIs>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize.query_withGasLimit.value_price__timestamp_datasource_arg_gaslimit_.L92*C4151">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.0.L91*C4113"/>
            <sol:returnText>oraclize.query_withGasLimit.value(price)(timestamp,datasource,arg,gaslimit)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.gaslimit.L89*C3955">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>gaslimit</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.arg.L89*C3943">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>arg</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.proofType_NONE.L38*C2049">
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:valueIs>0x00</sol:valueIs>
        <sol:typeName>byte</sol:typeName>
        <sol:nameIs>proofType_NONE</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L114*C5592">
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.arg1.L114*C5635">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>arg1</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize.query2_withGasLimit.value_price__0_datasource_arg1_arg2_gaslimit_.L117*C5857">
            <sol:before>
              <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.0.L116*C5819">
                <sol:before>
                  <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L116*C5775">
                    <sol:hasReturnValue rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.0.L116*C5819"/>
                    <sol:before>
                      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.price_1ether_tx.gasprice_gaslimit.L116*C5775">
                        <sol:before>
                          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.price_1ether_tx.gasprice_gaslimit.L116*C5775">
                            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L116*C5775"/>
                            <sol:before>
                              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintprice.L115*C5720">
                                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L114*C5592"/>
                                <sol:valueIs>oraclize.getPrice(datasource,gaslimit)</sol:valueIs>
                                <sol:nameIs>price</sol:nameIs>
                                <sol:typeName>uint</sol:typeName>
                              </sol:StateVar>
                            </sol:before>
                            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.price_1ether_tx.gasprice_gaslimit.L116*C5775"/>
                          </sol:FunctionIf>
                        </sol:before>
                        <sol:hasIfCondition>price&gt;1ether+tx.gasprice*gaslimit</sol:hasIfCondition>
                      </sol:IfCondition>
                    </sol:before>
                  </sol:IfRight>
                </sol:before>
                <sol:returnText>0</sol:returnText>
              </sol:ReturnValue>
            </sol:before>
            <sol:returnText>oraclize.query2_withGasLimit.value(price)(0,datasource,arg1,arg2,gaslimit)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L114*C5616">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:nameIs>oraclize_query</sol:nameIs>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintprice.L115*C5720"/>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.price_1ether_tx.gasprice_gaslimit.L116*C5775"/>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.gaslimit.L114*C5661">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>gaslimit</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.arg2.L114*C5648">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>arg2</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L114*C5697">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.id.L114*C5706">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.getCodeSize.L125*C6158">
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L125*C6212">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param._size.L125*C6220">
                <sol:typeName>uint</sol:typeName>
                <sol:nameIs>_size</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._addr.L125*C6179">
            <sol:typeName>address</sol:typeName>
            <sol:nameIs>_addr</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>getCodeSize</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:defineModifier>
      <sol:Modifier rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_modifier.coupon.L58*C2627">
        <sol:callFunction>
          <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.oraclize.useCoupon.L60*C2699">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.oraclize_OraclizeI_OAR.getAddress___.L59*C2658">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_modifier.coupon.L58*C2627"/>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>OraclizeI(OAR.getAddress())</sol:assignRight>
                <sol:assignLeft>oraclize</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:callFunctionArgument>code</sol:callFunctionArgument>
            <sol:callFunctionName>useCoupon</sol:callFunctionName>
            <sol:callFunctionObject>oraclize</sol:callFunctionObject>
          </sol:FunctionCall>
        </sol:callFunction>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.oraclize_OraclizeI_OAR.getAddress___.L59*C2658"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_modifier_param.code.L58*C2643">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>code</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>coupon</sol:nameIs>
      </sol:Modifier>
    </sol:defineModifier>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.networkID_auto.L41*C2171">
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:valueIs>0</sol:valueIs>
        <sol:typeName>uint8</sol:typeName>
        <sol:nameIs>networkID_auto</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.strConcat.L191*C7729">
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._b.L191*C7759">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_b</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemory_bc.L194*C7893">
            <sol:before>
              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemory_bb.L193*C7862">
                <sol:before>
                  <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemory_ba.L192*C7831">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.strConcat.L191*C7729"/>
                    <sol:storageLocate>memory</sol:storageLocate>
                    <sol:valueIs>bytes(_a)</sol:valueIs>
                    <sol:nameIs>_ba</sol:nameIs>
                    <sol:typeName>bytes</sol:typeName>
                  </sol:StateVar>
                </sol:before>
                <sol:storageLocate>memory</sol:storageLocate>
                <sol:valueIs>bytes(_b)</sol:valueIs>
                <sol:nameIs>_bb</sol:nameIs>
                <sol:typeName>bytes</sol:typeName>
              </sol:StateVar>
            </sol:before>
            <sol:storageLocate>memory</sol:storageLocate>
            <sol:valueIs>bytes(_c)</sol:valueIs>
            <sol:nameIs>_bc</sol:nameIs>
            <sol:typeName>bytes</sol:typeName>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.stringmemoryabcde.L197*C7986">
            <sol:before>
              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemory_be.L196*C7955">
                <sol:before>
                  <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemory_bd.L195*C7924">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemory_bc.L194*C7893"/>
                    <sol:storageLocate>memory</sol:storageLocate>
                    <sol:valueIs>bytes(_d)</sol:valueIs>
                    <sol:nameIs>_bd</sol:nameIs>
                    <sol:typeName>bytes</sol:typeName>
                  </sol:StateVar>
                </sol:before>
                <sol:storageLocate>memory</sol:storageLocate>
                <sol:valueIs>bytes(_e)</sol:valueIs>
                <sol:nameIs>_be</sol:nameIs>
                <sol:typeName>bytes</sol:typeName>
              </sol:StateVar>
            </sol:before>
            <sol:storageLocate>memory</sol:storageLocate>
            <sol:valueIs>newstring(_ba.length+_bb.length+_bc.length+_bd.length+_be.length)</sol:valueIs>
            <sol:nameIs>abcde</sol:nameIs>
            <sol:typeName>string</sol:typeName>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._a.L191*C7748">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_a</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemory_ba.L192*C7831"/>
        <sol:hasFor>
          <sol:FunctionFor rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for.for_i_0i__bd.lengthi___babcde_k_____bd_i_.L203*C8308">
            <sol:conditionStep>i++</sol:conditionStep>
            <sol:hasForCondition>
              <sol:ForCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.i__bd.length.L203*C8308">
                <sol:conditionValue>_bd.length</sol:conditionValue>
                <sol:conditionSymbol>&lt;</sol:conditionSymbol>
              </sol:ForCondition>
            </sol:hasForCondition>
            <sol:conditionVar>i</sol:conditionVar>
            <sol:hasStateVar>
              <sol:stateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.i_0;.L203*C8308">
                <sol:valueIs>0</sol:valueIs>
                <sol:nameIs>i</sol:nameIs>
                <sol:typeName>null</sol:typeName>
              </sol:stateVar>
            </sol:hasStateVar>
            <sol:containAssignment>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.babcde_k_____bd_i_.L203*C8341">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for.for_i_0i__bd.lengthi___babcde_k_____bd_i_.L203*C8308"/>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>_bd[i]</sol:assignRight>
                <sol:assignLeft>babcde[k++]</sol:assignLeft>
              </sol:Assignment>
            </sol:containAssignment>
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.babcde_k_____bc_i_.L202*C8285">
                <sol:before>
                  <sol:FunctionFor rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for.for_i_0i__bc.lengthi___babcde_k_____bc_i_.L202*C8252">
                    <sol:conditionStep>i++</sol:conditionStep>
                    <sol:hasForCondition>
                      <sol:ForCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.i__bc.length.L202*C8252">
                        <sol:conditionValue>_bc.length</sol:conditionValue>
                        <sol:conditionSymbol>&lt;</sol:conditionSymbol>
                      </sol:ForCondition>
                    </sol:hasForCondition>
                    <sol:conditionVar>i</sol:conditionVar>
                    <sol:hasStateVar>
                      <sol:stateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.i_0;.L202*C8252">
                        <sol:valueIs>0</sol:valueIs>
                        <sol:nameIs>i</sol:nameIs>
                        <sol:typeName>null</sol:typeName>
                      </sol:stateVar>
                    </sol:hasStateVar>
                    <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.babcde_k_____bc_i_.L202*C8285"/>
                    <sol:before>
                      <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.babcde_k_____bb_i_.L201*C8229">
                        <sol:before>
                          <sol:FunctionFor rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for.for_i_0i__bb.lengthi___babcde_k_____bb_i_.L201*C8196">
                            <sol:conditionStep>i++</sol:conditionStep>
                            <sol:hasForCondition>
                              <sol:ForCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.i__bb.length.L201*C8196">
                                <sol:conditionValue>_bb.length</sol:conditionValue>
                                <sol:conditionSymbol>&lt;</sol:conditionSymbol>
                              </sol:ForCondition>
                            </sol:hasForCondition>
                            <sol:conditionVar>i</sol:conditionVar>
                            <sol:hasStateVar>
                              <sol:stateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.i_0;.L201*C8196">
                                <sol:valueIs>0</sol:valueIs>
                                <sol:nameIs>i</sol:nameIs>
                                <sol:typeName>null</sol:typeName>
                              </sol:stateVar>
                            </sol:hasStateVar>
                            <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.babcde_k_____bb_i_.L201*C8229"/>
                            <sol:before>
                              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.babcde_k_____ba_i_.L200*C8173">
                                <sol:before>
                                  <sol:FunctionFor rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for.for_uinti_0i__ba.lengthi___babcde_k_____ba_i_.L200*C8135">
                                    <sol:conditionStep>i++</sol:conditionStep>
                                    <sol:hasForCondition>
                                      <sol:ForCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.i__ba.length.L200*C8135">
                                        <sol:conditionValue>_ba.length</sol:conditionValue>
                                        <sol:conditionSymbol>&lt;</sol:conditionSymbol>
                                      </sol:ForCondition>
                                    </sol:hasForCondition>
                                    <sol:conditionVar>i</sol:conditionVar>
                                    <sol:hasStateVar>
                                      <sol:stateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.uinti.L200*C8135">
                                        <sol:valueIs>0</sol:valueIs>
                                        <sol:nameIs>i</sol:nameIs>
                                        <sol:typeName>uint</sol:typeName>
                                      </sol:stateVar>
                                    </sol:hasStateVar>
                                    <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.babcde_k_____ba_i_.L200*C8173"/>
                                    <sol:before>
                                      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintk.L199*C8122">
                                        <sol:before>
                                          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemorybabcde.L198*C8085">
                                            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.stringmemoryabcde.L197*C7986"/>
                                            <sol:storageLocate
                                            >memory</sol:storageLocate>
                                            <sol:valueIs>bytes(abcde)</sol:valueIs>
                                            <sol:nameIs>babcde</sol:nameIs>
                                            <sol:typeName>bytes</sol:typeName>
                                          </sol:StateVar>
                                        </sol:before>
                                        <sol:valueIs>0</sol:valueIs>
                                        <sol:nameIs>k</sol:nameIs>
                                        <sol:typeName>uint</sol:typeName>
                                      </sol:StateVar>
                                    </sol:before>
                                  </sol:FunctionFor>
                                </sol:before>
                                <sol:assignSymbol>=</sol:assignSymbol>
                                <sol:assignRight>_ba[i]</sol:assignRight>
                                <sol:assignLeft>babcde[k++]</sol:assignLeft>
                              </sol:Assignment>
                            </sol:before>
                          </sol:FunctionFor>
                        </sol:before>
                        <sol:assignSymbol>=</sol:assignSymbol>
                        <sol:assignRight>_bb[i]</sol:assignRight>
                        <sol:assignLeft>babcde[k++]</sol:assignLeft>
                      </sol:Assignment>
                    </sol:before>
                  </sol:FunctionFor>
                </sol:before>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>_bc[i]</sol:assignRight>
                <sol:assignLeft>babcde[k++]</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
          </sol:FunctionFor>
        </sol:hasFor>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._e.L191*C7792">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_e</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._c.L191*C7770">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_c</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasFor>
          <sol:FunctionFor rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for.for_i_0i__be.lengthi___babcde_k_____be_i_.L204*C8364">
            <sol:conditionStep>i++</sol:conditionStep>
            <sol:hasForCondition>
              <sol:ForCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.i__be.length.L204*C8364">
                <sol:conditionValue>_be.length</sol:conditionValue>
                <sol:conditionSymbol>&lt;</sol:conditionSymbol>
              </sol:ForCondition>
            </sol:hasForCondition>
            <sol:conditionVar>i</sol:conditionVar>
            <sol:hasStateVar>
              <sol:stateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.i_0;.L204*C8364">
                <sol:valueIs>0</sol:valueIs>
                <sol:nameIs>i</sol:nameIs>
                <sol:typeName>null</sol:typeName>
              </sol:stateVar>
            </sol:hasStateVar>
            <sol:containAssignment>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.babcde_k_____be_i_.L204*C8397">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for.for_i_0i__be.lengthi___babcde_k_____be_i_.L204*C8364"/>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>_be[i]</sol:assignRight>
                <sol:assignLeft>babcde[k++]</sol:assignLeft>
              </sol:Assignment>
            </sol:containAssignment>
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.babcde_k_____bd_i_.L203*C8341"/>
          </sol:FunctionFor>
        </sol:hasFor>
        <sol:hasFor rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for.for_i_0i__bc.lengthi___babcde_k_____bc_i_.L202*C8252"/>
        <sol:hasFor rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for.for_i_0i__bb.lengthi___babcde_k_____bb_i_.L201*C8196"/>
        <sol:hasFor rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for.for_uinti_0i__ba.lengthi___babcde_k_____ba_i_.L200*C8135"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemorybabcde.L198*C8085"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemory_bb.L193*C7862"/>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L191*C7812">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.string.L191*C7821">
                <sol:typeName>string</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemory_be.L196*C7955"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._d.L191*C7781">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_d</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>strConcat</sol:nameIs>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemory_bd.L195*C7924"/>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.string_babcde_.L205*C8420">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.babcde_k_____be_i_.L204*C8397"/>
            <sol:returnText>string(babcde)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintk.L199*C8122"/>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.parseInt.L222*C8947">
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._b.L222*C8976">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>_b</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._a.L222*C8965">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_a</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.mint.L236*C9320">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.decimals_true.L234*C9299">
                <sol:before>
                  <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_for_if_ifRight_if_ifRight_if_ifWrong_if_ifRight._.L234*C9277">
                    <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.decimals_true.L234*C9299"/>
                    <sol:before>
                      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_for_if_ifRight_if_ifRight_if_ifWrong_if.bresult_i___46.L234*C9277">
                        <sol:before>
                          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_for_if_ifRight_if_ifRight_if_ifWrong_if.bresult_i___46.L234*C9277">
                            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_for_if_ifRight_if_ifRight_if_ifWrong_if_ifRight._.L234*C9277"/>
                            <sol:before>
                              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.mint__uint_bresult_i__-48.L233*C9238">
                                <sol:before>
                                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.mint__10.L232*C9225">
                                    <sol:before>
                                      <sol:VariableOperation rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprVaribleOp._b--.L230*C9215">
                                        <sol:before>
                                          <sol:IfWrong rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#8_con_fun_for_if_ifRight_if_ifRight_if_ifWrong._.L229*C9189">
                                            <sol:operateVarible rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprVaribleOp._b--.L230*C9215"/>
                                            <sol:before>
                                              <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#8_con_fun_for_if_ifRight_if_ifRight_if._b__0.L229*C9189">
                                                <sol:before>
                                                  <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#7_con_fun_for_if_ifRight_if_ifRight_if._b__0.L229*C9189">
                                                    <sol:hasIfWrong rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#8_con_fun_for_if_ifRight_if_ifRight_if_ifWrong._.L229*C9189"/>
                                                    <sol:hasIfRight>
                                                      <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#8_con_fun_for_if_ifRight_if_ifRight_if_ifRight._.L229*C9189">
                                                        <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#8_con_fun_for_if_ifRight_if_ifRight_if._b__0.L229*C9189"/>
                                                      </sol:IfRight>
                                                    </sol:hasIfRight>
                                                    <sol:before>
                                                      <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_for_if_ifRight_if_ifRight._.L228*C9173">
                                                        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#7_con_fun_for_if_ifRight_if_ifRight_if._b__0.L229*C9189"/>
                                                        <sol:before>
                                                          <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_for_if_ifRight_if.decimals.L228*C9173">
                                                            <sol:before>
                                                              <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_for_if_ifRight_if.decimals.L228*C9173">
    <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_for_if_ifRight_if_ifRight._.L228*C9173"/>
    <sol:before>
      <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if_ifRight._.L227*C9127">
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.mint__uint_bresult_i__-48.L233*C9238"/>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.mint__10.L232*C9225"/>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_for_if_ifRight_if.decimals.L228*C9173"/>
        <sol:before>
          <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if._bresult_i___48_&amp;&amp;_bresult_i___57_.L227*C9127">
            <sol:before>
              <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_for_if._bresult_i___48_&amp;&amp;_bresult_i___57_.L227*C9127">
                <sol:hasIfWrong>
                  <sol:IfWrong rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#8_con_fun_for_if_ifRight_if_ifRight_if_ifWrong._.L227*C9127">
                    <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_for_if_ifRight_if_ifRight_if_ifWrong_if.bresult_i___46.L234*C9277"/>
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if._bresult_i___48_&amp;&amp;_bresult_i___57_.L227*C9127"/>
                  </sol:IfWrong>
                </sol:hasIfWrong>
                <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if_ifRight._.L227*C9127"/>
                <sol:before>
                  <sol:FunctionFor rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for.for_uinti_0i_bresult.lengthi____if__bresult_i___48_&amp;&amp;_bresult_i___57___if_decimals__if__b__0_breakelse_b--_mint__10mint__uint_bresult_i__-48_elseif_bresult_i___46_decimals_true_.L226*C9087">
                    <sol:conditionStep>i++</sol:conditionStep>
                    <sol:hasForCondition>
                      <sol:ForCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.i_bresult.length.L226*C9087">
                        <sol:conditionValue>bresult.length</sol:conditionValue>
                        <sol:conditionSymbol>&lt;</sol:conditionSymbol>
                      </sol:ForCondition>
                    </sol:hasForCondition>
                    <sol:conditionVar>i</sol:conditionVar>
                    <sol:hasStateVar>
                      <sol:stateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.uinti.L226*C9087">
                        <sol:valueIs>0</sol:valueIs>
                        <sol:nameIs>i</sol:nameIs>
                        <sol:typeName>uint</sol:typeName>
                      </sol:stateVar>
                    </sol:hasStateVar>
                    <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_for_if._bresult_i___48_&amp;&amp;_bresult_i___57_.L227*C9127"/>
                    <sol:before>
                      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.booldecimals.L225*C9063">
                        <sol:before>
                          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintmint.L224*C9047">
                            <sol:before>
                              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemorybresult.L223*C9012">
                                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.parseInt.L222*C8947"/>
                                <sol:storageLocate>memory</sol:storageLocate>
                                <sol:valueIs>bytes(_a)</sol:valueIs>
                                <sol:nameIs>bresult</sol:nameIs>
                                <sol:typeName>bytes</sol:typeName>
                              </sol:StateVar>
                            </sol:before>
                            <sol:valueIs>0</sol:valueIs>
                            <sol:nameIs>mint</sol:nameIs>
                            <sol:typeName>uint</sol:typeName>
                          </sol:StateVar>
                        </sol:before>
                        <sol:valueIs>false</sol:valueIs>
                        <sol:nameIs>decimals</sol:nameIs>
                        <sol:typeName>bool</sol:typeName>
                      </sol:StateVar>
                    </sol:before>
                  </sol:FunctionFor>
                </sol:before>
                <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if._bresult_i___48_&amp;&amp;_bresult_i___57_.L227*C9127"/>
              </sol:FunctionIf>
            </sol:before>
            <sol:hasIfCondition>(bresult[i]&gt;=48)&amp;&amp;(bresult[i]&lt;=57)</sol:hasIfCondition>
          </sol:IfCondition>
        </sol:before>
      </sol:IfRight>
    </sol:before>
    <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_for_if_ifRight_if.decimals.L228*C9173"/>
                                                              </sol:FunctionIf>
                                                            </sol:before>
                                                            <sol:hasIfCondition
                                                            >decimals</sol:hasIfCondition>
                                                          </sol:IfCondition>
                                                        </sol:before>
                                                      </sol:IfRight>
                                                    </sol:before>
                                                    <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#8_con_fun_for_if_ifRight_if_ifRight_if._b__0.L229*C9189"/>
                                                  </sol:FunctionIf>
                                                </sol:before>
                                                <sol:hasIfCondition
                                                >_b==0</sol:hasIfCondition>
                                              </sol:IfCondition>
                                            </sol:before>
                                          </sol:IfWrong>
                                        </sol:before>
                                        <sol:opSymbol>--</sol:opSymbol>
                                        <sol:opVarible>_b</sol:opVarible>
                                      </sol:VariableOperation>
                                    </sol:before>
                                    <sol:assignSymbol>=</sol:assignSymbol>
                                    <sol:assignRight>mint*10</sol:assignRight>
                                    <sol:assignLeft>mint</sol:assignLeft>
                                  </sol:Assignment>
                                </sol:before>
                                <sol:assignSymbol>=</sol:assignSymbol>
                                <sol:assignRight>mint+uint(bresult[i])-48</sol:assignRight>
                                <sol:assignLeft>mint</sol:assignLeft>
                              </sol:Assignment>
                            </sol:before>
                            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_for_if_ifRight_if_ifRight_if_ifWrong_if.bresult_i___46.L234*C9277"/>
                          </sol:FunctionIf>
                        </sol:before>
                        <sol:hasIfCondition>bresult[i]==46</sol:hasIfCondition>
                      </sol:IfCondition>
                    </sol:before>
                  </sol:IfRight>
                </sol:before>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>true</sol:assignRight>
                <sol:assignLeft>decimals</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.mint__uint_bresult_i__-48.L233*C9238"/>
            <sol:returnText>mint</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L222*C8994">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.uint.L222*C9003">
                <sol:typeName>uint</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemorybresult.L223*C9012"/>
        <sol:hasFor rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for.for_uinti_0i_bresult.lengthi____if__bresult_i___48_&amp;&amp;_bresult_i___57___if_decimals__if__b__0_breakelse_b--_mint__10mint__uint_bresult_i__-48_elseif_bresult_i___46_decimals_true_.L226*C9087"/>
        <sol:nameIs>parseInt</sol:nameIs>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.booldecimals.L225*C9063"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintmint.L224*C9047"/>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L79*C3292">
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize.query.value_price__0_datasource_arg_.L82*C3516">
            <sol:before>
              <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.0.L81*C3478">
                <sol:before>
                  <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L81*C3436">
                    <sol:hasReturnValue rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.0.L81*C3478"/>
                    <sol:before>
                      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.price_1ether_tx.gasprice_200000.L81*C3436">
                        <sol:before>
                          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.price_1ether_tx.gasprice_200000.L81*C3436">
                            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L81*C3436"/>
                            <sol:before>
                              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintprice.L80*C3391">
                                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L79*C3292"/>
                                <sol:valueIs>oraclize.getPrice(datasource)</sol:valueIs>
                                <sol:nameIs>price</sol:nameIs>
                                <sol:typeName>uint</sol:typeName>
                              </sol:StateVar>
                            </sol:before>
                            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.price_1ether_tx.gasprice_200000.L81*C3436"/>
                          </sol:FunctionIf>
                        </sol:before>
                        <sol:hasIfCondition>price&gt;1ether+tx.gasprice*200000</sol:hasIfCondition>
                      </sol:IfCondition>
                    </sol:before>
                  </sol:IfRight>
                </sol:before>
                <sol:returnText>0</sol:returnText>
              </sol:ReturnValue>
            </sol:before>
            <sol:returnText>oraclize.query.value(price)(0,datasource,arg)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L79*C3368">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.id.L79*C3377">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.arg.L79*C3335">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>arg</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.price_1ether_tx.gasprice_200000.L81*C3436"/>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:nameIs>oraclize_query</sol:nameIs>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintprice.L80*C3391"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L79*C3316">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L94*C4242">
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.gaslimit.L94*C4297">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>gaslimit</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasIf>
          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.price_1ether_tx.gasprice_gaslimit.L96*C4411">
            <sol:hasIfRight>
              <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L96*C4411">
                <sol:hasReturnValue>
                  <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.0.L96*C4455">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L96*C4411"/>
                    <sol:returnText>0</sol:returnText>
                  </sol:ReturnValue>
                </sol:hasReturnValue>
                <sol:before>
                  <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.price_1ether_tx.gasprice_gaslimit.L96*C4411">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.price_1ether_tx.gasprice_gaslimit.L96*C4411"/>
                    <sol:hasIfCondition>price&gt;1ether+tx.gasprice*gaslimit</sol:hasIfCondition>
                  </sol:IfCondition>
                </sol:before>
              </sol:IfRight>
            </sol:hasIfRight>
            <sol:before>
              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintprice.L95*C4356">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L94*C4242"/>
                <sol:valueIs>oraclize.getPrice(datasource,gaslimit)</sol:valueIs>
                <sol:nameIs>price</sol:nameIs>
                <sol:typeName>uint</sol:typeName>
              </sol:StateVar>
            </sol:before>
            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.price_1ether_tx.gasprice_gaslimit.L96*C4411"/>
          </sol:FunctionIf>
        </sol:hasIf>
        <sol:nameIs>oraclize_query</sol:nameIs>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintprice.L95*C4356"/>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize.query_withGasLimit.value_price__0_datasource_arg_gaslimit_.L97*C4493">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.0.L96*C4455"/>
            <sol:returnText>oraclize.query_withGasLimit.value(price)(0,datasource,arg,gaslimit)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L94*C4333">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.id.L94*C4342">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L94*C4266">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.arg.L94*C4285">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>arg</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.week.L36*C1979">
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:valueIs>60*60*24*7</sol:valueIs>
        <sol:typeName>uint</sol:typeName>
        <sol:nameIs>week</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.parseAddr.L130*C6282">
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._a.L130*C6301">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_a</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uint160b1.L133*C6392">
            <sol:before>
              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uint160iaddr.L132*C6372">
                <sol:before>
                  <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemorytmp.L131*C6341">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.parseAddr.L130*C6282"/>
                    <sol:storageLocate>memory</sol:storageLocate>
                    <sol:valueIs>bytes(_a)</sol:valueIs>
                    <sol:nameIs>tmp</sol:nameIs>
                    <sol:typeName>bytes</sol:typeName>
                  </sol:StateVar>
                </sol:before>
                <sol:valueIs>0</sol:valueIs>
                <sol:nameIs>iaddr</sol:nameIs>
                <sol:typeName>uint160</sol:typeName>
              </sol:StateVar>
            </sol:before>
            <sol:valueIs>null</sol:valueIs>
            <sol:nameIs>b1</sol:nameIs>
            <sol:typeName>uint160</sol:typeName>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemorytmp.L131*C6341"/>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L130*C6321">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.address.L130*C6330">
                <sol:typeName>address</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.address_iaddr_.L145*C6707">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.iaddr___b1_16_b2_.L143*C6682">
                <sol:before>
                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.b2-_48.L142*C6671">
                    <sol:before>
                      <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_for_if_ifWrong_if_ifRight._.L142*C6643">
                        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.b2-_48.L142*C6671"/>
                        <sol:before>
                          <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_for_if_ifWrong_if._b2__48_&amp;&amp;_b2__57_.L142*C6643">
                            <sol:before>
                              <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_for_if_ifWrong_if._b2__48_&amp;&amp;_b2__57_.L142*C6643">
                                <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_for_if_ifWrong_if_ifRight._.L142*C6643"/>
                                <sol:before>
                                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.b2-_87.L141*C6627">
                                    <sol:before>
                                      <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if_ifRight._.L141*C6598">
                                        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.b2-_87.L141*C6627"/>
                                        <sol:before>
                                          <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if._b2__97_&amp;&amp;_b2__102_.L141*C6598">
                                            <sol:before>
                                              <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_for_if._b2__97_&amp;&amp;_b2__102_.L141*C6598">
                                                <sol:hasIfWrong>
                                                  <sol:IfWrong rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if_ifWrong._.L141*C6598">
                                                    <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_for_if_ifWrong_if._b2__48_&amp;&amp;_b2__57_.L142*C6643"/>
                                                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if._b2__97_&amp;&amp;_b2__102_.L141*C6598"/>
                                                  </sol:IfWrong>
                                                </sol:hasIfWrong>
                                                <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if_ifRight._.L141*C6598"/>
                                                <sol:before>
                                                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.b1-_48.L140*C6587">
                                                    <sol:before>
                                                      <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_for_if_ifWrong_if_ifRight._.L140*C6559">
                                                        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.b1-_48.L140*C6587"/>
                                                        <sol:before>
                                                          <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_for_if_ifWrong_if._b1__48_&amp;&amp;_b1__57_.L140*C6559">
                                                            <sol:before>
                                                              <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_for_if_ifWrong_if._b1__48_&amp;&amp;_b1__57_.L140*C6559">
    <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_for_if_ifWrong_if_ifRight._.L140*C6559"/>
    <sol:before>
      <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.b1-_87.L139*C6543">
        <sol:before>
          <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if_ifRight._.L139*C6514">
            <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.b1-_87.L139*C6543"/>
            <sol:before>
              <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if._b1__97_&amp;&amp;_b1__102_.L139*C6514">
                <sol:before>
                  <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_for_if._b1__97_&amp;&amp;_b1__102_.L139*C6514">
                    <sol:hasIfWrong>
                      <sol:IfWrong rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if_ifWrong._.L139*C6514">
                        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_for_if_ifWrong_if._b1__48_&amp;&amp;_b1__57_.L140*C6559"/>
                        <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if._b1__97_&amp;&amp;_b1__102_.L139*C6514"/>
                      </sol:IfWrong>
                    </sol:hasIfWrong>
                    <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if_ifRight._.L139*C6514"/>
                    <sol:before>
                      <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.b2_uint160_tmp_i_1__.L138*C6489">
                        <sol:before>
                          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.b1_uint160_tmp_i__.L137*C6466">
                            <sol:before>
                              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.iaddr__256.L136*C6451">
                                <sol:before>
                                  <sol:FunctionFor rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for.for_uinti_2i_2_2_20i__2__iaddr__256b1_uint160_tmp_i__b2_uint160_tmp_i_1__if__b1__97_&amp;&amp;_b1__102__b1-_87elseif__b1__48_&amp;&amp;_b1__57__b1-_48if__b2__97_&amp;&amp;_b2__102__b2-_87elseif__b2__48_&amp;&amp;_b2__57__b2-_48iaddr___b1_16_b2__.L135*C6418">
                                    <sol:conditionVar>i</sol:conditionVar>
                                    <sol:hasStateVar>
                                      <sol:stateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.uinti.L135*C6418">
                                        <sol:valueIs>2</sol:valueIs>
                                        <sol:nameIs>i</sol:nameIs>
                                        <sol:typeName>uint</sol:typeName>
                                      </sol:stateVar>
                                    </sol:hasStateVar>
                                    <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.b2_uint160_tmp_i_1__.L138*C6489"/>
                                    <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_for_if._b1__97_&amp;&amp;_b1__102_.L139*C6514"/>
                                    <sol:conditionStep>i+=2</sol:conditionStep>
                                    <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_for_if._b2__97_&amp;&amp;_b2__102_.L141*C6598"/>
                                    <sol:hasForCondition>
                                      <sol:ForCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.i_2_2_20.L135*C6418">
                                        <sol:conditionValue>2+2*20</sol:conditionValue>
                                        <sol:conditionSymbol>&lt;</sol:conditionSymbol>
                                      </sol:ForCondition>
                                    </sol:hasForCondition>
                                    <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.iaddr___b1_16_b2_.L143*C6682"/>
                                    <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.iaddr__256.L136*C6451"/>
                                    <sol:before>
                                      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uint160b2.L134*C6405">
                                        <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uint160b1.L133*C6392"/>
                                        <sol:valueIs>null</sol:valueIs>
                                        <sol:nameIs>b2</sol:nameIs>
                                        <sol:typeName>uint160</sol:typeName>
                                      </sol:StateVar>
                                    </sol:before>
                                    <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.b1_uint160_tmp_i__.L137*C6466"/>
                                  </sol:FunctionFor>
                                </sol:before>
                                <sol:assignSymbol>=</sol:assignSymbol>
                                <sol:assignRight>iaddr*256</sol:assignRight>
                                <sol:assignLeft>iaddr</sol:assignLeft>
                              </sol:Assignment>
                            </sol:before>
                            <sol:assignSymbol>=</sol:assignSymbol>
                            <sol:assignRight>uint160(tmp[i])</sol:assignRight>
                            <sol:assignLeft>b1</sol:assignLeft>
                          </sol:Assignment>
                        </sol:before>
                        <sol:assignSymbol>=</sol:assignSymbol>
                        <sol:assignRight>uint160(tmp[i+1])</sol:assignRight>
                        <sol:assignLeft>b2</sol:assignLeft>
                      </sol:Assignment>
                    </sol:before>
                    <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if._b1__97_&amp;&amp;_b1__102_.L139*C6514"/>
                  </sol:FunctionIf>
                </sol:before>
                <sol:hasIfCondition>(b1&gt;=97)&amp;&amp;(b1&lt;=102)</sol:hasIfCondition>
              </sol:IfCondition>
            </sol:before>
          </sol:IfRight>
        </sol:before>
        <sol:assignSymbol>=</sol:assignSymbol>
        <sol:assignRight>b1-87</sol:assignRight>
        <sol:assignLeft>b1</sol:assignLeft>
      </sol:Assignment>
    </sol:before>
    <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_for_if_ifWrong_if._b1__48_&amp;&amp;_b1__57_.L140*C6559"/>
                                                              </sol:FunctionIf>
                                                            </sol:before>
                                                            <sol:hasIfCondition
                                                            >(b1&gt;=48)&amp;&amp;(b1&lt;=57)</sol:hasIfCondition>
                                                          </sol:IfCondition>
                                                        </sol:before>
                                                      </sol:IfRight>
                                                    </sol:before>
                                                    <sol:assignSymbol
                                                    >=</sol:assignSymbol>
                                                    <sol:assignRight
                                                    >b1-48</sol:assignRight>
                                                    <sol:assignLeft
                                                    >b1</sol:assignLeft>
                                                  </sol:Assignment>
                                                </sol:before>
                                                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.b1-_87.L139*C6543"/>
                                                <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if._b2__97_&amp;&amp;_b2__102_.L141*C6598"/>
                                              </sol:FunctionIf>
                                            </sol:before>
                                            <sol:hasIfCondition
                                            >(b2&gt;=97)&amp;&amp;(b2&lt;=102)</sol:hasIfCondition>
                                          </sol:IfCondition>
                                        </sol:before>
                                      </sol:IfRight>
                                    </sol:before>
                                    <sol:assignSymbol>=</sol:assignSymbol>
                                    <sol:assignRight>b2-87</sol:assignRight>
                                    <sol:assignLeft>b2</sol:assignLeft>
                                  </sol:Assignment>
                                </sol:before>
                                <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_for_if_ifWrong_if._b2__48_&amp;&amp;_b2__57_.L142*C6643"/>
                              </sol:FunctionIf>
                            </sol:before>
                            <sol:hasIfCondition>(b2&gt;=48)&amp;&amp;(b2&lt;=57)</sol:hasIfCondition>
                          </sol:IfCondition>
                        </sol:before>
                      </sol:IfRight>
                    </sol:before>
                    <sol:assignSymbol>=</sol:assignSymbol>
                    <sol:assignRight>b2-48</sol:assignRight>
                    <sol:assignLeft>b2</sol:assignLeft>
                  </sol:Assignment>
                </sol:before>
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.b2-_87.L141*C6627"/>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>iaddr+(b1*16+b2)</sol:assignRight>
                <sol:assignLeft>iaddr</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:returnText>address(iaddr)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:nameIs>parseAddr</sol:nameIs>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uint160iaddr.L132*C6372"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uint160b2.L134*C6405"/>
        <sol:hasFor rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for.for_uinti_2i_2_2_20i__2__iaddr__256b1_uint160_tmp_i__b2_uint160_tmp_i_1__if__b1__97_&amp;&amp;_b1__102__b1-_87elseif__b1__48_&amp;&amp;_b1__57__b1-_48if__b2__97_&amp;&amp;_b2__102__b2-_87elseif__b2__48_&amp;&amp;_b2__57__b2-_48iaddr___b1_16_b2__.L135*C6418"/>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.indexOf.L164*C7141">
        <sol:hasIf>
          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.h.length_1__n.length_1___n.length_h.length_.L168*C7289">
            <sol:hasIfWrong>
              <sol:IfWrong rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifWrong._.L168*C7289">
                <sol:hasIf>
                  <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_if_ifWrong_if.h.length__2__128-1_.L170*C7366">
                    <sol:hasIfWrong>
                      <sol:IfWrong rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if_ifWrong._.L170*C7366">
                        <sol:hasReturnValue>
                          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if_ifWrong_return.-1.L188*C7708">
                            <sol:before>
                              <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#100_con_fun_if_ifWrong_if_ifWrong_for_if_ifRight_if_ifRight_return.int_i_.L185*C7686">
                                <sol:before>
                                  <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#10_con_fun_if_ifWrong_if_ifWrong_for_if_ifRight_if_ifRight._.L184*C7660">
                                    <sol:hasReturnValue rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#100_con_fun_if_ifWrong_if_ifWrong_for_if_ifRight_if_ifRight_return.int_i_.L185*C7686"/>
                                    <sol:before>
                                      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#10_con_fun_if_ifWrong_if_ifWrong_for_if_ifRight_if.subindex__n.length.L184*C7660">
                                        <sol:before>
                                          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#9_con_fun_if_ifWrong_if_ifWrong_for_if_ifRight_if.subindex__n.length.L184*C7660">
                                            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#10_con_fun_if_ifWrong_if_ifWrong_for_if_ifRight_if_ifRight._.L184*C7660"/>
                                            <sol:before>
                                              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.subindex_1.L179*C7532">
                                                <sol:before>
                                                  <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#8_con_fun_if_ifWrong_if_ifWrong_for_if_ifRight._.L177*C7510">
                                                    <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#9_con_fun_if_ifWrong_if_ifWrong_for_if_ifRight_if.subindex__n.length.L184*C7660"/>
                                                    <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.subindex_1.L179*C7532"/>
                                                    <sol:before>
                                                      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#8_con_fun_if_ifWrong_if_ifWrong_for_if.h_i___n_0_.L177*C7510">
                                                        <sol:before>
                                                          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#7_con_fun_if_ifWrong_if_ifWrong_for_if.h_i___n_0_.L177*C7510">
                                                            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#8_con_fun_if_ifWrong_if_ifWrong_for_if_ifRight._.L177*C7510"/>
                                                            <sol:before>
                                                              <sol:FunctionFor rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_if_ifWrong_if_ifWrong_for.for_uinti_0i_h.lengthi____if_h_i___n_0___subindex_1while_subindex_n.length&amp;&amp;_i_subindex__h.length&amp;&amp;h_i_subindex___n_subindex___subindex___if_subindex__n.length_returnint_i___.L175*C7469">
    <sol:conditionStep>i++</sol:conditionStep>
    <sol:hasForCondition>
      <sol:ForCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.i_h.length.L175*C7469">
        <sol:conditionValue>h.length</sol:conditionValue>
        <sol:conditionSymbol>&lt;</sol:conditionSymbol>
      </sol:ForCondition>
    </sol:hasForCondition>
    <sol:conditionVar>i</sol:conditionVar>
    <sol:hasStateVar>
      <sol:stateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.uinti.L175*C7469">
        <sol:valueIs>0</sol:valueIs>
        <sol:nameIs>i</sol:nameIs>
        <sol:typeName>uint</sol:typeName>
      </sol:stateVar>
    </sol:hasStateVar>
    <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#7_con_fun_if_ifWrong_if_ifWrong_for_if.h_i___n_0_.L177*C7510"/>
    <sol:before>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if_ifWrong_varDeclare.uintsubindex.L174*C7449">
        <sol:before>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if_ifRight_return.-1.L171*C7394">
            <sol:before>
              <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if_ifRight._.L170*C7366">
                <sol:conditionStep>i++</sol:conditionStep>
                <sol:hasForCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.i_h.length.L175*C7469"/>
                <sol:conditionVar>i</sol:conditionVar>
                <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.uinti.L175*C7469"/>
                <sol:hasReturnValue rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if_ifRight_return.-1.L171*C7394"/>
                <sol:before>
                  <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if.h.length__2__128-1_.L170*C7366">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_if_ifWrong_if.h.length__2__128-1_.L170*C7366"/>
                    <sol:hasIfCondition>h.length&gt;(2**128-1)</sol:hasIfCondition>
                  </sol:IfCondition>
                </sol:before>
              </sol:IfRight>
            </sol:before>
            <sol:returnText>-1</sol:returnText>
          </sol:ReturnValue>
        </sol:before>
        <sol:valueIs>0</sol:valueIs>
        <sol:nameIs>subindex</sol:nameIs>
        <sol:typeName>uint</sol:typeName>
      </sol:StateVar>
    </sol:before>                                             </sol:FunctionFor>
                                                            </sol:before>
                                                            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#8_con_fun_if_ifWrong_if_ifWrong_for_if.h_i___n_0_.L177*C7510"/>
                                                          </sol:FunctionIf>
                                                        </sol:before>
                                                        <sol:hasIfCondition
                                                        >h[i]==n[0]</sol:hasIfCondition>
                                                      </sol:IfCondition>
                                                    </sol:before>
                                                  </sol:IfRight>
                                                </sol:before>
                                                <sol:assignSymbol
                                                >=</sol:assignSymbol>
                                                <sol:assignRight
                                                >1</sol:assignRight>
                                                <sol:assignLeft
                                                >subindex</sol:assignLeft>
                                              </sol:Assignment>
                                            </sol:before>
                                            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#10_con_fun_if_ifWrong_if_ifWrong_for_if_ifRight_if.subindex__n.length.L184*C7660"/>
                                          </sol:FunctionIf>
                                        </sol:before>
                                        <sol:hasIfCondition>subindex==n.length</sol:hasIfCondition>
                                      </sol:IfCondition>
                                    </sol:before>
                                  </sol:IfRight>
                                </sol:before>
                                <sol:returnText>int(i)</sol:returnText>
                              </sol:ReturnValue>
                            </sol:before>
                            <sol:returnText>-1</sol:returnText>
                          </sol:ReturnValue>
                        </sol:hasReturnValue>
                        <sol:hasFor rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_if_ifWrong_if_ifWrong_for.for_uinti_0i_h.lengthi____if_h_i___n_0___subindex_1while_subindex_n.length&amp;&amp;_i_subindex__h.length&amp;&amp;h_i_subindex___n_subindex___subindex___if_subindex__n.length_returnint_i___.L175*C7469"/>
                        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if_ifWrong_varDeclare.uintsubindex.L174*C7449"/>
                        <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if.h.length__2__128-1_.L170*C7366"/>
                      </sol:IfWrong>
                    </sol:hasIfWrong>
                    <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if_ifRight._.L170*C7366"/>
                    <sol:before>
                      <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.-1.L169*C7349">
                        <sol:before>
                          <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L168*C7289">
                            <sol:conditionStep>i++</sol:conditionStep>
                            <sol:hasForCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.i_h.length.L175*C7469"/>
                            <sol:conditionVar>i</sol:conditionVar>
                            <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.uinti.L175*C7469"/>
                            <sol:hasReturnValue rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.-1.L169*C7349"/>
                            <sol:before>
                              <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.h.length_1__n.length_1___n.length_h.length_.L168*C7289">
                                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.h.length_1__n.length_1___n.length_h.length_.L168*C7289"/>
                                <sol:hasIfCondition>h.length&lt;1||n.length&lt;1||(n.length&gt;h.length)</sol:hasIfCondition>
                              </sol:IfCondition>
                            </sol:before>
                          </sol:IfRight>
                        </sol:before>
                        <sol:returnText>-1</sol:returnText>
                      </sol:ReturnValue>
                    </sol:before>
                    <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if.h.length__2__128-1_.L170*C7366"/>
                  </sol:FunctionIf>
                </sol:hasIf>
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.h.length_1__n.length_1___n.length_h.length_.L168*C7289"/>
              </sol:IfWrong>
            </sol:hasIfWrong>
            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L168*C7289"/>
            <sol:before>
              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemoryn.L167*C7255">
                <sol:before>
                  <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemoryh.L166*C7219">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.indexOf.L164*C7141"/>
                    <sol:storageLocate>memory</sol:storageLocate>
                    <sol:valueIs>bytes(_haystack)</sol:valueIs>
                    <sol:nameIs>h</sol:nameIs>
                    <sol:typeName>bytes</sol:typeName>
                  </sol:StateVar>
                </sol:before>
                <sol:storageLocate>memory</sol:storageLocate>
                <sol:valueIs>bytes(_needle)</sol:valueIs>
                <sol:nameIs>n</sol:nameIs>
                <sol:typeName>bytes</sol:typeName>
              </sol:StateVar>
            </sol:before>
            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.h.length_1__n.length_1___n.length_h.length_.L168*C7289"/>
          </sol:FunctionIf>
        </sol:hasIf>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemoryn.L167*C7255"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemoryh.L166*C7219"/>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L164*C7201">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.int.L164*C7210">
                <sol:typeName>int</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._needle.L164*C7176">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_needle</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._haystack.L164*C7158">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_haystack</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>indexOf</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L109*C5212">
        <sol:nameIs>oraclize_query</sol:nameIs>
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintprice.L110*C5356">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L109*C5212"/>
            <sol:valueIs>oraclize.getPrice(datasource,gaslimit)</sol:valueIs>
            <sol:nameIs>price</sol:nameIs>
            <sol:typeName>uint</sol:typeName>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasIf>
          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.price_1ether_tx.gasprice_gaslimit.L111*C5411">
            <sol:hasIfRight>
              <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L111*C5411">
                <sol:hasReturnValue>
                  <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.0.L111*C5455">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L111*C5411"/>
                    <sol:returnText>0</sol:returnText>
                  </sol:ReturnValue>
                </sol:hasReturnValue>
                <sol:before>
                  <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.price_1ether_tx.gasprice_gaslimit.L111*C5411">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.price_1ether_tx.gasprice_gaslimit.L111*C5411"/>
                    <sol:hasIfCondition>price&gt;1ether+tx.gasprice*gaslimit</sol:hasIfCondition>
                  </sol:IfCondition>
                </sol:before>
              </sol:IfRight>
            </sol:hasIfRight>
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintprice.L110*C5356"/>
            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.price_1ether_tx.gasprice_gaslimit.L111*C5411"/>
          </sol:FunctionIf>
        </sol:hasIf>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.arg1.L109*C5271">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>arg1</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L109*C5333">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.id.L109*C5342">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L109*C5252">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize.query2_withGasLimit.value_price__timestamp_datasource_arg1_arg2_gaslimit_.L112*C5493">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.0.L111*C5455"/>
            <sol:returnText>oraclize.query2_withGasLimit.value(price)(timestamp,datasource,arg1,arg2,gaslimit)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.timestamp.L109*C5236">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>timestamp</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.gaslimit.L109*C5297">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>gaslimit</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.arg2.L109*C5284">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>arg2</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.day.L35*C1948">
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:valueIs>60*60*24</sol:valueIs>
        <sol:typeName>uint</sol:typeName>
        <sol:nameIs>day</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.networkID_mainnet.L42*C2207">
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:valueIs>1</sol:valueIs>
        <sol:typeName>uint8</sol:typeName>
        <sol:nameIs>networkID_mainnet</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.strConcat.L208*C8450">
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.strConcat__a__b__c__d_&quot;&quot;_.L209*C8542">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.strConcat.L208*C8450"/>
            <sol:returnText>strConcat(_a,_b,_c,_d,"")</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L208*C8522">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.string.L208*C8531">
                <sol:typeName>string</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._d.L208*C8502">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_d</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._c.L208*C8491">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_c</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._b.L208*C8480">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_b</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._a.L208*C8469">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_a</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>strConcat</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.strCompare.L147*C6734">
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemorya.L148*C6802">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.strCompare.L147*C6734"/>
            <sol:storageLocate>memory</sol:storageLocate>
            <sol:valueIs>bytes(_a)</sol:valueIs>
            <sol:nameIs>a</sol:nameIs>
            <sol:typeName>bytes</sol:typeName>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L147*C6785">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.int.L147*C6794">
                <sol:typeName>int</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemoryb.L149*C6831">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemorya.L148*C6802"/>
            <sol:storageLocate>memory</sol:storageLocate>
            <sol:valueIs>bytes(_b)</sol:valueIs>
            <sol:nameIs>b</sol:nameIs>
            <sol:typeName>bytes</sol:typeName>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasIf>
          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.b.length_minLength.L151*C6888">
            <sol:hasIfRight>
              <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L151*C6888">
                <sol:containAssignment>
                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.minLength_b.length.L151*C6914">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L151*C6888"/>
                    <sol:assignSymbol>=</sol:assignSymbol>
                    <sol:assignRight>b.length</sol:assignRight>
                    <sol:assignLeft>minLength</sol:assignLeft>
                  </sol:Assignment>
                </sol:containAssignment>
                <sol:before>
                  <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.b.length_minLength.L151*C6888">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.b.length_minLength.L151*C6888"/>
                    <sol:hasIfCondition>b.length&lt;minLength</sol:hasIfCondition>
                  </sol:IfCondition>
                </sol:before>
              </sol:IfRight>
            </sol:hasIfRight>
            <sol:before>
              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintminLength.L150*C6860">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemoryb.L149*C6831"/>
                <sol:valueIs>a.length</sol:valueIs>
                <sol:nameIs>minLength</sol:nameIs>
                <sol:typeName>uint</sol:typeName>
              </sol:StateVar>
            </sol:before>
            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.b.length_minLength.L151*C6888"/>
          </sol:FunctionIf>
        </sol:hasIf>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintminLength.L150*C6860"/>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasFor>
          <sol:FunctionFor rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for.for_uinti_0i_minLengthi___if_a_i__b_i__return-1elseif_a_i__b_i__return1.L152*C6937">
            <sol:conditionStep>i++</sol:conditionStep>
            <sol:hasForCondition>
              <sol:ForCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.i_minLength.L152*C6937">
                <sol:conditionValue>minLength</sol:conditionValue>
                <sol:conditionSymbol>&lt;</sol:conditionSymbol>
              </sol:ForCondition>
            </sol:hasForCondition>
            <sol:conditionVar>i</sol:conditionVar>
            <sol:hasStateVar>
              <sol:stateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.uinti.L152*C6937">
                <sol:valueIs>0</sol:valueIs>
                <sol:nameIs>i</sol:nameIs>
                <sol:typeName>uint</sol:typeName>
              </sol:stateVar>
            </sol:hasStateVar>
            <sol:hasIf>
              <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_for_if.a_i__b_i_.L153*C6976">
                <sol:hasIfWrong>
                  <sol:IfWrong rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if_ifWrong._.L153*C6976">
                    <sol:hasIf>
                      <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_for_if_ifWrong_if.a_i__b_i_.L155*C7011">
                        <sol:hasIfRight>
                          <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_for_if_ifWrong_if_ifRight._.L155*C7011">
                            <sol:hasReturnValue>
                              <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_for_if_ifWrong_if_ifRight_return.1.L156*C7029">
                                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_for_if_ifWrong_if_ifRight._.L155*C7011"/>
                                <sol:returnText>1</sol:returnText>
                              </sol:ReturnValue>
                            </sol:hasReturnValue>
                            <sol:before>
                              <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_for_if_ifWrong_if.a_i__b_i_.L155*C7011">
                                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_for_if_ifWrong_if.a_i__b_i_.L155*C7011"/>
                                <sol:hasIfCondition>a[i]&gt;b[i]</sol:hasIfCondition>
                              </sol:IfCondition>
                            </sol:before>
                          </sol:IfRight>
                        </sol:hasIfRight>
                        <sol:before>
                          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if_ifRight_return.-1.L154*C6994">
                            <sol:before>
                              <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if_ifRight._.L153*C6976">
                                <sol:hasReturnValue rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if_ifRight_return.-1.L154*C6994"/>
                                <sol:before>
                                  <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if.a_i__b_i_.L153*C6976">
                                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_for_if.a_i__b_i_.L153*C6976"/>
                                    <sol:hasIfCondition>a[i]&lt;b[i]</sol:hasIfCondition>
                                  </sol:IfCondition>
                                </sol:before>
                              </sol:IfRight>
                            </sol:before>
                            <sol:returnText>-1</sol:returnText>
                          </sol:ReturnValue>
                        </sol:before>
                        <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_for_if_ifWrong_if.a_i__b_i_.L155*C7011"/>
                      </sol:FunctionIf>
                    </sol:hasIf>
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if.a_i__b_i_.L153*C6976"/>
                  </sol:IfWrong>
                </sol:hasIfWrong>
                <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if_ifRight._.L153*C6976"/>
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for.for_uinti_0i_minLengthi___if_a_i__b_i__return-1elseif_a_i__b_i__return1.L152*C6937"/>
                <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if.a_i__b_i_.L153*C6976"/>
              </sol:FunctionIf>
            </sol:hasIf>
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.minLength_b.length.L151*C6914"/>
          </sol:FunctionFor>
        </sol:hasFor>
        <sol:hasIf>
          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.a.length_b.length.L157*C7040">
            <sol:hasIfWrong>
              <sol:IfWrong rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifWrong._.L157*C7040">
                <sol:hasIf>
                  <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_if_ifWrong_if.a.length_b.length.L159*C7083">
                    <sol:hasIfWrong>
                      <sol:IfWrong rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if_ifWrong._.L159*C7083">
                        <sol:hasReturnValue>
                          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if_ifWrong_return.0.L162*C7126">
                            <sol:before>
                              <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if_ifRight_return.1.L160*C7109">
                                <sol:before>
                                  <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if_ifRight._.L159*C7083">
                                    <sol:hasReturnValue rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if_ifRight_return.1.L160*C7109"/>
                                    <sol:before>
                                      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if.a.length_b.length.L159*C7083">
                                        <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_if_ifWrong_if.a.length_b.length.L159*C7083"/>
                                        <sol:hasIfCondition>a.length&gt;b.length</sol:hasIfCondition>
                                      </sol:IfCondition>
                                    </sol:before>
                                  </sol:IfRight>
                                </sol:before>
                                <sol:returnText>1</sol:returnText>
                              </sol:ReturnValue>
                            </sol:before>
                            <sol:returnText>0</sol:returnText>
                          </sol:ReturnValue>
                        </sol:hasReturnValue>
                        <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if.a.length_b.length.L159*C7083"/>
                      </sol:IfWrong>
                    </sol:hasIfWrong>
                    <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if_ifRight._.L159*C7083"/>
                    <sol:before>
                      <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.-1.L158*C7066">
                        <sol:before>
                          <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L157*C7040">
                            <sol:hasReturnValue rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.-1.L158*C7066"/>
                            <sol:before>
                              <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.a.length_b.length.L157*C7040">
                                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.a.length_b.length.L157*C7040"/>
                                <sol:hasIfCondition>a.length&lt;b.length</sol:hasIfCondition>
                              </sol:IfCondition>
                            </sol:before>
                          </sol:IfRight>
                        </sol:before>
                        <sol:returnText>-1</sol:returnText>
                      </sol:ReturnValue>
                    </sol:before>
                    <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if.a.length_b.length.L159*C7083"/>
                  </sol:FunctionIf>
                </sol:hasIf>
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.a.length_b.length.L157*C7040"/>
              </sol:IfWrong>
            </sol:hasIfWrong>
            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L157*C7040"/>
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_for_if_ifWrong_if_ifRight_return.1.L156*C7029"/>
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if_ifRight_return.-1.L154*C6994"/>
            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.a.length_b.length.L157*C7040"/>
          </sol:FunctionIf>
        </sol:hasIf>
        <sol:nameIs>strCompare</sol:nameIs>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._b.L147*C6765">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_b</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._a.L147*C6754">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_a</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_setProof.L122*C6052">
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize.setProofType_proofP_.L123*C6116">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_setProof.L122*C6052"/>
            <sol:returnText>oraclize.setProofType(proofP)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.proofP.L122*C6079">
            <sol:typeName>byte</sol:typeName>
            <sol:nameIs>proofP</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>oraclize_setProof</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L99*C4576">
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.arg2.L99*C4632">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>arg2</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L99*C4600">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintprice.L100*C4689">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L99*C4576"/>
            <sol:valueIs>oraclize.getPrice(datasource)</sol:valueIs>
            <sol:nameIs>price</sol:nameIs>
            <sol:typeName>uint</sol:typeName>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize.query2.value_price__0_datasource_arg1_arg2_.L102*C4814">
            <sol:before>
              <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.0.L101*C4776">
                <sol:before>
                  <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L101*C4734">
                    <sol:hasReturnValue rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.0.L101*C4776"/>
                    <sol:before>
                      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.price_1ether_tx.gasprice_200000.L101*C4734">
                        <sol:before>
                          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.price_1ether_tx.gasprice_200000.L101*C4734">
                            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L101*C4734"/>
                            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintprice.L100*C4689"/>
                            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.price_1ether_tx.gasprice_200000.L101*C4734"/>
                          </sol:FunctionIf>
                        </sol:before>
                        <sol:hasIfCondition>price&gt;1ether+tx.gasprice*200000</sol:hasIfCondition>
                      </sol:IfCondition>
                    </sol:before>
                  </sol:IfRight>
                </sol:before>
                <sol:returnText>0</sol:returnText>
              </sol:ReturnValue>
            </sol:before>
            <sol:returnText>oraclize.query2.value(price)(0,datasource,arg1,arg2)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L99*C4666">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.id.L99*C4675">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.price_1ether_tx.gasprice_200000.L101*C4734"/>
        <sol:nameIs>oraclize_query</sol:nameIs>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.arg1.L99*C4619">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>arg1</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
      </sol:Function>
    </sol:hasFunction>
    <sol:defineModifier>
      <sol:Modifier rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_modifier.oraclizeAPI.L49*C2418">
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.oraclize_OraclizeI_oraclizeAddr_.L55*C2584">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.oraclizeAddr_OAR.getAddress__.L53*C2547">
                <sol:before>
                  <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.oraclize_setNetwork.L52*C2509">
                    <sol:before>
                      <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_modifier_if_ifRight._.L51*C2484">
                        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.oraclizeAddr_OAR.getAddress__.L53*C2547"/>
                        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.oraclize_setNetwork.L52*C2509"/>
                        <sol:before>
                          <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_modifier_if.oraclizeAddr__0.L51*C2484">
                            <sol:before>
                              <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_modifier_if.oraclizeAddr__0.L51*C2484">
                                <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_modifier_if_ifRight._.L51*C2484"/>
                                <sol:before>
                                  <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_modifier_varDeclare.addressoraclizeAddr.L50*C2442">
                                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_modifier.oraclizeAPI.L49*C2418"/>
                                    <sol:valueIs>OAR.getAddress()</sol:valueIs>
                                    <sol:nameIs>oraclizeAddr</sol:nameIs>
                                    <sol:typeName>address</sol:typeName>
                                  </sol:StateVar>
                                </sol:before>
                                <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_modifier_if.oraclizeAddr__0.L51*C2484"/>
                              </sol:FunctionIf>
                            </sol:before>
                            <sol:hasIfCondition>oraclizeAddr==0</sol:hasIfCondition>
                          </sol:IfCondition>
                        </sol:before>
                      </sol:IfRight>
                    </sol:before>
                    <sol:callFunctionArgument>networkID_auto</sol:callFunctionArgument>
                    <sol:callFunctionName>oraclize_setNetwork</sol:callFunctionName>
                  </sol:FunctionCall>
                </sol:before>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>OAR.getAddress()</sol:assignRight>
                <sol:assignLeft>oraclizeAddr</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>OraclizeI(oraclizeAddr)</sol:assignRight>
            <sol:assignLeft>oraclize</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_modifier_if.oraclizeAddr__0.L51*C2484"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_modifier_varDeclare.addressoraclizeAddr.L50*C2442"/>
        <sol:nameIs>oraclizeAPI</sol:nameIs>
      </sol:Modifier>
    </sol:defineModifier>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.oraclize.L48*C2397">
        <sol:typeName>OraclizeI</sol:typeName>
        <sol:nameIs>oraclize</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.proofType_TLSNotary.L39*C2087">
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:valueIs>0x10</sol:valueIs>
        <sol:typeName>byte</sol:typeName>
        <sol:nameIs>proofType_TLSNotary</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L104*C4882">
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintprice.L105*C5011">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L104*C4882"/>
            <sol:valueIs>oraclize.getPrice(datasource)</sol:valueIs>
            <sol:nameIs>price</sol:nameIs>
            <sol:typeName>uint</sol:typeName>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.arg2.L104*C4954">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>arg2</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.timestamp.L104*C4906">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>timestamp</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.arg1.L104*C4941">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>arg1</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L104*C4988">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.id.L104*C4997">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:nameIs>oraclize_query</sol:nameIs>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize.query2.value_price__timestamp_datasource_arg1_arg2_.L107*C5136">
            <sol:before>
              <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.0.L106*C5098">
                <sol:before>
                  <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L106*C5056">
                    <sol:hasReturnValue rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.0.L106*C5098"/>
                    <sol:before>
                      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.price_1ether_tx.gasprice_200000.L106*C5056">
                        <sol:before>
                          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.price_1ether_tx.gasprice_200000.L106*C5056">
                            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L106*C5056"/>
                            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintprice.L105*C5011"/>
                            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.price_1ether_tx.gasprice_200000.L106*C5056"/>
                          </sol:FunctionIf>
                        </sol:before>
                        <sol:hasIfCondition>price&gt;1ether+tx.gasprice*200000</sol:hasIfCondition>
                      </sol:IfCondition>
                    </sol:before>
                  </sol:IfRight>
                </sol:before>
                <sol:returnText>0</sol:returnText>
              </sol:ReturnValue>
            </sol:before>
            <sol:returnText>oraclize.query2.value(price)(timestamp,datasource,arg1,arg2)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.price_1ether_tx.gasprice_200000.L106*C5056"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L104*C4922">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
      </sol:Function>
    </sol:hasFunction>
  </sol:Contract>
  <sol:Contract rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con.Dice.L241*C9363">
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.getMinInvestment.L451*C15938">
        <sol:hasIf>
          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.numInvestors_maxInvestors.L452*C15992">
            <sol:hasIfWrong>
              <sol:IfWrong rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifWrong._.L452*C15992">
                <sol:hasReturnValue>
                  <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifWrong_return.getBalance_investors_investorID_.user_.L461*C16222">
                    <sol:before>
                      <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.investorID_i.L458*C16199">
                        <sol:before>
                          <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_if_ifWrong_for_if_ifRight._.L457*C16105">
                            <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.investorID_i.L458*C16199"/>
                            <sol:before>
                              <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_if_ifWrong_for_if.investorID__0__getBalance_investors_i_.user__getBalance_investors_investorID_.user_.L457*C16105">
                                <sol:before>
                                  <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_for_if.investorID__0__getBalance_investors_i_.user__getBalance_investors_investorID_.user_.L457*C16105">
                                    <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_if_ifWrong_for_if_ifRight._.L457*C16105"/>
                                    <sol:before>
                                      <sol:FunctionFor rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_if_ifWrong_for.for_uinti_1i__numInvestorsi____if_investorID__0__getBalance_investors_i_.user__getBalance_investors_investorID_.user___investorID_i__.L456*C16065">
                                        <sol:conditionStep>i++</sol:conditionStep>
                                        <sol:hasForCondition>
                                          <sol:ForCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.i__numInvestors.L456*C16065">
                                            <sol:conditionValue
                                            >numInvestors</sol:conditionValue>
                                            <sol:conditionSymbol
                                            >&lt;=</sol:conditionSymbol>
                                          </sol:ForCondition>
                                        </sol:hasForCondition>
                                        <sol:conditionVar>i</sol:conditionVar>
                                        <sol:hasStateVar>
                                          <sol:stateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.uinti.L456*C16065">
                                            <sol:valueIs>1</sol:valueIs>
                                            <sol:nameIs>i</sol:nameIs>
                                            <sol:typeName>uint</sol:typeName>
                                          </sol:stateVar>
                                        </sol:hasStateVar>
                                        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_for_if.investorID__0__getBalance_investors_i_.user__getBalance_investors_investorID_.user_.L457*C16105"/>
                                        <sol:before>
                                          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifWrong_varDeclare.uintinvestorID.L455*C16047">
                                            <sol:before>
                                              <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.0.L453*C16026">
                                                <sol:before>
                                                  <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L452*C15992">
                                                    <sol:conditionStep
                                                    >i++</sol:conditionStep>
                                                    <sol:hasForCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.i__numInvestors.L456*C16065"/>
                                                    <sol:conditionVar
                                                    >i</sol:conditionVar>
                                                    <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.uinti.L456*C16065"/>
                                                    <sol:hasReturnValue rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.0.L453*C16026"/>
                                                    <sol:before>
                                                      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.numInvestors_maxInvestors.L452*C15992">
                                                        <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.numInvestors_maxInvestors.L452*C15992"/>
                                                        <sol:hasIfCondition
                                                        >numInvestors&lt;maxInvestors</sol:hasIfCondition>
                                                      </sol:IfCondition>
                                                    </sol:before>
                                                  </sol:IfRight>
                                                </sol:before>
                                                <sol:returnText
                                                >0</sol:returnText>
                                              </sol:ReturnValue>
                                            </sol:before>
                                            <sol:valueIs>null</sol:valueIs>
                                            <sol:nameIs>investorID</sol:nameIs>
                                            <sol:typeName>uint</sol:typeName>
                                          </sol:StateVar>
                                        </sol:before>
                                      </sol:FunctionFor>
                                    </sol:before>
                                    <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_if_ifWrong_for_if.investorID__0__getBalance_investors_i_.user__getBalance_investors_investorID_.user_.L457*C16105"/>
                                  </sol:FunctionIf>
                                </sol:before>
                                <sol:hasIfCondition>investorID==0||getBalance(investors[i].user)&lt;getBalance(investors[investorID].user)</sol:hasIfCondition>
                              </sol:IfCondition>
                            </sol:before>
                          </sol:IfRight>
                        </sol:before>
                        <sol:assignSymbol>=</sol:assignSymbol>
                        <sol:assignRight>i</sol:assignRight>
                        <sol:assignLeft>investorID</sol:assignLeft>
                      </sol:Assignment>
                    </sol:before>
                    <sol:returnText>getBalance(investors[investorID].user)</sol:returnText>
                  </sol:ReturnValue>
                </sol:hasReturnValue>
                <sol:hasFor rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_if_ifWrong_for.for_uinti_1i__numInvestorsi____if_investorID__0__getBalance_investors_i_.user__getBalance_investors_investorID_.user___investorID_i__.L456*C16065"/>
                <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifWrong_varDeclare.uintinvestorID.L455*C16047"/>
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.numInvestors_maxInvestors.L452*C15992"/>
              </sol:IfWrong>
            </sol:hasIfWrong>
            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L452*C15992"/>
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.getMinInvestment.L451*C15938"/>
            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.numInvestors_maxInvestors.L452*C15992"/>
          </sol:FunctionIf>
        </sol:hasIf>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L451*C15975">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.uint.L451*C15983">
                <sol:typeName>uint</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:nameIs>getMinInvestment</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasStruct>
      <sol:Struct rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_struct.Bet.L263*C10166">
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.uint.L267*C10239">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>fee</sol:nameIs>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.uint.L266*C10216">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>roll</sol:nameIs>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.uint.L265*C10195">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>bet</sol:nameIs>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.address.L264*C10180">
            <sol:typeName>address</sol:typeName>
            <sol:nameIs>user</sol:nameIs>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:nameIs>Bet</sol:nameIs>
      </sol:Struct>
    </sol:hasStruct>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.ownerEdge.L247*C9715">
        <sol:hasModifier>public</sol:hasModifier>
        <sol:valueIs>50</sol:valueIs>
        <sol:typeName>uint</sol:typeName>
        <sol:nameIs>ownerEdge</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.isStopped.L262*C10142">
        <sol:hasModifier>public</sol:hasModifier>
        <sol:typeName>bool</sol:typeName>
        <sol:nameIs>isStopped</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.edge.L243*C9463">
        <sol:hasModifier>public</sol:hasModifier>
        <sol:valueIs>200</sol:valueIs>
        <sol:typeName>uint</sol:typeName>
        <sol:nameIs>edge</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.ownerTakeProfit.L489*C17019">
        <sol:callFunction>
          <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.ownerTakeProfit.L490*C17049">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.ownerTakeProfit.L489*C17019"/>
            <sol:callFunctionArgument>false</sol:callFunctionArgument>
            <sol:callFunctionName>ownerTakeProfit</sol:callFunctionName>
          </sol:FunctionCall>
        </sol:callFunction>
        <sol:nameIs>ownerTakeProfit</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.minBetAmount.L310*C11987">
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclizeFee_minBet.L312*C12120">
            <sol:before>
              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintoraclizeFee.L311*C12037">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.minBetAmount.L310*C11987"/>
                <sol:valueIs>OraclizeI(OAR.getAddress()).getPrice("URL",oraclizeGasLimit)</sol:valueIs>
                <sol:nameIs>oraclizeFee</sol:nameIs>
                <sol:typeName>uint</sol:typeName>
              </sol:StateVar>
            </sol:before>
            <sol:returnText>oraclizeFee+minBet</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintoraclizeFee.L311*C12037"/>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L310*C12020">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.uint.L310*C12028">
                <sol:typeName>uint</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:nameIs>minBetAmount</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.getBet.L354*C13254">
        <sol:hasIf>
          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.id_betsKeys.length.L355*C13326">
            <sol:hasIfRight>
              <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L355*C13326">
                <sol:hasReturnValue>
                  <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return._bets_betKey_.user_bets_betKey_.bet_bets_betKey_.roll_bets_betKey_.fee_.L358*C13385">
                    <sol:before>
                      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_varDeclare.bytes32betKey.L357*C13353">
                        <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L355*C13326"/>
                        <sol:valueIs>betsKeys[id]</sol:valueIs>
                        <sol:nameIs>betKey</sol:nameIs>
                        <sol:typeName>bytes32</sol:typeName>
                      </sol:StateVar>
                    </sol:before>
                    <sol:returnText>(bets[betKey].user,bets[betKey].bet,bets[betKey].roll,bets[betKey].fee)</sol:returnText>
                  </sol:ReturnValue>
                </sol:hasReturnValue>
                <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_varDeclare.bytes32betKey.L357*C13353"/>
                <sol:before>
                  <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.id_betsKeys.length.L355*C13326">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.id_betsKeys.length.L355*C13326"/>
                    <sol:hasIfCondition>id&lt;betsKeys.length</sol:hasIfCondition>
                  </sol:IfCondition>
                </sol:before>
              </sol:IfRight>
            </sol:hasIfRight>
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.getBet.L354*C13254"/>
            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.id_betsKeys.length.L355*C13326"/>
          </sol:FunctionIf>
        </sol:hasIf>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L354*C13288">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.uint.L354*C13317">
                <sol:typeName>uint</sol:typeName>
              </sol:Param>
            </sol:hasParam>
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.uint.L354*C13311">
                <sol:typeName>uint</sol:typeName>
              </sol:Param>
            </sol:hasParam>
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.uint.L354*C13305">
                <sol:typeName>uint</sol:typeName>
              </sol:Param>
            </sol:hasParam>
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.address.L354*C13296">
                <sol:typeName>address</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.id.L354*C13270">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>id</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>getBet</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.pwin.L242*C9397">
        <sol:hasModifier>public</sol:hasModifier>
        <sol:valueIs>5000</sol:valueIs>
        <sol:typeName>uint</sol:typeName>
        <sol:nameIs>pwin</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.oraclizeGasLimit.L251*C9880">
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:valueIs>150000</sol:valueIs>
        <sol:typeName>uint</sol:typeName>
        <sol:nameIs>oraclizeGasLimit</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.safeSend.L315*C12154">
        <sol:hasIf>
          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.!_addr.call.gas_safeGas_.value_value____.L316*C12210">
            <sol:hasIfRight>
              <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L316*C12210">
                <sol:containAssignment>
                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.ownerProfit__int_value_.L317*C12258">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L316*C12210"/>
                    <sol:assignSymbol>=</sol:assignSymbol>
                    <sol:assignRight>ownerProfit+int(value)</sol:assignRight>
                    <sol:assignLeft>ownerProfit</sol:assignLeft>
                  </sol:Assignment>
                </sol:containAssignment>
                <sol:before>
                  <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.!_addr.call.gas_safeGas_.value_value____.L316*C12210">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.!_addr.call.gas_safeGas_.value_value____.L316*C12210"/>
                    <sol:hasIfCondition>!(addr.call.gas(safeGas).value(value)())</sol:hasIfCondition>
                  </sol:IfCondition>
                </sol:before>
              </sol:IfRight>
            </sol:hasIfRight>
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.safeSend.L315*C12154"/>
            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.!_addr.call.gas_safeGas_.value_value____.L316*C12210"/>
          </sol:FunctionIf>
        </sol:hasIf>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.value.L315*C12186">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>value</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.addr.L315*C12172">
            <sol:typeName>address</sol:typeName>
            <sol:nameIs>addr</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>safeSend</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.ownerProfit.L274*C10392">
        <sol:hasModifier>public</sol:hasModifier>
        <sol:valueIs>0</sol:valueIs>
        <sol:typeName>int</sol:typeName>
        <sol:nameIs>ownerProfit</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.invested.L259*C10096">
        <sol:hasModifier>public</sol:hasModifier>
        <sol:valueIs>0</sol:valueIs>
        <sol:typeName>uint</sol:typeName>
        <sol:nameIs>invested</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.resumeContract.L472*C16571">
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.isStopped_false.L474*C16633">
            <sol:before>
              <sol:Throw rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_throw.throw;.L473*C16625">
                <sol:before>
                  <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L473*C16600">
                    <sol:hasThrow rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_throw.throw;.L473*C16625"/>
                    <sol:before>
                      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.owner!_msg.sender.L473*C16600">
                        <sol:before>
                          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.owner!_msg.sender.L473*C16600">
                            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L473*C16600"/>
                            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.resumeContract.L472*C16571"/>
                            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.owner!_msg.sender.L473*C16600"/>
                          </sol:FunctionIf>
                        </sol:before>
                        <sol:hasIfCondition>owner!=msg.sender</sol:hasIfCondition>
                      </sol:IfCondition>
                    </sol:before>
                  </sol:IfRight>
                </sol:before>
                <sol:throwText>throw;</sol:throwText>
              </sol:Throw>
            </sol:before>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>false</sol:assignRight>
            <sol:assignLeft>isStopped</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.owner!_msg.sender.L473*C16600"/>
        <sol:nameIs>resumeContract</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:nameIs>Dice</sol:nameIs>
    <sol:inherit>usingOraclize</sol:inherit>
    <sol:hasStruct>
      <sol:Struct rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_struct.Investor.L252*C9922">
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.uint.L254*C9956">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>capital</sol:nameIs>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.address.L253*C9941">
            <sol:typeName>address</sol:typeName>
            <sol:nameIs>user</sol:nameIs>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:nameIs>Investor</sol:nameIs>
      </sol:Struct>
    </sol:hasStruct>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.bet.L292*C10896">
        <sol:hasIf>
          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.___betValue___10000-edge_-pwin___pwin____maxWin_getBankroll____10000_&amp;&amp;_betValue__minBet_.L297*C11099">
            <sol:hasIfWrong>
              <sol:IfWrong rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifWrong._.L297*C11099">
                <sol:hasThrow>
                  <sol:Throw rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifWrong_throw.throw;.L303*C11877">
                    <sol:before>
                      <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.betsKeys.push.L301*C11845">
                        <sol:before>
                          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.bets_myid__Bet_msg.sender_betValue_0_oraclizeFee_.L300*C11788">
                            <sol:before>
                              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_varDeclare.bytes32myid.L298*C11216">
                                <sol:before>
                                  <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L297*C11099">
                                    <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.betsKeys.push.L301*C11845"/>
                                    <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.bets_myid__Bet_msg.sender_betValue_0_oraclizeFee_.L300*C11788"/>
                                    <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_varDeclare.bytes32myid.L298*C11216"/>
                                    <sol:before>
                                      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.___betValue___10000-edge_-pwin___pwin____maxWin_getBankroll____10000_&amp;&amp;_betValue__minBet_.L297*C11099">
                                        <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.___betValue___10000-edge_-pwin___pwin____maxWin_getBankroll____10000_&amp;&amp;_betValue__minBet_.L297*C11099"/>
                                        <sol:hasIfCondition>(((betValue*((10000-edge)-pwin))/pwin)&lt;=(maxWin*getBankroll())/10000)&amp;&amp;(betValue&gt;=minBet)</sol:hasIfCondition>
                                      </sol:IfCondition>
                                    </sol:before>
                                  </sol:IfRight>
                                </sol:before>
                                <sol:valueIs>oraclize_query("URL","json(https://api.random.org/json-rpc/1/invoke).result.random.data.0",'BDXJhrVpBJ53o2CxlJRlQtZJKZqLYt5IQe+73YDS4HtNjS5HodbIB3tvfow7UquyAk085VkLnL9EpKgwqWQz7ZLdGvsQlRd2sKxIolNg9DbnfPspGqLhLbbYSVnN8CwvsjpAXcSSo3c+4cNwC90yF4oNibkvD3ytapoZ7goTSyoUYTfwSjnw3ti+HJVH7N3+c0iwOCqZjDdsGQUcX3m3S/IHWbOOQQ5osO4Lbj3Gg0x1UdNtfUzYCFY79nzYgWIQEFCuRBI0n6NBvBQW727+OsDRY0J/9/gjt8ucibHWic0=',oraclizeGasLimit)</sol:valueIs>
                                <sol:nameIs>myid</sol:nameIs>
                                <sol:typeName>bytes32</sol:typeName>
                              </sol:StateVar>
                            </sol:before>
                            <sol:assignSymbol>=</sol:assignSymbol>
                            <sol:assignRight>Bet(msg.sender,betValue,0,oraclizeFee)</sol:assignRight>
                            <sol:assignLeft>bets[myid]</sol:assignLeft>
                          </sol:Assignment>
                        </sol:before>
                        <sol:callFunctionArgument>myid</sol:callFunctionArgument>
                        <sol:callFunctionName>push</sol:callFunctionName>
                        <sol:callFunctionObject>betsKeys</sol:callFunctionObject>
                      </sol:FunctionCall>
                    </sol:before>
                    <sol:throwText>throw;</sol:throwText>
                  </sol:Throw>
                </sol:hasThrow>
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.___betValue___10000-edge_-pwin___pwin____maxWin_getBankroll____10000_&amp;&amp;_betValue__minBet_.L297*C11099"/>
              </sol:IfWrong>
            </sol:hasIfWrong>
            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L297*C11099"/>
            <sol:before>
              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintbetValue.L296*C11057">
                <sol:before>
                  <sol:Throw rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_throw.throw;.L295*C11049">
                    <sol:before>
                      <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L295*C11020">
                        <sol:hasThrow rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_throw.throw;.L295*C11049"/>
                        <sol:before>
                          <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.msg.value_oraclizeFee.L295*C11020">
                            <sol:before>
                              <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.msg.value_oraclizeFee.L295*C11020">
                                <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L295*C11020"/>
                                <sol:before>
                                  <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintoraclizeFee.L294*C10937">
                                    <sol:before>
                                      <sol:Throw rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_throw.throw;.L293*C10929">
                                        <sol:before>
                                          <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L293*C10914">
                                            <sol:hasThrow rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_throw.throw;.L293*C10929"/>
                                            <sol:before>
                                              <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.isStopped.L293*C10914">
                                                <sol:before>
                                                  <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.isStopped.L293*C10914">
                                                    <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L293*C10914"/>
                                                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.bet.L292*C10896"/>
                                                    <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.isStopped.L293*C10914"/>
                                                  </sol:FunctionIf>
                                                </sol:before>
                                                <sol:hasIfCondition
                                                >isStopped</sol:hasIfCondition>
                                              </sol:IfCondition>
                                            </sol:before>
                                          </sol:IfRight>
                                        </sol:before>
                                        <sol:throwText>throw;</sol:throwText>
                                      </sol:Throw>
                                    </sol:before>
                                    <sol:valueIs>OraclizeI(OAR.getAddress()).getPrice("URL",oraclizeGasLimit)</sol:valueIs>
                                    <sol:nameIs>oraclizeFee</sol:nameIs>
                                    <sol:typeName>uint</sol:typeName>
                                  </sol:StateVar>
                                </sol:before>
                                <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.msg.value_oraclizeFee.L295*C11020"/>
                              </sol:FunctionIf>
                            </sol:before>
                            <sol:hasIfCondition>msg.value&lt;oraclizeFee</sol:hasIfCondition>
                          </sol:IfCondition>
                        </sol:before>
                      </sol:IfRight>
                    </sol:before>
                    <sol:throwText>throw;</sol:throwText>
                  </sol:Throw>
                </sol:before>
                <sol:valueIs>msg.value-oraclizeFee</sol:valueIs>
                <sol:nameIs>betValue</sol:nameIs>
                <sol:typeName>uint</sol:typeName>
              </sol:StateVar>
            </sol:before>
            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.___betValue___10000-edge_-pwin___pwin____maxWin_getBankroll____10000_&amp;&amp;_betValue__minBet_.L297*C11099"/>
          </sol:FunctionIf>
        </sol:hasIf>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintbetValue.L296*C11057"/>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.msg.value_oraclizeFee.L295*C11020"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintoraclizeFee.L294*C10937"/>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.isStopped.L293*C10914"/>
        <sol:nameIs>bet</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.forceDivestAll.L481*C16718">
        <sol:hasIf>
          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.ownerTakeChangeAndProfit.L486*C16956">
            <sol:hasIfRight>
              <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L486*C16956">
                <sol:callFunction>
                  <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.owner.send.L486*C16986">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L486*C16956"/>
                    <sol:callFunctionArgument>this.balance</sol:callFunctionArgument>
                    <sol:callFunctionName>send</sol:callFunctionName>
                    <sol:callFunctionObject>owner</sol:callFunctionObject>
                  </sol:FunctionCall>
                </sol:callFunction>
                <sol:before>
                  <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.ownerTakeChangeAndProfit.L486*C16956">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.ownerTakeChangeAndProfit.L486*C16956"/>
                    <sol:hasIfCondition>ownerTakeChangeAndProfit</sol:hasIfCondition>
                  </sol:IfCondition>
                </sol:before>
              </sol:IfRight>
            </sol:hasIfRight>
            <sol:before>
              <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.divest.L484*C16876">
                <sol:before>
                  <sol:FunctionFor rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for.for_uintinvestorID_1investorID__numInvestorsinvestorID____divest_investors_investorID_.user_getBalance_investors_investorID_.user___.L483*C16809">
                    <sol:conditionStep>investorID++</sol:conditionStep>
                    <sol:hasForCondition>
                      <sol:ForCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.investorID__numInvestors.L483*C16809">
                        <sol:conditionValue>numInvestors</sol:conditionValue>
                        <sol:conditionSymbol>&lt;=</sol:conditionSymbol>
                      </sol:ForCondition>
                    </sol:hasForCondition>
                    <sol:conditionVar>investorID</sol:conditionVar>
                    <sol:hasStateVar>
                      <sol:stateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.uintinvestorID.L483*C16809">
                        <sol:valueIs>1</sol:valueIs>
                        <sol:nameIs>investorID</sol:nameIs>
                        <sol:typeName>uint</sol:typeName>
                      </sol:stateVar>
                    </sol:hasStateVar>
                    <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.divest.L484*C16876"/>
                    <sol:before>
                      <sol:Throw rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_throw.throw;.L482*C16801">
                        <sol:before>
                          <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L482*C16776">
                            <sol:hasThrow rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_throw.throw;.L482*C16801"/>
                            <sol:before>
                              <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.owner!_msg.sender.L482*C16776">
                                <sol:before>
                                  <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.owner!_msg.sender.L482*C16776">
                                    <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L482*C16776"/>
                                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.forceDivestAll.L481*C16718"/>
                                    <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.owner!_msg.sender.L482*C16776"/>
                                  </sol:FunctionIf>
                                </sol:before>
                                <sol:hasIfCondition>owner!=msg.sender</sol:hasIfCondition>
                              </sol:IfCondition>
                            </sol:before>
                          </sol:IfRight>
                        </sol:before>
                        <sol:throwText>throw;</sol:throwText>
                      </sol:Throw>
                    </sol:before>
                  </sol:FunctionFor>
                </sol:before>
                <sol:callFunctionArgument>investors[investorID].user,getBalance(investors[investorID].user)</sol:callFunctionArgument>
                <sol:callFunctionName>divest</sol:callFunctionName>
              </sol:FunctionCall>
            </sol:before>
            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.ownerTakeChangeAndProfit.L486*C16956"/>
          </sol:FunctionIf>
        </sol:hasIf>
        <sol:hasFor rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for.for_uintinvestorID_1investorID__numInvestorsinvestorID____divest_investors_investorID_.user_getBalance_investors_investorID_.user___.L483*C16809"/>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.owner!_msg.sender.L482*C16776"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.ownerTakeChangeAndProfit.L481*C16742">
            <sol:typeName>bool</sol:typeName>
            <sol:nameIs>ownerTakeChangeAndProfit</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>forceDivestAll</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.__callback.L321*C12295">
        <sol:hasIf>
          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.thisBet.bet_0.L325*C12438">
            <sol:hasIfRight>
              <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L325*C12438">
                <sol:hasIf>
                  <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_if_ifRight_if._isStopped__false_&amp;&amp;___thisBet.bet___10000-edge_-pwin___pwin___maxWin_getBankroll___10000_.L326*C12460">
                    <sol:hasIfWrong>
                      <sol:IfWrong rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#7_con_fun_if_ifRight_if_ifRight_if_ifWrong._.L326*C12460">
                        <sol:callFunction>
                          <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.safeSend.L350*C13207">
                            <sol:before>
                              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.amountWagered__thisBet.bet.L347*C13097">
                                <sol:before>
                                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.profit__profitDiff-_profitDiff_int_ownerEdge___10000.L345*C13037">
                                    <sol:before>
                                      <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.ownerProfit___profitDiff_int_ownerEdge___10000.L344*C12986">
                                        <sol:before>
                                          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.profitDiff_int_thisBet.bet_-1.L341*C12944">
                                            <sol:before>
                                              <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.safeSend.L340*C12916">
                                                <sol:before>
                                                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.profitDiff_int_thisBet.bet-winAmount_.L338*C12855">
                                                    <sol:before>
                                                      <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.safeSend.L337*C12819">
                                                        <sol:before>
                                                          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#7_con_fun_if_ifRight_if_ifRight_if_ifRight_varDeclare.uintwinAmount.L336*C12762">
                                                            <sol:before>
                                                              <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#7_con_fun_if_ifRight_if_ifRight_if_ifRight._.L335*C12734">
    <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.profitDiff_int_thisBet.bet-winAmount_.L338*C12855"/>
    <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.safeSend.L337*C12819"/>
    <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#7_con_fun_if_ifRight_if_ifRight_if_ifRight_varDeclare.uintwinAmount.L336*C12762"/>
    <sol:before>
      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#7_con_fun_if_ifRight_if_ifRight_if.roll-1_pwin.L335*C12734">
        <sol:before>
          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_if_ifRight_if_ifRight_if.roll-1_pwin.L335*C12734">
            <sol:hasIfWrong>
              <sol:IfWrong rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#7_con_fun_if_ifRight_if_ifRight_if_ifWrong._.L335*C12734">
                <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.profitDiff_int_thisBet.bet_-1.L341*C12944"/>
                <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.safeSend.L340*C12916"/>
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#7_con_fun_if_ifRight_if_ifRight_if.roll-1_pwin.L335*C12734"/>
              </sol:IfWrong>
            </sol:hasIfWrong>
            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#7_con_fun_if_ifRight_if_ifRight_if_ifRight._.L335*C12734"/>
            <sol:before>
              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if_ifRight_varDeclare.intprofitDiff.L334*C12717">
                <sol:before>
                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.bets_myid_.roll_roll.L332*C12689">
                    <sol:before>
                      <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.safeSend.L329*C12635">
                        <sol:before>
                          <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#7_con_fun_if_ifRight_if_ifRight_if_ifRight._.L328*C12607">
                            <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.safeSend.L329*C12635"/>
                            <sol:before>
                              <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#7_con_fun_if_ifRight_if_ifRight_if.roll_1__roll_10000.L328*C12607">
                                <sol:before>
                                  <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_if_ifRight_if_ifRight_if.roll_1__roll_10000.L328*C12607">
                                    <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#7_con_fun_if_ifRight_if_ifRight_if_ifRight._.L328*C12607"/>
                                    <sol:before>
                                      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if_ifRight_varDeclare.uintroll.L327*C12576">
                                        <sol:before>
                                          <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if_ifRight._.L326*C12460">
                                            <sol:before>
                                              <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if._isStopped__false_&amp;&amp;___thisBet.bet___10000-edge_-pwin___pwin___maxWin_getBankroll___10000_.L326*C12460">
                                                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_if_ifRight_if._isStopped__false_&amp;&amp;___thisBet.bet___10000-edge_-pwin___pwin___maxWin_getBankroll___10000_.L326*C12460"/>
                                                <sol:hasIfCondition
                                                >(isStopped==false)&amp;&amp;(((thisBet.bet*((10000-edge)-pwin))/pwin)&lt;=maxWin*getBankroll()/10000)</sol:hasIfCondition>
                                              </sol:IfCondition>
                                            </sol:before>
                                            <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.bets_myid_.roll_roll.L332*C12689"/>
                                            <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_if_ifRight_if_ifRight_if.roll_1__roll_10000.L328*C12607"/>
                                            <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.amountWagered__thisBet.bet.L347*C13097"/>
                                            <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if_ifRight_varDeclare.intprofitDiff.L334*C12717"/>
                                            <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.ownerProfit___profitDiff_int_ownerEdge___10000.L344*C12986"/>
                                            <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_if_ifRight_if_ifRight_if.roll-1_pwin.L335*C12734"/>
                                            <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if_ifRight_varDeclare.uintroll.L327*C12576"/>
                                            <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.profit__profitDiff-_profitDiff_int_ownerEdge___10000.L345*C13037"/>
                                          </sol:IfRight>
                                        </sol:before>
                                        <sol:valueIs>parseInt(result)</sol:valueIs>
                                        <sol:nameIs>roll</sol:nameIs>
                                        <sol:typeName>uint</sol:typeName>
                                      </sol:StateVar>
                                    </sol:before>
                                    <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#7_con_fun_if_ifRight_if_ifRight_if.roll_1__roll_10000.L328*C12607"/>
                                  </sol:FunctionIf>
                                </sol:before>
                                <sol:hasIfCondition>roll&lt;1||roll&gt;10000</sol:hasIfCondition>
                              </sol:IfCondition>
                            </sol:before>
                          </sol:IfRight>
                        </sol:before>
                        <sol:callFunctionArgument>thisBet.user,thisBet.bet</sol:callFunctionArgument>
                        <sol:callFunctionName>safeSend</sol:callFunctionName>
                      </sol:FunctionCall>
                    </sol:before>
                    <sol:assignSymbol>=</sol:assignSymbol>
                    <sol:assignRight>roll</sol:assignRight>
                    <sol:assignLeft>bets[myid].roll</sol:assignLeft>
                  </sol:Assignment>
                </sol:before>
                <sol:valueIs>null</sol:valueIs>
                <sol:nameIs>profitDiff</sol:nameIs>
                <sol:typeName>int</sol:typeName>
              </sol:StateVar>
            </sol:before>
            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#7_con_fun_if_ifRight_if_ifRight_if.roll-1_pwin.L335*C12734"/>
          </sol:FunctionIf>
        </sol:before>
        <sol:hasIfCondition>roll-1&lt;pwin</sol:hasIfCondition>
      </sol:IfCondition>
    </sol:before>                                             </sol:IfRight>
                                                            </sol:before>
                                                            <sol:valueIs
                                                            >(thisBet.bet*(10000-edge))/pwin</sol:valueIs>
                                                            <sol:nameIs
                                                            >winAmount</sol:nameIs>
                                                            <sol:typeName
                                                            >uint</sol:typeName>
                                                          </sol:StateVar>
                                                        </sol:before>
                                                        <sol:callFunctionArgument
                                                        >thisBet.user,winAmount</sol:callFunctionArgument>
                                                        <sol:callFunctionName
                                                        >safeSend</sol:callFunctionName>
                                                      </sol:FunctionCall>
                                                    </sol:before>
                                                    <sol:assignSymbol
                                                    >=</sol:assignSymbol>
                                                    <sol:assignRight
                                                    >int(thisBet.bet-winAmount)</sol:assignRight>
                                                    <sol:assignLeft
                                                    >profitDiff</sol:assignLeft>
                                                  </sol:Assignment>
                                                </sol:before>
                                                <sol:callFunctionArgument
                                                >thisBet.user,1</sol:callFunctionArgument>
                                                <sol:callFunctionName
                                                >safeSend</sol:callFunctionName>
                                              </sol:FunctionCall>
                                            </sol:before>
                                            <sol:assignSymbol
                                            >=</sol:assignSymbol>
                                            <sol:assignRight>int(thisBet.bet)-1</sol:assignRight>
                                            <sol:assignLeft>profitDiff</sol:assignLeft>
                                          </sol:Assignment>
                                        </sol:before>
                                        <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.profitDiff_int_thisBet.bet-winAmount_.L338*C12855"/>
                                        <sol:assignSymbol>=</sol:assignSymbol>
                                        <sol:assignRight>ownerProfit+(profitDiff*int(ownerEdge))/10000</sol:assignRight>
                                        <sol:assignLeft>ownerProfit</sol:assignLeft>
                                      </sol:Assignment>
                                    </sol:before>
                                    <sol:assignSymbol>=</sol:assignSymbol>
                                    <sol:assignRight>profit+profitDiff-(profitDiff*int(ownerEdge))/10000</sol:assignRight>
                                    <sol:assignLeft>profit</sol:assignLeft>
                                  </sol:Assignment>
                                </sol:before>
                                <sol:assignSymbol>=</sol:assignSymbol>
                                <sol:assignRight>amountWagered+thisBet.bet</sol:assignRight>
                                <sol:assignLeft>amountWagered</sol:assignLeft>
                              </sol:Assignment>
                            </sol:before>
                            <sol:callFunctionArgument>thisBet.user,thisBet.bet</sol:callFunctionArgument>
                            <sol:callFunctionName>safeSend</sol:callFunctionName>
                          </sol:FunctionCall>
                        </sol:callFunction>
                        <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if._isStopped__false_&amp;&amp;___thisBet.bet___10000-edge_-pwin___pwin___maxWin_getBankroll___10000_.L326*C12460"/>
                      </sol:IfWrong>
                    </sol:hasIfWrong>
                    <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if_ifRight._.L326*C12460"/>
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L325*C12438"/>
                    <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if._isStopped__false_&amp;&amp;___thisBet.bet___10000-edge_-pwin___pwin___maxWin_getBankroll___10000_.L326*C12460"/>
                  </sol:FunctionIf>
                </sol:hasIf>
                <sol:before>
                  <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.thisBet.bet_0.L325*C12438">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.thisBet.bet_0.L325*C12438"/>
                    <sol:hasIfCondition>thisBet.bet&gt;0</sol:hasIfCondition>
                  </sol:IfCondition>
                </sol:before>
              </sol:IfRight>
            </sol:hasIfRight>
            <sol:before>
              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.BetthisBet.L324*C12411">
                <sol:before>
                  <sol:Throw rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_throw.throw;.L322*C12400">
                    <sol:before>
                      <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L322*C12360">
                        <sol:hasThrow rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_throw.throw;.L322*C12400"/>
                        <sol:before>
                          <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.msg.sender!_oraclize_cbAddress__.L322*C12360">
                            <sol:before>
                              <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.msg.sender!_oraclize_cbAddress__.L322*C12360">
                                <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L322*C12360"/>
                                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.__callback.L321*C12295"/>
                                <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.msg.sender!_oraclize_cbAddress__.L322*C12360"/>
                              </sol:FunctionIf>
                            </sol:before>
                            <sol:hasIfCondition>msg.sender!=oraclize_cbAddress()</sol:hasIfCondition>
                          </sol:IfCondition>
                        </sol:before>
                      </sol:IfRight>
                    </sol:before>
                    <sol:throwText>throw;</sol:throwText>
                  </sol:Throw>
                </sol:before>
                <sol:valueIs>bets[myid]</sol:valueIs>
                <sol:nameIs>thisBet</sol:nameIs>
                <sol:typeName>Bet</sol:typeName>
              </sol:StateVar>
            </sol:before>
            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.thisBet.bet_0.L325*C12438"/>
          </sol:FunctionIf>
        </sol:hasIf>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.BetthisBet.L324*C12411"/>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.msg.sender!_oraclize_cbAddress__.L322*C12360"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.proof.L321*C12344">
            <sol:typeName>bytes</sol:typeName>
            <sol:nameIs>proof</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.result.L321*C12329">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>result</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.myid.L321*C12315">
            <sol:typeName>bytes32</sol:typeName>
            <sol:nameIs>myid</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>__callback</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.maxInvestors.L246*C9654">
        <sol:hasModifier>public</sol:hasModifier>
        <sol:valueIs>5</sol:valueIs>
        <sol:typeName>uint</sol:typeName>
        <sol:nameIs>maxInvestors</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.divest.L428*C15326">
        <sol:callFunction>
          <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.divest.L430*C15383">
            <sol:before>
              <sol:Throw rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_throw.throw;.L429*C15375">
                <sol:before>
                  <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L429*C15358">
                    <sol:hasThrow rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_throw.throw;.L429*C15375"/>
                    <sol:before>
                      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.msg.value_0.L429*C15358">
                        <sol:before>
                          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.msg.value_0.L429*C15358">
                            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L429*C15358"/>
                            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.divest.L428*C15326"/>
                            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.msg.value_0.L429*C15358"/>
                          </sol:FunctionIf>
                        </sol:before>
                        <sol:hasIfCondition>msg.value&gt;0</sol:hasIfCondition>
                      </sol:IfCondition>
                    </sol:before>
                  </sol:IfRight>
                </sol:before>
                <sol:throwText>throw;</sol:throwText>
              </sol:Throw>
            </sol:before>
            <sol:callFunctionArgument>msg.sender,amount</sol:callFunctionArgument>
            <sol:callFunctionName>divest</sol:callFunctionName>
          </sol:FunctionCall>
        </sol:callFunction>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.msg.value_0.L429*C15358"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.amount.L428*C15342">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>amount</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>divest</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.numBets.L306*C11911">
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.betsKeys.length.L307*C11956">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.numBets.L306*C11911"/>
            <sol:returnText>betsKeys.length</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L306*C11939">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.uint.L306*C11947">
                <sol:typeName>uint</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:nameIs>numBets</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.stopContract.L467*C16486">
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.isStopped_true.L469*C16546">
            <sol:before>
              <sol:Throw rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_throw.throw;.L468*C16538">
                <sol:before>
                  <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L468*C16513">
                    <sol:hasThrow rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_throw.throw;.L468*C16538"/>
                    <sol:before>
                      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.owner!_msg.sender.L468*C16513">
                        <sol:before>
                          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.owner!_msg.sender.L468*C16513">
                            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L468*C16513"/>
                            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.stopContract.L467*C16486"/>
                            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.owner!_msg.sender.L468*C16513"/>
                          </sol:FunctionIf>
                        </sol:before>
                        <sol:hasIfCondition>owner!=msg.sender</sol:hasIfCondition>
                      </sol:IfCondition>
                    </sol:before>
                  </sol:IfRight>
                </sol:before>
                <sol:throwText>throw;</sol:throwText>
              </sol:Throw>
            </sol:before>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>true</sol:assignRight>
            <sol:assignLeft>isStopped</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.owner!_msg.sender.L468*C16513"/>
        <sol:nameIs>stopContract</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.getStatus.L464*C16276">
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return._getBankroll___pwin_edge_maxWin_minBet_amountWagered_profit_getMinInvestment___betsKeys.length_.L465*C16370">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.getStatus.L464*C16276"/>
            <sol:returnText>(getBankroll(),pwin,edge,maxWin,minBet,amountWagered,profit,getMinInvestment(),betsKeys.length)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L464*C16306">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.uint.L464*C16326">
                <sol:typeName>uint</sol:typeName>
              </sol:Param>
            </sol:hasParam>
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.uint.L464*C16338">
                <sol:typeName>uint</sol:typeName>
              </sol:Param>
            </sol:hasParam>
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.uint.L464*C16355">
                <sol:typeName>uint</sol:typeName>
              </sol:Param>
            </sol:hasParam>
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.uint.L464*C16344">
                <sol:typeName>uint</sol:typeName>
              </sol:Param>
            </sol:hasParam>
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.int.L464*C16350">
                <sol:typeName>int</sol:typeName>
              </sol:Param>
            </sol:hasParam>
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.uint.L464*C16320">
                <sol:typeName>uint</sol:typeName>
              </sol:Param>
            </sol:hasParam>
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.uint.L464*C16361">
                <sol:typeName>uint</sol:typeName>
              </sol:Param>
            </sol:hasParam>
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.uint.L464*C16314">
                <sol:typeName>uint</sol:typeName>
              </sol:Param>
            </sol:hasParam>
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.uint.L464*C16332">
                <sol:typeName>uint</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:nameIs>getStatus</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.forceDivestAll.L477*C16659">
        <sol:callFunction>
          <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.forceDivestAll.L478*C16688">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.forceDivestAll.L477*C16659"/>
            <sol:callFunctionArgument>false</sol:callFunctionArgument>
            <sol:callFunctionName>forceDivestAll</sol:callFunctionName>
          </sol:FunctionCall>
        </sol:callFunction>
        <sol:nameIs>forceDivestAll</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.numInvestors.L257*C10026">
        <sol:hasModifier>public</sol:hasModifier>
        <sol:valueIs>0</sol:valueIs>
        <sol:typeName>uint</sol:typeName>
        <sol:nameIs>numInvestors</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.betsKeys.L270*C10286">
        <sol:typeName>bytes32[]</sol:typeName>
        <sol:nameIs>betsKeys</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.safeGas.L250*C9848">
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:valueIs>25000</sol:valueIs>
        <sol:typeName>uint</sol:typeName>
        <sol:nameIs>safeGas</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.ownerTakeProfit.L493*C17080">
        <sol:hasIf>
          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.takeChange.L495*C17158">
            <sol:hasIfWrong>
              <sol:IfWrong rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if_ifWrong._.L495*C17158">
                <sol:containAssignment>
                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.ownerProfit_0.L506*C17448">
                    <sol:before>
                      <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.owner.send.L505*C17416">
                        <sol:before>
                          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.ownerProfit_0.L502*C17385">
                            <sol:before>
                              <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.owner.send.L501*C17358">
                                <sol:before>
                                  <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if_ifRight._.L500*C17290">
                                    <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.ownerProfit_0.L502*C17385"/>
                                    <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.owner.send.L501*C17358"/>
                                    <sol:before>
                                      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if._investorsCapital__0_&amp;&amp;_this.balance!_uint_ownerProfit__.L500*C17290">
                                        <sol:before>
                                          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_if_ifRight_if._investorsCapital__0_&amp;&amp;_this.balance!_uint_ownerProfit__.L500*C17290">
                                            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if_ifRight._.L500*C17290"/>
                                            <sol:before>
                                              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.investorsCapital__investors_i_.capital.L498*C17244">
                                                <sol:before>
                                                  <sol:FunctionFor rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_if_ifRight_for.for_uinti_1i__numInvestorsi____investorsCapital__investors_i_.capital_.L497*C17204">
                                                    <sol:conditionStep
                                                    >i++</sol:conditionStep>
                                                    <sol:hasForCondition>
                                                      <sol:ForCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.i__numInvestors.L497*C17204">
                                                        <sol:conditionValue
                                                        >numInvestors</sol:conditionValue>
                                                        <sol:conditionSymbol
                                                        >&lt;=</sol:conditionSymbol>
                                                      </sol:ForCondition>
                                                    </sol:hasForCondition>
                                                    <sol:conditionVar
                                                    >i</sol:conditionVar>
                                                    <sol:hasStateVar>
                                                      <sol:stateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.uinti.L497*C17204">
                                                        <sol:valueIs
                                                        >1</sol:valueIs>
                                                        <sol:nameIs
                                                        >i</sol:nameIs>
                                                        <sol:typeName
                                                        >uint</sol:typeName>
                                                      </sol:stateVar>
                                                    </sol:hasStateVar>
                                                    <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.investorsCapital__investors_i_.capital.L498*C17244"/>
                                                    <sol:before>
                                                      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_varDeclare.uintinvestorsCapital.L496*C17176">
                                                        <sol:before>
                                                          <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L495*C17158">
                                                            <sol:conditionStep
                                                            >noDecelaration</sol:conditionStep>
                                                            <sol:condition
                                                            >noDecelaration</sol:condition>
                                                            <sol:conditionVar
                                                            >noDeclaration</sol:conditionVar>
                                                            <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_if_ifRight_if._investorsCapital__0_&amp;&amp;_this.balance!_uint_ownerProfit__.L500*C17290"/>
                                                            <sol:hasFor rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_if_ifRight_for.for_uinti_1i__numInvestorsi____investorsCapital__investors_i_.capital_.L497*C17204"/>
                                                            <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_varDeclare.uintinvestorsCapital.L496*C17176"/>
                                                            <sol:before>
                                                              <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.takeChange.L495*C17158">
    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.takeChange.L495*C17158"/>
    <sol:hasIfCondition>takeChange</sol:hasIfCondition>       </sol:IfCondition>
                                                            </sol:before>
                                                          </sol:IfRight>
                                                        </sol:before>
                                                        <sol:valueIs
                                                        >0</sol:valueIs>
                                                        <sol:nameIs
                                                        >investorsCapital</sol:nameIs>
                                                        <sol:typeName
                                                        >uint</sol:typeName>
                                                      </sol:StateVar>
                                                    </sol:before>
                                                  </sol:FunctionFor>
                                                </sol:before>
                                                <sol:assignSymbol
                                                >=</sol:assignSymbol>
                                                <sol:assignRight
                                                >investorsCapital+investors[i].capital</sol:assignRight>
                                                <sol:assignLeft
                                                >investorsCapital</sol:assignLeft>
                                              </sol:Assignment>
                                            </sol:before>
                                            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if._investorsCapital__0_&amp;&amp;_this.balance!_uint_ownerProfit__.L500*C17290"/>
                                          </sol:FunctionIf>
                                        </sol:before>
                                        <sol:hasIfCondition>(investorsCapital==0)&amp;&amp;(this.balance!=uint(ownerProfit))</sol:hasIfCondition>
                                      </sol:IfCondition>
                                    </sol:before>
                                  </sol:IfRight>
                                </sol:before>
                                <sol:callFunctionArgument>this.balance</sol:callFunctionArgument>
                                <sol:callFunctionName>send</sol:callFunctionName>
                                <sol:callFunctionObject>owner</sol:callFunctionObject>
                              </sol:FunctionCall>
                            </sol:before>
                            <sol:assignSymbol>=</sol:assignSymbol>
                            <sol:assignRight>0</sol:assignRight>
                            <sol:assignLeft>ownerProfit</sol:assignLeft>
                          </sol:Assignment>
                        </sol:before>
                        <sol:callFunctionArgument>uint(ownerProfit)</sol:callFunctionArgument>
                        <sol:callFunctionName>send</sol:callFunctionName>
                        <sol:callFunctionObject>owner</sol:callFunctionObject>
                      </sol:FunctionCall>
                    </sol:before>
                    <sol:assignSymbol>=</sol:assignSymbol>
                    <sol:assignRight>0</sol:assignRight>
                    <sol:assignLeft>ownerProfit</sol:assignLeft>
                  </sol:Assignment>
                </sol:containAssignment>
                <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.owner.send.L505*C17416"/>
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.takeChange.L495*C17158"/>
              </sol:IfWrong>
            </sol:hasIfWrong>
            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L495*C17158"/>
            <sol:before>
              <sol:Throw rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_throw.throw;.L494*C17150">
                <sol:before>
                  <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L494*C17125">
                    <sol:hasThrow rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_throw.throw;.L494*C17150"/>
                    <sol:before>
                      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.owner!_msg.sender.L494*C17125">
                        <sol:before>
                          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.owner!_msg.sender.L494*C17125">
                            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L494*C17125"/>
                            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.ownerTakeProfit.L493*C17080"/>
                            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.owner!_msg.sender.L494*C17125"/>
                          </sol:FunctionIf>
                        </sol:before>
                        <sol:hasIfCondition>owner!=msg.sender</sol:hasIfCondition>
                      </sol:IfCondition>
                    </sol:before>
                  </sol:IfRight>
                </sol:before>
                <sol:throwText>throw;</sol:throwText>
              </sol:Throw>
            </sol:before>
            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.takeChange.L495*C17158"/>
          </sol:FunctionIf>
        </sol:hasIf>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.owner!_msg.sender.L494*C17125"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.takeChange.L493*C17105">
            <sol:typeName>bool</sol:typeName>
            <sol:nameIs>takeChange</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>ownerTakeProfit</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.owner.L261*C10126">
        <sol:typeName>address</sol:typeName>
        <sol:nameIs>owner</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.profit.L272*C10339">
        <sol:hasModifier>public</sol:hasModifier>
        <sol:valueIs>0</sol:valueIs>
        <sol:typeName>int</sol:typeName>
        <sol:nameIs>profit</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.divestFee.L248*C9777">
        <sol:hasModifier>public</sol:hasModifier>
        <sol:valueIs>50</sol:valueIs>
        <sol:typeName>uint</sol:typeName>
        <sol:nameIs>divestFee</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.Dice.L275*C10421">
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.maxInvestors_maxInvestorsInitial.L283*C10745">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.minBet_minBetInitial.L282*C10720">
                <sol:before>
                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.maxWin_maxWinInitial.L281*C10695">
                    <sol:before>
                      <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.edge_edgeInitial.L280*C10674">
                        <sol:before>
                          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.pwin_pwinInitial.L279*C10653">
                            <sol:before>
                              <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.oraclize_setProof.L277*C10589">
                                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.Dice.L275*C10421"/>
                                <sol:callFunctionArgument>proofType_TLSNotary|proofStorage_IPFS</sol:callFunctionArgument>
                                <sol:callFunctionName>oraclize_setProof</sol:callFunctionName>
                              </sol:FunctionCall>
                            </sol:before>
                            <sol:assignSymbol>=</sol:assignSymbol>
                            <sol:assignRight>pwinInitial</sol:assignRight>
                            <sol:assignLeft>pwin</sol:assignLeft>
                          </sol:Assignment>
                        </sol:before>
                        <sol:assignSymbol>=</sol:assignSymbol>
                        <sol:assignRight>edgeInitial</sol:assignRight>
                        <sol:assignLeft>edge</sol:assignLeft>
                      </sol:Assignment>
                    </sol:before>
                    <sol:assignSymbol>=</sol:assignSymbol>
                    <sol:assignRight>maxWinInitial</sol:assignRight>
                    <sol:assignLeft>maxWin</sol:assignLeft>
                  </sol:Assignment>
                </sol:before>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>minBetInitial</sol:assignRight>
                <sol:assignLeft>minBet</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>maxInvestorsInitial</sol:assignRight>
            <sol:assignLeft>maxInvestors</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.divestFeeInitial.L275*C10560">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>divestFeeInitial</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.divestFee_divestFeeInitial.L285*C10813">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.ownerEdge_ownerEdgeInitial.L284*C10782">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.maxInvestors_maxInvestorsInitial.L283*C10745"/>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>ownerEdgeInitial</sol:assignRight>
                <sol:assignLeft>ownerEdge</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>divestFeeInitial</sol:assignRight>
            <sol:assignLeft>divestFee</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.oraclize_setProof.L277*C10589"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.ownerEdgeInitial.L275*C10537">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>ownerEdgeInitial</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.ownerEdge_ownerEdgeInitial.L284*C10782"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.edgeInitial.L275*C10453">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>edgeInitial</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.pwin_pwinInitial.L279*C10653"/>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.edge_edgeInitial.L280*C10674"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.maxInvestorsInitial.L275*C10511">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>maxInvestorsInitial</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.pwinInitial.L275*C10435">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>pwinInitial</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.owner_msg.sender.L287*C10847">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.divestFee_divestFeeInitial.L285*C10813"/>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>msg.sender</sol:assignRight>
            <sol:assignLeft>owner</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.maxWin_maxWinInitial.L281*C10695"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.minBetInitial.L275*C10491">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>minBetInitial</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.maxWinInitial.L275*C10471">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>maxWinInitial</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.minBet_minBetInitial.L282*C10720"/>
        <sol:nameIs>Dice</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.investorIDs.L258*C10057">
        <sol:elementTypeName2>uint</sol:elementTypeName2>
        <sol:elementTypeName1>address</sol:elementTypeName1>
        <sol:typeName>mapping</sol:typeName>
        <sol:nameIs>investorIDs</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.getBankroll.L443*C15711">
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.bankroll.L449*C15917">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.bankroll_this.balance.L447*C15888">
                <sol:before>
                  <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.log0.L446*C15860">
                    <sol:before>
                      <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L445*C15829">
                        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.bankroll_this.balance.L447*C15888"/>
                        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.log0.L446*C15860"/>
                        <sol:before>
                          <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.this.balance_bankroll.L445*C15829">
                            <sol:before>
                              <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.this.balance_bankroll.L445*C15829">
                                <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L445*C15829"/>
                                <sol:before>
                                  <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintbankroll.L444*C15760">
                                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.getBankroll.L443*C15711"/>
                                    <sol:valueIs>uint(int(invested)+profit+ownerProfit-takenProfit)</sol:valueIs>
                                    <sol:nameIs>bankroll</sol:nameIs>
                                    <sol:typeName>uint</sol:typeName>
                                  </sol:StateVar>
                                </sol:before>
                                <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.this.balance_bankroll.L445*C15829"/>
                              </sol:FunctionIf>
                            </sol:before>
                            <sol:hasIfCondition>this.balance&lt;bankroll</sol:hasIfCondition>
                          </sol:IfCondition>
                        </sol:before>
                      </sol:IfRight>
                    </sol:before>
                    <sol:callFunctionArgument>"bankroll_mismatch"</sol:callFunctionArgument>
                    <sol:callFunctionName>log0</sol:callFunctionName>
                  </sol:FunctionCall>
                </sol:before>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>this.balance</sol:assignRight>
                <sol:assignLeft>bankroll</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:returnText>bankroll</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.this.balance_bankroll.L445*C15829"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintbankroll.L444*C15760"/>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L443*C15743">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.uint.L443*C15751">
                <sol:typeName>uint</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:nameIs>getBankroll</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.divest.L432*C15415">
        <sol:callFunction>
          <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.divest.L434*C15461">
            <sol:before>
              <sol:Throw rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_throw.throw;.L433*C15453">
                <sol:before>
                  <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L433*C15436">
                    <sol:hasThrow rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_throw.throw;.L433*C15453"/>
                    <sol:before>
                      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.msg.value_0.L433*C15436">
                        <sol:before>
                          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.msg.value_0.L433*C15436">
                            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L433*C15436"/>
                            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.divest.L432*C15415"/>
                            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.msg.value_0.L433*C15436"/>
                          </sol:FunctionIf>
                        </sol:before>
                        <sol:hasIfCondition>msg.value&gt;0</sol:hasIfCondition>
                      </sol:IfCondition>
                    </sol:before>
                  </sol:IfRight>
                </sol:before>
                <sol:throwText>throw;</sol:throwText>
              </sol:Throw>
            </sol:before>
            <sol:callFunctionArgument>msg.sender,getBalance(msg.sender)</sol:callFunctionArgument>
            <sol:callFunctionName>divest</sol:callFunctionName>
          </sol:FunctionCall>
        </sol:callFunction>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.msg.value_0.L433*C15436"/>
        <sol:nameIs>divest</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.bets.L269*C10254">
        <sol:elementTypeName2>Bet</sol:elementTypeName2>
        <sol:elementTypeName1>bytes32</sol:elementTypeName1>
        <sol:typeName>mapping</sol:typeName>
        <sol:nameIs>bets</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.investors.L256*C9974">
        <sol:elementTypeName2>Investor</sol:elementTypeName2>
        <sol:elementTypeName1>uint</sol:elementTypeName1>
        <sol:typeName>mapping</sol:typeName>
        <sol:nameIs>investors</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.rebalance.L398*C14416">
        <sol:hasIf>
          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.takenProfit!_profit.L399*C14448">
            <sol:hasIfRight>
              <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L399*C14448">
                <sol:containAssignment>
                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.takenProfit_profit.L411*C14907">
                    <sol:before>
                      <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.invested___initialBankroll-newInvested_.L409*C14858">
                        <sol:before>
                          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.ownerProfit__int_initialBankroll-newInvested_.L408*C14758">
                            <sol:before>
                              <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if_ifRight._.L407*C14701">
                                <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.invested___initialBankroll-newInvested_.L409*C14858"/>
                                <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.ownerProfit__int_initialBankroll-newInvested_.L408*C14758"/>
                                <sol:before>
                                  <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if.newInvested!_initialBankroll&amp;&amp;numInvestors_0.L407*C14701">
                                    <sol:before>
                                      <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_if_ifRight_if.newInvested!_initialBankroll&amp;&amp;numInvestors_0.L407*C14701">
                                        <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if_ifRight._.L407*C14701"/>
                                        <sol:before>
                                          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.invested_newInvested.L406*C14676">
                                            <sol:before>
                                              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.newInvested__investors_i_.capital.L404*C14635">
                                                <sol:before>
                                                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.investors_i_.capital_getBalance_investors_i_.user_.L403*C14580">
                                                    <sol:before>
                                                      <sol:FunctionFor rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_if_ifRight_for.for_uinti_1i__numInvestorsi____investors_i_.capital_getBalance_investors_i_.user_newInvested__investors_i_.capital_.L402*C14540">
                                                        <sol:conditionStep
                                                        >i++</sol:conditionStep>
                                                        <sol:hasForCondition>
                                                          <sol:ForCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.i__numInvestors.L402*C14540">
                                                            <sol:conditionValue
                                                            >numInvestors</sol:conditionValue>
                                                            <sol:conditionSymbol
                                                            >&lt;=</sol:conditionSymbol>
                                                          </sol:ForCondition>
                                                        </sol:hasForCondition>
                                                        <sol:conditionVar
                                                        >i</sol:conditionVar>
                                                        <sol:hasStateVar>
                                                          <sol:stateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.uinti.L402*C14540">
                                                            <sol:valueIs
                                                            >1</sol:valueIs>
                                                            <sol:nameIs
                                                            >i</sol:nameIs>
                                                            <sol:typeName
                                                            >uint</sol:typeName>
                                                          </sol:stateVar>
                                                        </sol:hasStateVar>
                                                        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.newInvested__investors_i_.capital.L404*C14635"/>
                                                        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.investors_i_.capital_getBalance_investors_i_.user_.L403*C14580"/>
                                                        <sol:before>
                                                          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_varDeclare.uintinitialBankroll.L401*C14501">
                                                            <sol:before>
                                                              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_varDeclare.uintnewInvested.L400*C14478">
    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L399*C14448"/>
    <sol:valueIs>0</sol:valueIs>
    <sol:nameIs>newInvested</sol:nameIs>
    <sol:typeName>uint</sol:typeName>                         </sol:StateVar>
                                                            </sol:before>
                                                            <sol:valueIs
                                                            >getBankroll()</sol:valueIs>
                                                            <sol:nameIs
                                                            >initialBankroll</sol:nameIs>
                                                            <sol:typeName
                                                            >uint</sol:typeName>
                                                          </sol:StateVar>
                                                        </sol:before>
                                                      </sol:FunctionFor>
                                                    </sol:before>
                                                    <sol:assignSymbol
                                                    >=</sol:assignSymbol>
                                                    <sol:assignRight
                                                    >getBalance(investors[i].user)</sol:assignRight>
                                                    <sol:assignLeft
                                                    >investors[i].capital</sol:assignLeft>
                                                  </sol:Assignment>
                                                </sol:before>
                                                <sol:assignSymbol
                                                >=</sol:assignSymbol>
                                                <sol:assignRight
                                                >newInvested+investors[i].capital</sol:assignRight>
                                                <sol:assignLeft
                                                >newInvested</sol:assignLeft>
                                              </sol:Assignment>
                                            </sol:before>
                                            <sol:assignSymbol
                                            >=</sol:assignSymbol>
                                            <sol:assignRight>newInvested</sol:assignRight>
                                            <sol:assignLeft>invested</sol:assignLeft>
                                          </sol:Assignment>
                                        </sol:before>
                                        <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if.newInvested!_initialBankroll&amp;&amp;numInvestors_0.L407*C14701"/>
                                      </sol:FunctionIf>
                                    </sol:before>
                                    <sol:hasIfCondition>newInvested!=initialBankroll&amp;&amp;numInvestors&gt;0</sol:hasIfCondition>
                                  </sol:IfCondition>
                                </sol:before>
                              </sol:IfRight>
                            </sol:before>
                            <sol:assignSymbol>=</sol:assignSymbol>
                            <sol:assignRight>ownerProfit+int(initialBankroll-newInvested)</sol:assignRight>
                            <sol:assignLeft>ownerProfit</sol:assignLeft>
                          </sol:Assignment>
                        </sol:before>
                        <sol:assignSymbol>=</sol:assignSymbol>
                        <sol:assignRight>invested+(initialBankroll-newInvested)</sol:assignRight>
                        <sol:assignLeft>invested</sol:assignLeft>
                      </sol:Assignment>
                    </sol:before>
                    <sol:assignSymbol>=</sol:assignSymbol>
                    <sol:assignRight>profit</sol:assignRight>
                    <sol:assignLeft>takenProfit</sol:assignLeft>
                  </sol:Assignment>
                </sol:containAssignment>
                <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_if_ifRight_if.newInvested!_initialBankroll&amp;&amp;numInvestors_0.L407*C14701"/>
                <sol:before>
                  <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.takenProfit!_profit.L399*C14448">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.takenProfit!_profit.L399*C14448"/>
                    <sol:hasIfCondition>takenProfit!=profit</sol:hasIfCondition>
                  </sol:IfCondition>
                </sol:before>
                <sol:hasFor rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_if_ifRight_for.for_uinti_1i__numInvestorsi____investors_i_.capital_getBalance_investors_i_.user_newInvested__investors_i_.capital_.L402*C14540"/>
                <sol:conditionStep>noDecelaration</sol:conditionStep>
                <sol:conditionVar>noDeclaration</sol:conditionVar>
                <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_varDeclare.uintinitialBankroll.L401*C14501"/>
                <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_varDeclare.uintnewInvested.L400*C14478"/>
                <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.invested_newInvested.L406*C14676"/>
                <sol:condition>noDecelaration</sol:condition>
              </sol:IfRight>
            </sol:hasIfRight>
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.rebalance.L398*C14416"/>
            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.takenProfit!_profit.L399*C14448"/>
          </sol:FunctionIf>
        </sol:hasIf>
        <sol:hasModifier>private</sol:hasModifier>
        <sol:nameIs>rebalance</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.fallback.L289*C10871">
        <sol:callFunction>
          <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.bet.L290*C10885">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.fallback.L289*C10871"/>
            <sol:callFunctionArgument></sol:callFunctionArgument>
            <sol:callFunctionName>bet</sol:callFunctionName>
          </sol:FunctionCall>
        </sol:callFunction>
        <sol:nameIs>fallback</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.divest.L414*C14936">
        <sol:hasIf>
          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.investorIDs_user__0.L415*C14990">
            <sol:hasIfRight>
              <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L415*C14990">
                <sol:callFunction>
                  <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.safeSend.L425*C15283">
                    <sol:before>
                      <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.ownerProfit__int_newAmount_.L424*C15251">
                        <sol:before>
                          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_varDeclare.uintnewAmount.L423*C15168">
                            <sol:before>
                              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.invested-_amount.L421*C15144">
                                <sol:before>
                                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.investors_investorIDs_user__.capital-_amount.L420*C15095">
                                    <sol:before>
                                      <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.amount_getBalance_user_.L418*C15064">
                                        <sol:before>
                                          <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if_ifRight._.L417*C15032">
                                            <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.amount_getBalance_user_.L418*C15064"/>
                                            <sol:before>
                                              <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if.amount_getBalance_user_.L417*C15032">
                                                <sol:before>
                                                  <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_if_ifRight_if.amount_getBalance_user_.L417*C15032">
                                                    <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if_ifRight._.L417*C15032"/>
                                                    <sol:before>
                                                      <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.rebalance.L416*C15018">
                                                        <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L415*C14990"/>
                                                        <sol:callFunctionArgument
                                                        ></sol:callFunctionArgument>
                                                        <sol:callFunctionName
                                                        >rebalance</sol:callFunctionName>
                                                      </sol:FunctionCall>
                                                    </sol:before>
                                                    <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if.amount_getBalance_user_.L417*C15032"/>
                                                  </sol:FunctionIf>
                                                </sol:before>
                                                <sol:hasIfCondition
                                                >amount&gt;getBalance(user)</sol:hasIfCondition>
                                              </sol:IfCondition>
                                            </sol:before>
                                          </sol:IfRight>
                                        </sol:before>
                                        <sol:assignSymbol>=</sol:assignSymbol>
                                        <sol:assignRight>getBalance(user)</sol:assignRight>
                                        <sol:assignLeft>amount</sol:assignLeft>
                                      </sol:Assignment>
                                    </sol:before>
                                    <sol:assignSymbol>=</sol:assignSymbol>
                                    <sol:assignRight>investors[investorIDs[user]].capital-amount</sol:assignRight>
                                    <sol:assignLeft>investors[investorIDs[user]].capital</sol:assignLeft>
                                  </sol:Assignment>
                                </sol:before>
                                <sol:assignSymbol>=</sol:assignSymbol>
                                <sol:assignRight>invested-amount</sol:assignRight>
                                <sol:assignLeft>invested</sol:assignLeft>
                              </sol:Assignment>
                            </sol:before>
                            <sol:valueIs>(amount*divestFee)/10000</sol:valueIs>
                            <sol:nameIs>newAmount</sol:nameIs>
                            <sol:typeName>uint</sol:typeName>
                          </sol:StateVar>
                        </sol:before>
                        <sol:assignSymbol>=</sol:assignSymbol>
                        <sol:assignRight>ownerProfit+int(newAmount)</sol:assignRight>
                        <sol:assignLeft>ownerProfit</sol:assignLeft>
                      </sol:Assignment>
                    </sol:before>
                    <sol:callFunctionArgument>user,(amount-newAmount)</sol:callFunctionArgument>
                    <sol:callFunctionName>safeSend</sol:callFunctionName>
                  </sol:FunctionCall>
                </sol:callFunction>
                <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.ownerProfit__int_newAmount_.L424*C15251"/>
                <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_varDeclare.uintnewAmount.L423*C15168"/>
                <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.invested-_amount.L421*C15144"/>
                <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.investors_investorIDs_user__.capital-_amount.L420*C15095"/>
                <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_if_ifRight_if.amount_getBalance_user_.L417*C15032"/>
                <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.rebalance.L416*C15018"/>
                <sol:before>
                  <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.investorIDs_user__0.L415*C14990">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.investorIDs_user__0.L415*C14990"/>
                    <sol:hasIfCondition>investorIDs[user]&gt;0</sol:hasIfCondition>
                  </sol:IfCondition>
                </sol:before>
              </sol:IfRight>
            </sol:hasIfRight>
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.divest.L414*C14936"/>
            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.investorIDs_user__0.L415*C14990"/>
          </sol:FunctionIf>
        </sol:hasIf>
        <sol:hasModifier>private</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.amount.L414*C14966">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>amount</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.user.L414*C14952">
            <sol:typeName>address</sol:typeName>
            <sol:nameIs>user</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>divest</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.amountWagered.L271*C10307">
        <sol:hasModifier>public</sol:hasModifier>
        <sol:valueIs>0</sol:valueIs>
        <sol:typeName>uint</sol:typeName>
        <sol:nameIs>amountWagered</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.takenProfit.L273*C10363">
        <sol:hasModifier>public</sol:hasModifier>
        <sol:valueIs>0</sol:valueIs>
        <sol:typeName>int</sol:typeName>
        <sol:nameIs>takenProfit</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.maxWin.L244*C9521">
        <sol:hasModifier>public</sol:hasModifier>
        <sol:valueIs>100</sol:valueIs>
        <sol:typeName>uint</sol:typeName>
        <sol:nameIs>maxWin</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.invest.L361*C13475">
        <sol:hasIf>
          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.investorIDs_msg.sender__0.L364*C13522">
            <sol:hasIfWrong>
              <sol:IfWrong rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifWrong._.L364*C13522">
                <sol:hasIf>
                  <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_if_ifWrong_if.investorID_0.L380*C13950">
                    <sol:hasIfWrong>
                      <sol:IfWrong rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#7_con_fun_if_ifWrong_if_ifRight_if_ifWrong._.L380*C13950">
                        <sol:hasThrow>
                          <sol:Throw rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if_ifRight_if_ifWrong_throw.throw;.L394*C14399">
                            <sol:before>
                              <sol:Throw rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#7_con_fun_if_ifWrong_if_ifRight_if_ifWrong_throw.throw;.L391*C14378">
                                <sol:before>
                                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.investorIDs_msg.sender__investorID.L389*C14329">
                                    <sol:before>
                                      <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.invested__msg.value.L388*C14305">
                                        <sol:before>
                                          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.investors_investorID_.capital_msg.value.L387*C14261">
                                            <sol:before>
                                              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.investors_investorID_.user_msg.sender.L386*C14219">
                                                <sol:before>
                                                  <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#7_con_fun_if_ifWrong_if_ifRight_if_ifRight._.L385*C14128">
                                                    <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.investorIDs_msg.sender__investorID.L389*C14329"/>
                                                    <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.invested__msg.value.L388*C14305"/>
                                                    <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.investors_investorID_.capital_msg.value.L387*C14261"/>
                                                    <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.investors_investorID_.user_msg.sender.L386*C14219"/>
                                                    <sol:before>
                                                      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#7_con_fun_if_ifWrong_if_ifRight_if.investors_investorID_.capital__0&amp;&amp;investorIDs_investors_investorID_.user___0.L385*C14128">
                                                        <sol:before>
                                                          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_if_ifWrong_if_ifRight_if.investors_investorID_.capital__0&amp;&amp;investorIDs_investors_investorID_.user___0.L385*C14128">
                                                            <sol:hasIfWrong>
                                                              <sol:IfWrong rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#7_con_fun_if_ifWrong_if_ifRight_if_ifWrong._.L385*C14128">
    <sol:hasThrow rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#7_con_fun_if_ifWrong_if_ifRight_if_ifWrong_throw.throw;.L391*C14378"/>
    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#7_con_fun_if_ifWrong_if_ifRight_if.investors_investorID_.capital__0&amp;&amp;investorIDs_investors_investorID_.user___0.L385*C14128"/>
                                                              </sol:IfWrong>
                                                            </sol:hasIfWrong>
                                                            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#7_con_fun_if_ifWrong_if_ifRight_if_ifRight._.L385*C14128"/>
                                                            <sol:before>
                                                              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.investorIDs_investors_investorID_.user__0.L383*C14079">
    <sol:before>
      <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.divest.L382*C14011">
        <sol:before>
          <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#7_con_fun_if_ifWrong_if_ifRight_if_ifRight._.L381*C13971">
            <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.investorIDs_investors_investorID_.user__0.L383*C14079"/>
            <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.divest.L382*C14011"/>
            <sol:before>
              <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#7_con_fun_if_ifWrong_if_ifRight_if.investors_investorID_.capital_0.L381*C13971">
                <sol:before>
                  <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_if_ifWrong_if_ifRight_if.investors_investorID_.capital_0.L381*C13971">
                    <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#7_con_fun_if_ifWrong_if_ifRight_if_ifRight._.L381*C13971"/>
                    <sol:before>
                      <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if_ifRight._.L380*C13950">
                        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_if_ifWrong_if_ifRight_if.investors_investorID_.capital__0&amp;&amp;investorIDs_investors_investorID_.user___0.L385*C14128"/>
                        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_if_ifWrong_if_ifRight_if.investors_investorID_.capital_0.L381*C13971"/>
                        <sol:before>
                          <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if.investorID_0.L380*C13950">
                            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_if_ifWrong_if.investorID_0.L380*C13950"/>
                            <sol:hasIfCondition>investorID&gt;0</sol:hasIfCondition>
                          </sol:IfCondition>
                        </sol:before>
                      </sol:IfRight>
                    </sol:before>
                    <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#7_con_fun_if_ifWrong_if_ifRight_if.investors_investorID_.capital_0.L381*C13971"/>
                  </sol:FunctionIf>
                </sol:before>
                <sol:hasIfCondition>investors[investorID].capital&gt;0</sol:hasIfCondition>
              </sol:IfCondition>
            </sol:before>
          </sol:IfRight>
        </sol:before>
        <sol:callFunctionArgument>investors[investorID].user,investors[investorID].capital</sol:callFunctionArgument>
        <sol:callFunctionName>divest</sol:callFunctionName>
      </sol:FunctionCall>
    </sol:before>
    <sol:assignSymbol>=</sol:assignSymbol>
    <sol:assignRight>0</sol:assignRight>
    <sol:assignLeft>investorIDs[investors[investorID].user]</sol:assignLeft>
                                                              </sol:Assignment>
                                                            </sol:before>
                                                            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#7_con_fun_if_ifWrong_if_ifRight_if.investors_investorID_.capital__0&amp;&amp;investorIDs_investors_investorID_.user___0.L385*C14128"/>
                                                          </sol:FunctionIf>
                                                        </sol:before>
                                                        <sol:hasIfCondition
                                                        >investors[investorID].capital==0&amp;&amp;investorIDs[investors[investorID].user]==0</sol:hasIfCondition>
                                                      </sol:IfCondition>
                                                    </sol:before>
                                                  </sol:IfRight>
                                                </sol:before>
                                                <sol:assignSymbol
                                                >=</sol:assignSymbol>
                                                <sol:assignRight
                                                >msg.sender</sol:assignRight>
                                                <sol:assignLeft
                                                >investors[investorID].user</sol:assignLeft>
                                              </sol:Assignment>
                                            </sol:before>
                                            <sol:assignSymbol
                                            >=</sol:assignSymbol>
                                            <sol:assignRight>msg.value</sol:assignRight>
                                            <sol:assignLeft>investors[investorID].capital</sol:assignLeft>
                                          </sol:Assignment>
                                        </sol:before>
                                        <sol:assignSymbol>=</sol:assignSymbol>
                                        <sol:assignRight>invested+msg.value</sol:assignRight>
                                        <sol:assignLeft>invested</sol:assignLeft>
                                      </sol:Assignment>
                                    </sol:before>
                                    <sol:assignSymbol>=</sol:assignSymbol>
                                    <sol:assignRight>investorID</sol:assignRight>
                                    <sol:assignLeft>investorIDs[msg.sender]</sol:assignLeft>
                                  </sol:Assignment>
                                </sol:before>
                                <sol:throwText>throw;</sol:throwText>
                              </sol:Throw>
                            </sol:before>
                            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.investorIDs_msg.sender__investorID.L389*C14329"/>
                            <sol:throwText>throw;</sol:throwText>
                          </sol:Throw>
                        </sol:hasThrow>
                        <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if.investorID_0.L380*C13950"/>
                      </sol:IfWrong>
                    </sol:hasIfWrong>
                    <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if_ifRight._.L380*C13950"/>
                    <sol:before>
                      <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.investorID_i.L376*C13924">
                        <sol:before>
                          <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#8_con_fun_if_ifWrong_if_ifWrong_for_if_ifRight._.L375*C13812">
                            <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.investorID_i.L376*C13924"/>
                            <sol:before>
                              <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#8_con_fun_if_ifWrong_if_ifWrong_for_if.investors_i_.capital_msg.value&amp;&amp;_investorID__0__investors_i_.capital_investors_investorID_.capital_.L375*C13812">
                                <sol:before>
                                  <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#7_con_fun_if_ifWrong_if_ifWrong_for_if.investors_i_.capital_msg.value&amp;&amp;_investorID__0__investors_i_.capital_investors_investorID_.capital_.L375*C13812">
                                    <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#8_con_fun_if_ifWrong_if_ifWrong_for_if_ifRight._.L375*C13812"/>
                                    <sol:before>
                                      <sol:FunctionFor rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_if_ifWrong_if_ifWrong_for.for_uinti_1i__numInvestorsi____if_investors_i_.capital_msg.value&amp;&amp;_investorID__0__investors_i_.capital_investors_investorID_.capital___investorID_i__.L374*C13772">
                                        <sol:conditionStep>i++</sol:conditionStep>
                                        <sol:hasForCondition>
                                          <sol:ForCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.i__numInvestors.L374*C13772">
                                            <sol:conditionValue
                                            >numInvestors</sol:conditionValue>
                                            <sol:conditionSymbol
                                            >&lt;=</sol:conditionSymbol>
                                          </sol:ForCondition>
                                        </sol:hasForCondition>
                                        <sol:conditionVar>i</sol:conditionVar>
                                        <sol:hasStateVar>
                                          <sol:stateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.uinti.L374*C13772">
                                            <sol:valueIs>1</sol:valueIs>
                                            <sol:nameIs>i</sol:nameIs>
                                            <sol:typeName>uint</sol:typeName>
                                          </sol:stateVar>
                                        </sol:hasStateVar>
                                        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#7_con_fun_if_ifWrong_if_ifWrong_for_if.investors_i_.capital_msg.value&amp;&amp;_investorID__0__investors_i_.capital_investors_investorID_.capital_.L375*C13812"/>
                                        <sol:before>
                                          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.investorID___numInvestors.L372*C13732">
                                            <sol:before>
                                              <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if_ifRight._.L371*C13698">
                                                <sol:conditionStep
                                                >i++</sol:conditionStep>
                                                <sol:hasForCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.i__numInvestors.L374*C13772"/>
                                                <sol:conditionVar
                                                >i</sol:conditionVar>
                                                <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.uinti.L374*C13772"/>
                                                <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.investorID___numInvestors.L372*C13732"/>
                                                <sol:before>
                                                  <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if.numInvestors_maxInvestors.L371*C13698">
                                                    <sol:before>
                                                      <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_if_ifWrong_if.numInvestors_maxInvestors.L371*C13698">
                                                        <sol:hasIfWrong>
                                                          <sol:IfWrong rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if_ifWrong._.L371*C13698">
                                                            <sol:hasFor rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_if_ifWrong_if_ifWrong_for.for_uinti_1i__numInvestorsi____if_investors_i_.capital_msg.value&amp;&amp;_investorID__0__investors_i_.capital_investors_investorID_.capital___investorID_i__.L374*C13772"/>
                                                            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if.numInvestors_maxInvestors.L371*C13698"/>
                                                          </sol:IfWrong>
                                                        </sol:hasIfWrong>
                                                        <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if_ifRight._.L371*C13698"/>
                                                        <sol:before>
                                                          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifWrong_varDeclare.uintinvestorID.L370*C13676">
                                                            <sol:before>
                                                              <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.rebalance.L369*C13662">
    <sol:before>
      <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.invested__msg.value.L367*C13628">
        <sol:before>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.investors_investorIDs_msg.sender__.capital__msg.value.L366*C13570">
            <sol:before>
              <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.rebalance.L365*C13556">
                <sol:before>
                  <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L364*C13522">
                    <sol:conditionStep>i++</sol:conditionStep>
                    <sol:hasForCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.i__numInvestors.L374*C13772"/>
                    <sol:conditionVar>i</sol:conditionVar>
                    <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.uinti.L374*C13772"/>
                    <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.invested__msg.value.L367*C13628"/>
                    <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.investors_investorIDs_msg.sender__.capital__msg.value.L366*C13570"/>
                    <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.rebalance.L365*C13556"/>
                    <sol:before>
                      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.investorIDs_msg.sender__0.L364*C13522">
                        <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.investorIDs_msg.sender__0.L364*C13522"/>
                        <sol:hasIfCondition>investorIDs[msg.sender]&gt;0</sol:hasIfCondition>
                      </sol:IfCondition>
                    </sol:before>
                  </sol:IfRight>
                </sol:before>
                <sol:callFunctionArgument></sol:callFunctionArgument>
                <sol:callFunctionName>rebalance</sol:callFunctionName>
              </sol:FunctionCall>
            </sol:before>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>investors[investorIDs[msg.sender]].capital+msg.value</sol:assignRight>
            <sol:assignLeft>investors[investorIDs[msg.sender]].capital</sol:assignLeft>
          </sol:Assignment>
        </sol:before>
        <sol:assignSymbol>=</sol:assignSymbol>
        <sol:assignRight>invested+msg.value</sol:assignRight>
        <sol:assignLeft>invested</sol:assignLeft>
      </sol:Assignment>
    </sol:before>
    <sol:callFunctionArgument></sol:callFunctionArgument>
    <sol:callFunctionName>rebalance</sol:callFunctionName>    </sol:FunctionCall>
                                                            </sol:before>
                                                            <sol:valueIs
                                                            >0</sol:valueIs>
                                                            <sol:nameIs
                                                            >investorID</sol:nameIs>
                                                            <sol:typeName
                                                            >uint</sol:typeName>
                                                          </sol:StateVar>
                                                        </sol:before>
                                                        <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if.numInvestors_maxInvestors.L371*C13698"/>
                                                      </sol:FunctionIf>
                                                    </sol:before>
                                                    <sol:hasIfCondition
                                                    >numInvestors&lt;maxInvestors</sol:hasIfCondition>
                                                  </sol:IfCondition>
                                                </sol:before>
                                              </sol:IfRight>
                                            </sol:before>
                                            <sol:assignSymbol
                                            >=</sol:assignSymbol>
                                            <sol:assignRight>++numInvestors</sol:assignRight>
                                            <sol:assignLeft>investorID</sol:assignLeft>
                                          </sol:Assignment>
                                        </sol:before>
                                      </sol:FunctionFor>
                                    </sol:before>
                                    <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#8_con_fun_if_ifWrong_if_ifWrong_for_if.investors_i_.capital_msg.value&amp;&amp;_investorID__0__investors_i_.capital_investors_investorID_.capital_.L375*C13812"/>
                                  </sol:FunctionIf>
                                </sol:before>
                                <sol:hasIfCondition>investors[i].capital&lt;msg.value&amp;&amp;(investorID==0||investors[i].capital&lt;investors[investorID].capital)</sol:hasIfCondition>
                              </sol:IfCondition>
                            </sol:before>
                          </sol:IfRight>
                        </sol:before>
                        <sol:assignSymbol>=</sol:assignSymbol>
                        <sol:assignRight>i</sol:assignRight>
                        <sol:assignLeft>investorID</sol:assignLeft>
                      </sol:Assignment>
                    </sol:before>
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.investorID___numInvestors.L372*C13732"/>
                    <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if.investorID_0.L380*C13950"/>
                  </sol:FunctionIf>
                </sol:hasIf>
                <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_if_ifWrong_if.numInvestors_maxInvestors.L371*C13698"/>
                <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifWrong_varDeclare.uintinvestorID.L370*C13676"/>
                <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.rebalance.L369*C13662"/>
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.investorIDs_msg.sender__0.L364*C13522"/>
              </sol:IfWrong>
            </sol:hasIfWrong>
            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L364*C13522"/>
            <sol:before>
              <sol:Throw rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_throw.throw;.L362*C13511">
                <sol:before>
                  <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L362*C13496">
                    <sol:hasThrow rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_throw.throw;.L362*C13511"/>
                    <sol:before>
                      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.isStopped.L362*C13496">
                        <sol:before>
                          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.isStopped.L362*C13496">
                            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L362*C13496"/>
                            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.invest.L361*C13475"/>
                            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.isStopped.L362*C13496"/>
                          </sol:FunctionIf>
                        </sol:before>
                        <sol:hasIfCondition>isStopped</sol:hasIfCondition>
                      </sol:IfCondition>
                    </sol:before>
                  </sol:IfRight>
                </sol:before>
                <sol:throwText>throw;</sol:throwText>
              </sol:Throw>
            </sol:before>
            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.investorIDs_msg.sender__0.L364*C13522"/>
          </sol:FunctionIf>
        </sol:hasIf>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.isStopped.L362*C13496"/>
        <sol:nameIs>invest</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.getBalance.L436*C15509">
        <sol:hasIf>
          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.investorIDs_user__0&amp;&amp;invested_0.L437*C15569">
            <sol:hasIfWrong>
              <sol:IfWrong rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifWrong._.L437*C15569">
                <sol:hasReturnValue>
                  <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifWrong_return.0.L440*C15694">
                    <sol:before>
                      <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.investors_investorIDs_user__.capital_getBankroll___invested.L438*C15611">
                        <sol:before>
                          <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L437*C15569">
                            <sol:hasReturnValue rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.investors_investorIDs_user__.capital_getBankroll___invested.L438*C15611"/>
                            <sol:before>
                              <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.investorIDs_user__0&amp;&amp;invested_0.L437*C15569">
                                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.investorIDs_user__0&amp;&amp;invested_0.L437*C15569"/>
                                <sol:hasIfCondition>investorIDs[user]&gt;0&amp;&amp;invested&gt;0</sol:hasIfCondition>
                              </sol:IfCondition>
                            </sol:before>
                          </sol:IfRight>
                        </sol:before>
                        <sol:returnText>investors[investorIDs[user]].capital*getBankroll()/invested</sol:returnText>
                      </sol:ReturnValue>
                    </sol:before>
                    <sol:returnText>0</sol:returnText>
                  </sol:ReturnValue>
                </sol:hasReturnValue>
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.investorIDs_user__0&amp;&amp;invested_0.L437*C15569"/>
              </sol:IfWrong>
            </sol:hasIfWrong>
            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L437*C15569"/>
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.getBalance.L436*C15509"/>
            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.investorIDs_user__0&amp;&amp;invested_0.L437*C15569"/>
          </sol:FunctionIf>
        </sol:hasIf>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L436*C15552">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.uint.L436*C15560">
                <sol:typeName>uint</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.user.L436*C15529">
            <sol:typeName>address</sol:typeName>
            <sol:nameIs>user</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>getBalance</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.minBet.L245*C9622">
        <sol:hasModifier>public</sol:hasModifier>
        <sol:valueIs>1finney</sol:valueIs>
        <sol:typeName>uint</sol:typeName>
        <sol:nameIs>minBet</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
  </sol:Contract>
  <sol:Contract rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con.OraclizeAddrResolverI.L31*C1837">
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.getAddress.L32*C1871">
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L32*C1893">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param._addr.L32*C1902">
                <sol:typeName>address</sol:typeName>
                <sol:nameIs>_addr</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:nameIs>getAddress</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:nameIs>OraclizeAddrResolverI</sol:nameIs>
  </sol:Contract>
  <sol:Contract rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con.OraclizeI.L20*C1118">
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.query2_withGasLimit.L25*C1479">
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L25*C1589">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param._id.L25*C1598">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>_id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._gaslimit.L25*C1573">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>_gaslimit</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._arg2.L25*C1559">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_arg2</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._arg1.L25*C1545">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_arg1</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._datasource.L25*C1525">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._timestamp.L25*C1508">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>_timestamp</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>query2_withGasLimit</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.getPrice.L27*C1677">
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L27*C1730">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param._dsprice.L27*C1739">
                <sol:typeName>uint</sol:typeName>
                <sol:nameIs>_dsprice</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.gaslimit.L27*C1715">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>gaslimit</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._datasource.L27*C1695">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>getPrice</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.getPrice.L26*C1613">
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L26*C1651">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param._dsprice.L26*C1660">
                <sol:typeName>uint</sol:typeName>
                <sol:nameIs>_dsprice</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._datasource.L26*C1631">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>getPrice</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.useCoupon.L28*C1756">
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._coupon.L28*C1775">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_coupon</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>useCoupon</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:nameIs>OraclizeI</sol:nameIs>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.setProofType.L29*C1793">
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._proofType.L29*C1815">
            <sol:typeName>byte</sol:typeName>
            <sol:nameIs>_proofType</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>setProofType</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.query2.L24*C1374">
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L24*C1455">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param._id.L24*C1464">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>_id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._arg2.L24*C1441">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_arg2</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._arg1.L24*C1427">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_arg1</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._datasource.L24*C1407">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._timestamp.L24*C1390">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>_timestamp</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>query2</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.query.L22*C1167">
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L22*C1232">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param._id.L22*C1241">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>_id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._arg.L22*C1219">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_arg</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._datasource.L22*C1199">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._timestamp.L22*C1182">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>_timestamp</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>query</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.query_withGasLimit.L23*C1256">
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L23*C1350">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param._id.L23*C1359">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>_id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._gaslimit.L23*C1334">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>_gaslimit</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._arg.L23*C1321">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_arg</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._datasource.L23*C1301">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._timestamp.L23*C1284">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>_timestamp</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>query_withGasLimit</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.cbAddress.L21*C1140">
        <sol:hasModifier>public</sol:hasModifier>
        <sol:typeName>address</sol:typeName>
        <sol:nameIs>cbAddress</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
  </sol:Contract>
</rdf:RDF>
