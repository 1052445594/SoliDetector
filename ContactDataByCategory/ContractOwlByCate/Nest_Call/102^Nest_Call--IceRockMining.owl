<rdf:RDF
    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
    xmlns:owl="http://www.w3.org/2002/07/owl#"
    xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
    xmlns:sol="http://www.hty.group/tf/ontologies/2020/07/Solildity#"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema#">
  <owl:Ontology rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity"/>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#FunctionFor">
    <rdfs:subClassOf>
      <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#Function"/>
    </rdfs:subClassOf>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#Function">
    <owl:deprecated rdf:parseType="Resource">
    </owl:deprecated>
    <rdfs:subClassOf>
      <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#Contract"/>
    </rdfs:subClassOf>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#ForCondition">
    <rdfs:subClassOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#FunctionFor"/>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#Param">
    <rdfs:subClassOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#Function"/>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#IfCondition">
    <rdfs:subClassOf>
      <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#FunctionIf"/>
    </rdfs:subClassOf>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#VariableOperation">
    <rdfs:subClassOf>
      <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#Expression"/>
    </rdfs:subClassOf>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#Constructor">
    <rdfs:subClassOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#Contract"/>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#StateVar">
    <rdfs:subClassOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#Contract"/>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#Modifier">
    <rdfs:subClassOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#Contract"/>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#Struct">
    <rdfs:subClassOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#Contract"/>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#Expression">
    <rdfs:subClassOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#Contract"/>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#IfRight">
    <rdfs:subClassOf>
      <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#FunctionIf"/>
    </rdfs:subClassOf>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#FunctionIf">
    <rdfs:subClassOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#Function"/>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#FunctionCall">
    <rdfs:subClassOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#Expression"/>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#Assignment">
    <rdfs:subClassOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#Expression"/>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#Library"/>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#ForContent">
    <rdfs:subClassOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#FunctionFor"/>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#IfWrong">
    <rdfs:subClassOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#FunctionIf"/>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#ReturnValue">
    <rdfs:subClassOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#Function"/>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#Interface"/>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#ReturnClaim">
    <rdfs:subClassOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#Function"/>
  </owl:Class>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#containAssignment"/>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#callFunction"/>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasStateVar"/>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasIfCondition"/>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasParam"/>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasIfWrong">
    <rdfs:subPropertyOf rdf:resource="http://www.w3.org/2002/07/owl#topObjectProperty"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#defineConstructor"/>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasForConditionVar">
    <rdfs:subPropertyOf>
      <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasFor"/>
    </rdfs:subPropertyOf>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#after"/>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasForConditionStep">
    <rdfs:subPropertyOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasFor"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasReturnValue"/>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasReturnClaim"/>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasIfRight">
    <rdfs:subPropertyOf rdf:resource="http://www.w3.org/2002/07/owl#topObjectProperty"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#before">
    <rdfs:subPropertyOf rdf:resource="http://www.w3.org/2002/07/owl#topObjectProperty"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#operateVarible"/>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasFunction"/>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#defineModifier"/>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasForContent">
    <rdfs:subPropertyOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasFor"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasForCondition">
    <rdfs:subPropertyOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasFor"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasStruct"/>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasIf"/>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#assignLeft">
    <rdfs:subPropertyOf rdf:resource="http://www.w3.org/2002/07/owl#topDataProperty"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#conditionValue">
    <rdfs:subPropertyOf rdf:resource="http://www.w3.org/2002/07/owl#topDataProperty"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#storageLocate"/>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#callFunctionObject"/>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasModifier"/>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#conditionVar"/>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#pragmaValue">
    <rdfs:subPropertyOf rdf:resource="http://www.w3.org/2002/07/owl#topDataProperty"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#assignSymbol"/>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#returnText"/>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#assignRight"/>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#conditionSymbol"/>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#opSymbol">
    <rdfs:subPropertyOf rdf:resource="http://www.w3.org/2002/07/owl#topDataProperty"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#pragmaName">
    <rdfs:subPropertyOf rdf:resource="http://www.w3.org/2002/07/owl#topDataProperty"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#conditionStep"/>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#callFunctionName"/>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#typeName"/>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#valueIs"/>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#opVarible">
    <rdfs:subPropertyOf rdf:resource="http://www.w3.org/2002/07/owl#topDataProperty"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#nameIs"/>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#callFunctionArgument"/>
  <sol:Pragma rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_pragma.^0.4.18.L1*C0">
    <sol:pragmaValue>^0.4.18</sol:pragmaValue>
    <sol:pragmaName>solidity</sol:pragmaName>
  </sol:Pragma>
  <sol:Library rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con.itMaps.L2*C26">
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.size.L49*C1395">
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.self.keys.length.L50*C1476">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.size.L49*C1395"/>
            <sol:returnText>self.keys.length</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L49*C1458">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.uint.L49*C1467">
                <sol:typeName>uint</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.self.L49*C1409">
            <sol:typeName>itMapAddressUint</sol:typeName>
            <sol:nameIs>self</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>size</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.getKeyByIndex.L55*C1631">
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.self.keys_idx_.L56*C1734">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.getKeyByIndex.L55*C1631"/>
            <sol:returnText>self.keys[idx]</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L55*C1713">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.address.L55*C1722">
                <sol:typeName>address</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.idx.L55*C1685">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>idx</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.self.L55*C1654">
            <sol:typeName>itMapAddressUint</sol:typeName>
            <sol:nameIs>self</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>getKeyByIndex</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.remove.L26*C609">
        <sol:hasIf>
          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.e.keyIndex__self.keys.length.L30*C787">
            <sol:hasIfRight>
              <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L30*C787">
                <sol:hasReturnValue>
                  <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.true.L36*C1059">
                    <sol:before>
                      <sol:VariableOperation rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprVaribleOp.deleteself.data_key_.L35*C1035">
                        <sol:before>
                          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.self.keys.length-_1.L34*C1011">
                            <sol:before>
                              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.self.keys_e.keyIndex-1__self.keys_self.keys.length-1_.L33*C949">
                                <sol:before>
                                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.self.data_self.keys_self.keys.length-1__.keyIndex_e.keyIndex.L32*C882">
                                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L30*C787"/>
                                    <sol:assignSymbol>=</sol:assignSymbol>
                                    <sol:assignRight>e.keyIndex</sol:assignRight>
                                    <sol:assignLeft>self.data[self.keys[self.keys.length-1]].keyIndex</sol:assignLeft>
                                  </sol:Assignment>
                                </sol:before>
                                <sol:assignSymbol>=</sol:assignSymbol>
                                <sol:assignRight>self.keys[self.keys.length-1]</sol:assignRight>
                                <sol:assignLeft>self.keys[e.keyIndex-1]</sol:assignLeft>
                              </sol:Assignment>
                            </sol:before>
                            <sol:assignSymbol>=</sol:assignSymbol>
                            <sol:assignRight>self.keys.length-1</sol:assignRight>
                            <sol:assignLeft>self.keys.length</sol:assignLeft>
                          </sol:Assignment>
                        </sol:before>
                        <sol:opSymbol>self.data[key]</sol:opSymbol>
                        <sol:opVarible>delete</sol:opVarible>
                      </sol:VariableOperation>
                    </sol:before>
                    <sol:returnText>true</sol:returnText>
                  </sol:ReturnValue>
                </sol:hasReturnValue>
                <sol:operateVarible rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprVaribleOp.deleteself.data_key_.L35*C1035"/>
                <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.self.keys.length-_1.L34*C1011"/>
                <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.self.keys_e.keyIndex-1__self.keys_self.keys.length-1_.L33*C949"/>
                <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.self.data_self.keys_self.keys.length-1__.keyIndex_e.keyIndex.L32*C882"/>
                <sol:before>
                  <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.e.keyIndex__self.keys.length.L30*C787">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.e.keyIndex__self.keys.length.L30*C787"/>
                    <sol:hasIfCondition>e.keyIndex&lt;=self.keys.length</sol:hasIfCondition>
                  </sol:IfCondition>
                </sol:before>
              </sol:IfRight>
            </sol:hasIfRight>
            <sol:before>
              <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.false.L29*C772">
                <sol:before>
                  <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L28*C750">
                    <sol:hasReturnValue rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.false.L29*C772"/>
                    <sol:before>
                      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.e.keyIndex__0.L28*C750">
                        <sol:before>
                          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.e.keyIndex__0.L28*C750">
                            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L28*C750"/>
                            <sol:before>
                              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.entryAddressUintstoragee.L27*C704">
                                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.remove.L26*C609"/>
                                <sol:storageLocate>storage</sol:storageLocate>
                                <sol:valueIs>self.data[key]</sol:valueIs>
                                <sol:nameIs>e</sol:nameIs>
                                <sol:typeName>entryAddressUint</sol:typeName>
                              </sol:StateVar>
                            </sol:before>
                            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.e.keyIndex__0.L28*C750"/>
                          </sol:FunctionIf>
                        </sol:before>
                        <sol:hasIfCondition>e.keyIndex==0</sol:hasIfCondition>
                      </sol:IfCondition>
                    </sol:before>
                  </sol:IfRight>
                </sol:before>
                <sol:returnText>false</sol:returnText>
              </sol:ReturnValue>
            </sol:before>
            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.e.keyIndex__self.keys.length.L30*C787"/>
          </sol:FunctionIf>
        </sol:hasIf>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.e.keyIndex__0.L28*C750"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.entryAddressUintstoragee.L27*C704"/>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L26*C678">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.success.L26*C687">
                <sol:typeName>bool</sol:typeName>
                <sol:nameIs>success</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.key.L26*C656">
            <sol:typeName>address</sol:typeName>
            <sol:nameIs>key</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.self.L26*C625">
            <sol:typeName>itMapAddressUint</sol:typeName>
            <sol:nameIs>self</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>remove</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.insert.L15*C301">
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.e.value_value.L17*C455">
            <sol:before>
              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.entryAddressUintstoragee.L16*C409">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.insert.L15*C301"/>
                <sol:storageLocate>storage</sol:storageLocate>
                <sol:valueIs>self.data[key]</sol:valueIs>
                <sol:nameIs>e</sol:nameIs>
                <sol:typeName>entryAddressUint</sol:typeName>
              </sol:StateVar>
            </sol:before>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>value</sol:assignRight>
            <sol:assignLeft>e.value</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L15*C382">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.replaced.L15*C391">
                <sol:typeName>bool</sol:typeName>
                <sol:nameIs>replaced</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:nameIs>insert</sol:nameIs>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.self.L15*C317">
            <sol:typeName>itMapAddressUint</sol:typeName>
            <sol:nameIs>self</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.key.L15*C348">
            <sol:typeName>address</sol:typeName>
            <sol:nameIs>key</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasIf>
          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.e.keyIndex_0.L18*C473">
            <sol:hasIfWrong>
              <sol:IfWrong rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifWrong._.L18*C473">
                <sol:hasReturnValue>
                  <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifWrong_return.false.L23*C588">
                    <sol:before>
                      <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.self.keys_e.keyIndex-1__key.L22*C554">
                        <sol:before>
                          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.e.keyIndex___self.keys.length.L21*C520">
                            <sol:before>
                              <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.true.L19*C496">
                                <sol:before>
                                  <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L18*C473">
                                    <sol:hasReturnValue rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.true.L19*C496"/>
                                    <sol:before>
                                      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.e.keyIndex_0.L18*C473">
                                        <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.e.keyIndex_0.L18*C473"/>
                                        <sol:hasIfCondition>e.keyIndex&gt;0</sol:hasIfCondition>
                                      </sol:IfCondition>
                                    </sol:before>
                                  </sol:IfRight>
                                </sol:before>
                                <sol:returnText>true</sol:returnText>
                              </sol:ReturnValue>
                            </sol:before>
                            <sol:assignSymbol>=</sol:assignSymbol>
                            <sol:assignRight>++self.keys.length</sol:assignRight>
                            <sol:assignLeft>e.keyIndex</sol:assignLeft>
                          </sol:Assignment>
                        </sol:before>
                        <sol:assignSymbol>=</sol:assignSymbol>
                        <sol:assignRight>key</sol:assignRight>
                        <sol:assignLeft>self.keys[e.keyIndex-1]</sol:assignLeft>
                      </sol:Assignment>
                    </sol:before>
                    <sol:returnText>false</sol:returnText>
                  </sol:ReturnValue>
                </sol:hasReturnValue>
                <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.self.keys_e.keyIndex-1__key.L22*C554"/>
                <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.e.keyIndex___self.keys.length.L21*C520"/>
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.e.keyIndex_0.L18*C473"/>
              </sol:IfWrong>
            </sol:hasIfWrong>
            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L18*C473"/>
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.e.value_value.L17*C455"/>
            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.e.keyIndex_0.L18*C473"/>
          </sol:FunctionIf>
        </sol:hasIf>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.value.L15*C361">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>value</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.entryAddressUintstoragee.L16*C409"/>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.getValueByIndex.L58*C1761">
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.self.data_self.keys_idx__.value.L59*C1863">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.getValueByIndex.L58*C1761"/>
            <sol:returnText>self.data[self.keys[idx]].value</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L58*C1845">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.uint.L58*C1854">
                <sol:typeName>uint</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.idx.L58*C1817">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>idx</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.self.L58*C1786">
            <sol:typeName>itMapAddressUint</sol:typeName>
            <sol:nameIs>self</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>getValueByIndex</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasStruct>
      <sol:Struct rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_struct.itMapAddressUint.L11*C210">
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.address[].L13*C281">
            <sol:typeName>address[]</sol:typeName>
            <sol:nameIs>keys</sol:nameIs>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.mapping(address=&gt;entryAddressUint).L12*C237">
            <sol:typeName>mapping(address=&gt;entryAddressUint)</sol:typeName>
            <sol:nameIs>data</sol:nameIs>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:nameIs>itMapAddressUint</sol:nameIs>
      </sol:Struct>
    </sol:hasStruct>
    <sol:hasStruct>
      <sol:Struct rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_struct.entryAddressUint.L6*C87">
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.uint.L9*C194">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>value</sol:nameIs>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.uint.L8*C178">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>keyIndex</sol:nameIs>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:nameIs>entryAddressUint</sol:nameIs>
      </sol:Struct>
    </sol:hasStruct>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.destroy.L39*C1079">
        <sol:operateVarible>
          <sol:VariableOperation rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprVaribleOp.deleteself.keys.L43*C1218">
            <sol:before>
              <sol:VariableOperation rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprVaribleOp.deleteself.data_self.keys_i__.L41*C1181">
                <sol:before>
                  <sol:FunctionFor rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for.for_uintii_self.keys.lengthi____deleteself.data_self.keys_i___.L40*C1140">
                    <sol:conditionStep>i++</sol:conditionStep>
                    <sol:hasForCondition>
                      <sol:ForCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.i_self.keys.length.L40*C1140">
                        <sol:conditionValue>self.keys.length</sol:conditionValue>
                        <sol:conditionSymbol>&lt;</sol:conditionSymbol>
                      </sol:ForCondition>
                    </sol:hasForCondition>
                    <sol:conditionVar>i</sol:conditionVar>
                    <sol:hasStateVar>
                      <sol:stateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.uinti.L40*C1140">
                        <sol:valueIs>null</sol:valueIs>
                        <sol:nameIs>i</sol:nameIs>
                        <sol:typeName>uint</sol:typeName>
                      </sol:stateVar>
                    </sol:hasStateVar>
                    <sol:operateVarible rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprVaribleOp.deleteself.data_self.keys_i__.L41*C1181"/>
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.destroy.L39*C1079"/>
                  </sol:FunctionFor>
                </sol:before>
                <sol:opSymbol>self.data[self.keys[i]]</sol:opSymbol>
                <sol:opVarible>delete</sol:opVarible>
              </sol:VariableOperation>
            </sol:before>
            <sol:opSymbol>self.keys</sol:opSymbol>
            <sol:opVarible>delete</sol:opVarible>
          </sol:VariableOperation>
        </sol:operateVarible>
        <sol:hasFor rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for.for_uintii_self.keys.lengthi____deleteself.data_self.keys_i___.L40*C1140"/>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.self.L39*C1096">
            <sol:typeName>itMapAddressUint</sol:typeName>
            <sol:nameIs>self</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>destroy</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.get.L52*C1505">
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.self.data_key_.value.L53*C1598">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.get.L52*C1505"/>
            <sol:returnText>self.data[key].value</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L52*C1580">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.uint.L52*C1589">
                <sol:typeName>uint</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.key.L52*C1549">
            <sol:typeName>address</sol:typeName>
            <sol:nameIs>key</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.self.L52*C1518">
            <sol:typeName>itMapAddressUint</sol:typeName>
            <sol:nameIs>self</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>get</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.contains.L46*C1250">
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.self.data_key_.keyIndex_0.L47*C1355">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.contains.L46*C1250"/>
            <sol:returnText>self.data[key].keyIndex&gt;0</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L46*C1330">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.exists.L46*C1339">
                <sol:typeName>bool</sol:typeName>
                <sol:nameIs>exists</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.key.L46*C1299">
            <sol:typeName>address</sol:typeName>
            <sol:nameIs>key</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.self.L46*C1268">
            <sol:typeName>itMapAddressUint</sol:typeName>
            <sol:nameIs>self</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>contains</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:nameIs>itMaps</sol:nameIs>
  </sol:Library>
  <sol:Contract rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con.ERC20.L62*C1910">
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.approve.L68*C2316">
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L68*C2369">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.ok.L68*C2378">
                <sol:typeName>bool</sol:typeName>
                <sol:nameIs>ok</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.value.L68*C2350">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>value</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.spender.L68*C2333">
            <sol:typeName>address</sol:typeName>
            <sol:nameIs>spender</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>approve</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.transferFrom.L67*C2229">
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L67*C2296">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.ok.L67*C2305">
                <sol:typeName>bool</sol:typeName>
                <sol:nameIs>ok</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.value.L67*C2277">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>value</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.to.L67*C2265">
            <sol:typeName>address</sol:typeName>
            <sol:nameIs>to</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.from.L67*C2251">
            <sol:typeName>address</sol:typeName>
            <sol:nameIs>from</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>transferFrom</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.transfer.L66*C2160">
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L66*C2209">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.ok.L66*C2218">
                <sol:typeName>bool</sol:typeName>
                <sol:nameIs>ok</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.value.L66*C2190">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>value</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.to.L66*C2178">
            <sol:typeName>address</sol:typeName>
            <sol:nameIs>to</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>transfer</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.allowance.L65*C2065">
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L65*C2132">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param._allowance.L65*C2141">
                <sol:typeName>uint</sol:typeName>
                <sol:nameIs>_allowance</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.spender.L65*C2099">
            <sol:typeName>address</sol:typeName>
            <sol:nameIs>spender</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.owner.L65*C2084">
            <sol:typeName>address</sol:typeName>
            <sol:nameIs>owner</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>allowance</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.balanceOf.L64*C1994">
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L64*C2042">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.value.L64*C2051">
                <sol:typeName>uint</sol:typeName>
                <sol:nameIs>value</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.who.L64*C2013">
            <sol:typeName>address</sol:typeName>
            <sol:nameIs>who</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>balanceOf</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.totalSupply.L63*C1928">
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L63*C1967">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.supply.L63*C1976">
                <sol:typeName>uint256</sol:typeName>
                <sol:nameIs>supply</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:nameIs>totalSupply</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:nameIs>ERC20</sol:nameIs>
  </sol:Contract>
  <sol:Contract rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con.IceRockMining.L72*C2540">
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.sendp.L148*C5040">
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasIf>
          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.balances.contains_addr_.L152*C5211">
            <sol:hasIfWrong>
              <sol:IfWrong rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifWrong._.L152*C5211">
                <sol:callFunction>
                  <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.balances.insert.L156*C5305">
                    <sol:before>
                      <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.balances.insert.L153*C5243">
                        <sol:before>
                          <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L152*C5211">
                            <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.balances.insert.L153*C5243"/>
                            <sol:before>
                              <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.balances.contains_addr_.L152*C5211">
                                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.balances.contains_addr_.L152*C5211"/>
                                <sol:hasIfCondition>balances.contains(addr)</sol:hasIfCondition>
                              </sol:IfCondition>
                            </sol:before>
                          </sol:IfRight>
                        </sol:before>
                        <sol:callFunctionArgument>addr,balances.get(addr)+amount</sol:callFunctionArgument>
                        <sol:callFunctionName>insert</sol:callFunctionName>
                        <sol:callFunctionObject>balances</sol:callFunctionObject>
                      </sol:FunctionCall>
                    </sol:before>
                    <sol:callFunctionArgument>addr,amount</sol:callFunctionArgument>
                    <sol:callFunctionName>insert</sol:callFunctionName>
                    <sol:callFunctionObject>balances</sol:callFunctionObject>
                  </sol:FunctionCall>
                </sol:callFunction>
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.balances.contains_addr_.L152*C5211"/>
              </sol:IfWrong>
            </sol:hasIfWrong>
            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L152*C5211"/>
            <sol:before>
              <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L151*C5156">
                <sol:before>
                  <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L150*C5134">
                    <sol:before>
                      <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L149*C5094">
                        <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.sendp.L148*C5040"/>
                        <sol:callFunctionArgument>addr!=IceRockMiningAddress</sol:callFunctionArgument>
                        <sol:callFunctionName>require</sol:callFunctionName>
                      </sol:FunctionCall>
                    </sol:before>
                    <sol:callFunctionArgument>amount&gt;0</sol:callFunctionArgument>
                    <sol:callFunctionName>require</sol:callFunctionName>
                  </sol:FunctionCall>
                </sol:before>
                <sol:callFunctionArgument>balances.get(IceRockMiningAddress)&gt;=amount</sol:callFunctionArgument>
                <sol:callFunctionName>require</sol:callFunctionName>
              </sol:FunctionCall>
            </sol:before>
            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.balances.contains_addr_.L152*C5211"/>
          </sol:FunctionIf>
        </sol:hasIf>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.addr.L148*C5055">
            <sol:typeName>address</sol:typeName>
            <sol:nameIs>addr</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>sendp</sol:nameIs>
        <sol:callFunction>
          <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.Transfer.L159*C5423">
            <sol:before>
              <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.balances.insert.L158*C5340">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.balances.insert.L156*C5305"/>
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.balances.insert.L153*C5243"/>
                <sol:callFunctionArgument>IceRockMiningAddress,balances.get(IceRockMiningAddress)-amount</sol:callFunctionArgument>
                <sol:callFunctionName>insert</sol:callFunctionName>
                <sol:callFunctionObject>balances</sol:callFunctionObject>
              </sol:FunctionCall>
            </sol:before>
            <sol:callFunctionArgument>IceRockMiningAddress,addr,amount</sol:callFunctionArgument>
            <sol:callFunctionName>Transfer</sol:callFunctionName>
          </sol:FunctionCall>
        </sol:callFunction>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L151*C5156"/>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L149*C5094"/>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.balances.insert.L158*C5340"/>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L150*C5134"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.amount.L148*C5069">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>amount</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.bonus.L78*C2781">
        <sol:valueIs>0</sol:valueIs>
        <sol:typeName>uint</sol:typeName>
        <sol:nameIs>bonus</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.approveDividends.L176*C6046">
        <sol:hasFor>
          <sol:FunctionFor rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for.for_uint256i_0i_balances.size__i__1__addresstokenHolder_balances.getKeyByIndex_i_if_balances.get_tokenHolder__0_approvedDividends_tokenHolder__balances.get_tokenHolder__dividendsPerToken_.L178*C6194">
            <sol:conditionStep>i+=1</sol:conditionStep>
            <sol:hasForCondition>
              <sol:ForCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.i_balances.size__.L178*C6194">
                <sol:conditionValue>balances.size()</sol:conditionValue>
                <sol:conditionSymbol>&lt;</sol:conditionSymbol>
              </sol:ForCondition>
            </sol:hasForCondition>
            <sol:conditionVar>i</sol:conditionVar>
            <sol:hasStateVar>
              <sol:stateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.uint256i.L178*C6194">
                <sol:valueIs>0</sol:valueIs>
                <sol:nameIs>i</sol:nameIs>
                <sol:typeName>uint256</sol:typeName>
              </sol:stateVar>
            </sol:hasStateVar>
            <sol:hasIf>
              <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_for_if.balances.get_tokenHolder__0.L180*C6294">
                <sol:hasIfRight>
                  <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if_ifRight._.L180*C6294">
                    <sol:containAssignment>
                      <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.approvedDividends_tokenHolder__balances.get_tokenHolder__dividendsPerToken.L181*C6328">
                        <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if_ifRight._.L180*C6294"/>
                        <sol:assignSymbol>=</sol:assignSymbol>
                        <sol:assignRight>balances.get(tokenHolder)*dividendsPerToken</sol:assignRight>
                        <sol:assignLeft>approvedDividends[tokenHolder]</sol:assignLeft>
                      </sol:Assignment>
                    </sol:containAssignment>
                    <sol:before>
                      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if.balances.get_tokenHolder__0.L180*C6294">
                        <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_for_if.balances.get_tokenHolder__0.L180*C6294"/>
                        <sol:hasIfCondition>balances.get(tokenHolder)&gt;0</sol:hasIfCondition>
                      </sol:IfCondition>
                    </sol:before>
                  </sol:IfRight>
                </sol:hasIfRight>
                <sol:before>
                  <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for_varDeclare.addresstokenHolder.L179*C6244">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for.for_uint256i_0i_balances.size__i__1__addresstokenHolder_balances.getKeyByIndex_i_if_balances.get_tokenHolder__0_approvedDividends_tokenHolder__balances.get_tokenHolder__dividendsPerToken_.L178*C6194"/>
                    <sol:valueIs>balances.getKeyByIndex(i)</sol:valueIs>
                    <sol:nameIs>tokenHolder</sol:nameIs>
                    <sol:typeName>address</sol:typeName>
                  </sol:StateVar>
                </sol:before>
                <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if.balances.get_tokenHolder__0.L180*C6294"/>
              </sol:FunctionIf>
            </sol:hasIf>
            <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for_varDeclare.addresstokenHolder.L179*C6244"/>
            <sol:before>
              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uint256dividendsPerToken.L177*C6120">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.approveDividends.L176*C6046"/>
                <sol:valueIs>totalDividendsAmount*10**18/initialSupply</sol:valueIs>
                <sol:nameIs>dividendsPerToken</sol:nameIs>
                <sol:typeName>uint256</sol:typeName>
              </sol:StateVar>
            </sol:before>
          </sol:FunctionFor>
        </sol:hasFor>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uint256dividendsPerToken.L177*C6120"/>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:hasModifier>onlyOwner</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.totalDividendsAmount.L176*C6073">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>totalDividendsAmount</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>approveDividends</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.setCurrentExchangeRate.L139*C4787">
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.currentUSDExchangeRate_rate.L140*C4850">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.setCurrentExchangeRate.L139*C4787"/>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>rate</sol:assignRight>
            <sol:assignLeft>currentUSDExchangeRate</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:hasModifier>onlyOwner</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.rate.L139*C4820">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>rate</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>setCurrentExchangeRate</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.allowed.L82*C2884">
        <sol:elementTypeName2>mapping(address=&gt;uint256)</sol:elementTypeName2>
        <sol:elementTypeName1>address</sol:elementTypeName1>
        <sol:typeName>mapping</sol:typeName>
        <sol:nameIs>allowed</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.IceRockMining.L135*C4658">
        <sol:callFunction>
          <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.balances.insert.L137*C4729">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.IceRockMiningAddress_msg.sender.L136*C4693">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.IceRockMining.L135*C4658"/>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>msg.sender</sol:assignRight>
                <sol:assignLeft>IceRockMiningAddress</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:callFunctionArgument>IceRockMiningAddress,initialSupply</sol:callFunctionArgument>
            <sol:callFunctionName>insert</sol:callFunctionName>
            <sol:callFunctionObject>balances</sol:callFunctionObject>
          </sol:FunctionCall>
        </sol:callFunction>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.IceRockMiningAddress_msg.sender.L136*C4693"/>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:nameIs>IceRockMining</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.approvedDividendsOf.L191*C6675">
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.approvedDividends_tokenHolder_.L192*C6758">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.approvedDividendsOf.L191*C6675"/>
            <sol:returnText>approvedDividends[tokenHolder]</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L191*C6737">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.uint256.L191*C6746">
                <sol:typeName>uint256</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:hasModifier>view</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.tokenHolder.L191*C6704">
            <sol:typeName>address</sol:typeName>
            <sol:nameIs>tokenHolder</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>approvedDividendsOf</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:nameIs>IceRockMining</sol:nameIs>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.priceUSD.L79*C2798">
        <sol:valueIs>1</sol:valueIs>
        <sol:typeName>uint</sol:typeName>
        <sol:nameIs>priceUSD</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.currentUSDExchangeRate.L77*C2744">
        <sol:valueIs>1340</sol:valueIs>
        <sol:typeName>uint</sol:typeName>
        <sol:nameIs>currentUSDExchangeRate</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.transferAllDividends.L194*C6801">
        <sol:hasFor>
          <sol:FunctionFor rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for.for_uint256i_0i_balances.size__i__1__addresstokenHolder_balances.getKeyByIndex_i_if_approvedDividends_tokenHolder__0__tokenHolder.transfer_approvedDividends_tokenHolder__DividendsTransfered_tokenHolder_approvedDividends_tokenHolder__approvedDividends_tokenHolder__0__.L195*C6852">
            <sol:conditionStep>i+=1</sol:conditionStep>
            <sol:hasForCondition>
              <sol:ForCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.i_balances.size__.L195*C6852">
                <sol:conditionValue>balances.size()</sol:conditionValue>
                <sol:conditionSymbol>&lt;</sol:conditionSymbol>
              </sol:ForCondition>
            </sol:hasForCondition>
            <sol:conditionVar>i</sol:conditionVar>
            <sol:hasStateVar>
              <sol:stateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.uint256i.L195*C6852">
                <sol:valueIs>0</sol:valueIs>
                <sol:nameIs>i</sol:nameIs>
                <sol:typeName>uint256</sol:typeName>
              </sol:stateVar>
            </sol:hasStateVar>
            <sol:hasIf>
              <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_for_if.approvedDividends_tokenHolder__0.L197*C6953">
                <sol:hasIfRight>
                  <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if_ifRight._.L197*C6953">
                    <sol:containAssignment>
                      <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.approvedDividends_tokenHolder__0.L201*C7120">
                        <sol:before>
                          <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.DividendsTransfered.L200*C7052">
                            <sol:before>
                              <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.tokenHolder.transfer.L199*C6997">
                                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if_ifRight._.L197*C6953"/>
                                <sol:callFunctionArgument>approvedDividends[tokenHolder]</sol:callFunctionArgument>
                                <sol:callFunctionName>transfer</sol:callFunctionName>
                                <sol:callFunctionObject>tokenHolder</sol:callFunctionObject>
                              </sol:FunctionCall>
                            </sol:before>
                            <sol:callFunctionArgument>tokenHolder,approvedDividends[tokenHolder]</sol:callFunctionArgument>
                            <sol:callFunctionName>DividendsTransfered</sol:callFunctionName>
                          </sol:FunctionCall>
                        </sol:before>
                        <sol:assignSymbol>=</sol:assignSymbol>
                        <sol:assignRight>0</sol:assignRight>
                        <sol:assignLeft>approvedDividends[tokenHolder]</sol:assignLeft>
                      </sol:Assignment>
                    </sol:containAssignment>
                    <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.DividendsTransfered.L200*C7052"/>
                    <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.tokenHolder.transfer.L199*C6997"/>
                    <sol:before>
                      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if.approvedDividends_tokenHolder__0.L197*C6953">
                        <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_for_if.approvedDividends_tokenHolder__0.L197*C6953"/>
                        <sol:hasIfCondition>approvedDividends[tokenHolder]&gt;0</sol:hasIfCondition>
                      </sol:IfCondition>
                    </sol:before>
                  </sol:IfRight>
                </sol:hasIfRight>
                <sol:before>
                  <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for_varDeclare.addresstokenHolder.L196*C6903">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for.for_uint256i_0i_balances.size__i__1__addresstokenHolder_balances.getKeyByIndex_i_if_approvedDividends_tokenHolder__0__tokenHolder.transfer_approvedDividends_tokenHolder__DividendsTransfered_tokenHolder_approvedDividends_tokenHolder__approvedDividends_tokenHolder__0__.L195*C6852"/>
                    <sol:valueIs>balances.getKeyByIndex(i)</sol:valueIs>
                    <sol:nameIs>tokenHolder</sol:nameIs>
                    <sol:typeName>address</sol:typeName>
                  </sol:StateVar>
                </sol:before>
                <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if.approvedDividends_tokenHolder__0.L197*C6953"/>
              </sol:FunctionIf>
            </sol:hasIf>
            <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for_varDeclare.addresstokenHolder.L196*C6903"/>
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.transferAllDividends.L194*C6801"/>
          </sol:FunctionFor>
        </sol:hasFor>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:hasModifier>onlyOwner</sol:hasModifier>
        <sol:nameIs>transferAllDividends</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.burnUnsold.L184*C6413">
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.true.L189*C6658">
            <sol:before>
              <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.Burned.L188*C6612">
                <sol:before>
                  <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.balances.insert.L187*C6569">
                    <sol:before>
                      <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.initialSupply-_burningAmount.L186*C6536">
                        <sol:before>
                          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintburningAmount.L185*C6478">
                            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.burnUnsold.L184*C6413"/>
                            <sol:valueIs>balances.get(IceRockMiningAddress)</sol:valueIs>
                            <sol:nameIs>burningAmount</sol:nameIs>
                            <sol:typeName>uint</sol:typeName>
                          </sol:StateVar>
                        </sol:before>
                        <sol:assignSymbol>=</sol:assignSymbol>
                        <sol:assignRight>initialSupply-burningAmount</sol:assignRight>
                        <sol:assignLeft>initialSupply</sol:assignLeft>
                      </sol:Assignment>
                    </sol:before>
                    <sol:callFunctionArgument>IceRockMiningAddress,0</sol:callFunctionArgument>
                    <sol:callFunctionName>insert</sol:callFunctionName>
                    <sol:callFunctionObject>balances</sol:callFunctionObject>
                  </sol:FunctionCall>
                </sol:before>
                <sol:callFunctionArgument>IceRockMiningAddress,burningAmount</sol:callFunctionArgument>
                <sol:callFunctionName>Burned</sol:callFunctionName>
              </sol:FunctionCall>
            </sol:before>
            <sol:returnText>true</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.initialSupply-_burningAmount.L186*C6536"/>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L184*C6452">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.success.L184*C6461">
                <sol:typeName>bool</sol:typeName>
                <sol:nameIs>success</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.Burned.L188*C6612"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintburningAmount.L185*C6478"/>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:nameIs>burnUnsold</sol:nameIs>
        <sol:hasModifier>onlyOwner</sol:hasModifier>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.balances.insert.L187*C6569"/>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.IceRockMiningAddress.L80*C2818">
        <sol:typeName>address</sol:typeName>
        <sol:nameIs>IceRockMiningAddress</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.allowance.L97*C3376">
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.allowed_owner__spender_.L98*C3464">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.allowance.L97*C3376"/>
            <sol:returnText>allowed[owner][spender]</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L97*C3443">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.uint256.L97*C3452">
                <sol:typeName>uint256</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.spender.L97*C3410">
            <sol:typeName>address</sol:typeName>
            <sol:nameIs>spender</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.owner.L97*C3395">
            <sol:typeName>address</sol:typeName>
            <sol:nameIs>owner</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>allowance</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.initialSupply.L74*C2617">
        <sol:valueIs>20000000</sol:valueIs>
        <sol:typeName>uint256</sol:typeName>
        <sol:nameIs>initialSupply</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.symbol.L76*C2702">
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:valueIs>"ROCK2"</sol:valueIs>
        <sol:typeName>string</sol:typeName>
        <sol:nameIs>symbol</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.balanceOf.L94*C3257">
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.balances.get_tokenHolder_.L95*C3338">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.balanceOf.L94*C3257"/>
            <sol:returnText>balances.get(tokenHolder)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L94*C3309">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.balance.L94*C3318">
                <sol:typeName>uint256</sol:typeName>
                <sol:nameIs>balance</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:hasModifier>view</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.tokenHolder.L94*C3276">
            <sol:typeName>address</sol:typeName>
            <sol:nameIs>tokenHolder</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>balanceOf</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.send.L145*C4954">
        <sol:callFunction>
          <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.sendp.L146*C5015">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.send.L145*C4954"/>
            <sol:callFunctionArgument>addr,amount</sol:callFunctionArgument>
            <sol:callFunctionName>sendp</sol:callFunctionName>
          </sol:FunctionCall>
        </sol:callFunction>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:hasModifier>onlyOwner</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.amount.L145*C4982">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>amount</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.addr.L145*C4968">
            <sol:typeName>address</sol:typeName>
            <sol:nameIs>addr</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>send</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.transfer.L100*C3500">
        <sol:hasIf>
          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.balances.get_msg.sender___value&amp;&amp;value_0.L101*C3575">
            <sol:hasIfWrong>
              <sol:IfWrong rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if_ifWrong._.L101*C3575">
                <sol:hasReturnValue>
                  <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_if_ifWrong_return.false.L111*C3866">
                    <sol:before>
                      <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.true.L110*C3845">
                        <sol:before>
                          <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.Transfer.L109*C3811">
                            <sol:before>
                              <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.balances.insert.L107*C3779">
                                <sol:before>
                                  <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.balances.insert.L104*C3722">
                                    <sol:before>
                                      <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if_ifRight._.L103*C3692">
                                        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.balances.insert.L104*C3722"/>
                                        <sol:before>
                                          <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if.balances.contains_to_.L103*C3692">
                                            <sol:before>
                                              <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_if_ifRight_if.balances.contains_to_.L103*C3692">
                                                <sol:hasIfWrong>
                                                  <sol:IfWrong rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if_ifWrong._.L103*C3692">
                                                    <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.balances.insert.L107*C3779"/>
                                                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if.balances.contains_to_.L103*C3692"/>
                                                  </sol:IfWrong>
                                                </sol:hasIfWrong>
                                                <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if_ifRight._.L103*C3692"/>
                                                <sol:before>
                                                  <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.balances.insert.L102*C3630">
                                                    <sol:before>
                                                      <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L101*C3575">
                                                        <sol:hasReturnValue rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.true.L110*C3845"/>
                                                        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.Transfer.L109*C3811"/>
                                                        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_if_ifRight_if.balances.contains_to_.L103*C3692"/>
                                                        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.balances.insert.L102*C3630"/>
                                                        <sol:before>
                                                          <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.balances.get_msg.sender___value&amp;&amp;value_0.L101*C3575">
                                                            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.balances.get_msg.sender___value&amp;&amp;value_0.L101*C3575"/>
                                                            <sol:hasIfCondition
                                                            >balances.get(msg.sender)&gt;=value&amp;&amp;value&gt;0</sol:hasIfCondition>
                                                          </sol:IfCondition>
                                                        </sol:before>
                                                      </sol:IfRight>
                                                    </sol:before>
                                                    <sol:callFunctionArgument
                                                    >msg.sender,balances.get(msg.sender)-value</sol:callFunctionArgument>
                                                    <sol:callFunctionName
                                                    >insert</sol:callFunctionName>
                                                    <sol:callFunctionObject
                                                    >balances</sol:callFunctionObject>
                                                  </sol:FunctionCall>
                                                </sol:before>
                                                <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if.balances.contains_to_.L103*C3692"/>
                                              </sol:FunctionIf>
                                            </sol:before>
                                            <sol:hasIfCondition
                                            >balances.contains(to)</sol:hasIfCondition>
                                          </sol:IfCondition>
                                        </sol:before>
                                      </sol:IfRight>
                                    </sol:before>
                                    <sol:callFunctionArgument
                                    >to,balances.get(to)+value</sol:callFunctionArgument>
                                    <sol:callFunctionName>insert</sol:callFunctionName>
                                    <sol:callFunctionObject>balances</sol:callFunctionObject>
                                  </sol:FunctionCall>
                                </sol:before>
                                <sol:callFunctionArgument>to,value</sol:callFunctionArgument>
                                <sol:callFunctionName>insert</sol:callFunctionName>
                                <sol:callFunctionObject>balances</sol:callFunctionObject>
                              </sol:FunctionCall>
                            </sol:before>
                            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.balances.insert.L104*C3722"/>
                            <sol:callFunctionArgument>msg.sender,to,value</sol:callFunctionArgument>
                            <sol:callFunctionName>Transfer</sol:callFunctionName>
                          </sol:FunctionCall>
                        </sol:before>
                        <sol:returnText>true</sol:returnText>
                      </sol:ReturnValue>
                    </sol:before>
                    <sol:returnText>false</sol:returnText>
                  </sol:ReturnValue>
                </sol:hasReturnValue>
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.balances.get_msg.sender___value&amp;&amp;value_0.L101*C3575"/>
              </sol:IfWrong>
            </sol:hasIfWrong>
            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L101*C3575"/>
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.transfer.L100*C3500"/>
            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.balances.get_msg.sender___value&amp;&amp;value_0.L101*C3575"/>
          </sol:FunctionIf>
        </sol:hasIf>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L100*C3549">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.success.L100*C3558">
                <sol:typeName>bool</sol:typeName>
                <sol:nameIs>success</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.value.L100*C3530">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>value</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.to.L100*C3518">
            <sol:typeName>address</sol:typeName>
            <sol:nameIs>to</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>transfer</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:defineModifier>
      <sol:Modifier rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_modifier.onlyOwner.L86*C3096">
        <sol:hasIf>
          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_modifier_if.msg.sender__IceRockMiningAddress.L87*C3118">
            <sol:hasIfRight>
              <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_modifier_if_ifRight._.L87*C3118">
                <sol:before>
                  <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_modifier_if.msg.sender__IceRockMiningAddress.L87*C3118">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_modifier_if.msg.sender__IceRockMiningAddress.L87*C3118"/>
                    <sol:hasIfCondition>msg.sender==IceRockMiningAddress</sol:hasIfCondition>
                  </sol:IfCondition>
                </sol:before>
              </sol:IfRight>
            </sol:hasIfRight>
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_modifier.onlyOwner.L86*C3096"/>
            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_modifier_if.msg.sender__IceRockMiningAddress.L87*C3118"/>
          </sol:FunctionIf>
        </sol:hasIf>
        <sol:nameIs>onlyOwner</sol:nameIs>
      </sol:Modifier>
    </sol:defineModifier>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.withdraw.L205*C7166">
        <sol:callFunction>
          <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.IceRockMiningAddress.transfer.L206*C7216">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.withdraw.L205*C7166"/>
            <sol:callFunctionArgument>amount</sol:callFunctionArgument>
            <sol:callFunctionName>transfer</sol:callFunctionName>
            <sol:callFunctionObject>IceRockMiningAddress</sol:callFunctionObject>
          </sol:FunctionCall>
        </sol:callFunction>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:hasModifier>onlyOwner</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.amount.L205*C7184">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>amount</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>withdraw</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.balances.L81*C2849">
        <sol:typeName>itMaps.itMapAddressUint</sol:typeName>
        <sol:nameIs>balances</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.setBonus.L142*C4885">
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.bonus_value.L143*C4935">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.setBonus.L142*C4885"/>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>value</sol:assignRight>
            <sol:assignLeft>bonus</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:hasModifier>onlyOwner</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.value.L142*C4904">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>value</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>setBonus</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.totalSupply.L91*C3171">
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.initialSupply.L92*C3231">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.totalSupply.L91*C3171"/>
            <sol:returnText>initialSupply</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L91*C3210">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.uint256.L91*C3219">
                <sol:typeName>uint256</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:nameIs>totalSupply</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.approve.L126*C4398">
        <sol:hasIf>
          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if._value!_0_&amp;&amp;_balances.get_msg.sender___value_.L127*C4477">
            <sol:hasIfWrong>
              <sol:IfWrong rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifWrong._.L127*C4477">
                <sol:hasReturnValue>
                  <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifWrong_return.false.L132*C4637">
                    <sol:before>
                      <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.true.L130*C4614">
                        <sol:before>
                          <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.Approval.L129*C4575">
                            <sol:before>
                              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.allowed_msg.sender__spender__value.L128*C4536">
                                <sol:before>
                                  <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L127*C4477">
                                    <sol:hasReturnValue rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.true.L130*C4614"/>
                                    <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.Approval.L129*C4575"/>
                                    <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.allowed_msg.sender__spender__value.L128*C4536"/>
                                    <sol:before>
                                      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if._value!_0_&amp;&amp;_balances.get_msg.sender___value_.L127*C4477">
                                        <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if._value!_0_&amp;&amp;_balances.get_msg.sender___value_.L127*C4477"/>
                                        <sol:hasIfCondition>(value!=0)&amp;&amp;(balances.get(msg.sender)&gt;=value)</sol:hasIfCondition>
                                      </sol:IfCondition>
                                    </sol:before>
                                  </sol:IfRight>
                                </sol:before>
                                <sol:assignSymbol>=</sol:assignSymbol>
                                <sol:assignRight>value</sol:assignRight>
                                <sol:assignLeft>allowed[msg.sender][spender]</sol:assignLeft>
                              </sol:Assignment>
                            </sol:before>
                            <sol:callFunctionArgument>msg.sender,spender,value</sol:callFunctionArgument>
                            <sol:callFunctionName>Approval</sol:callFunctionName>
                          </sol:FunctionCall>
                        </sol:before>
                        <sol:returnText>true</sol:returnText>
                      </sol:ReturnValue>
                    </sol:before>
                    <sol:returnText>false</sol:returnText>
                  </sol:ReturnValue>
                </sol:hasReturnValue>
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if._value!_0_&amp;&amp;_balances.get_msg.sender___value_.L127*C4477"/>
              </sol:IfWrong>
            </sol:hasIfWrong>
            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L127*C4477"/>
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.approve.L126*C4398"/>
            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if._value!_0_&amp;&amp;_balances.get_msg.sender___value_.L127*C4477"/>
          </sol:FunctionIf>
        </sol:hasIf>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L126*C4451">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.success.L126*C4460">
                <sol:typeName>bool</sol:typeName>
                <sol:nameIs>success</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.value.L126*C4432">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>value</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.spender.L126*C4415">
            <sol:typeName>address</sol:typeName>
            <sol:nameIs>spender</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>approve</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.approvedDividends.L83*C2944">
        <sol:elementTypeName2>uint256</sol:elementTypeName2>
        <sol:elementTypeName1>address</sol:elementTypeName1>
        <sol:typeName>mapping</sol:typeName>
        <sol:nameIs>approvedDividends</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.transferFrom.L113*C3884">
        <sol:hasIf>
          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.balances.get_from___value&amp;&amp;allowed_from__msg.sender___value&amp;&amp;value_0.L114*C3980">
            <sol:hasIfWrong>
              <sol:IfWrong rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if_ifWrong._.L114*C3980">
                <sol:hasReturnValue>
                  <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_if_ifWrong_return.false.L124*C4380">
                    <sol:before>
                      <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.true.L122*C4358">
                        <sol:before>
                          <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.Transfer.L121*C4330">
                            <sol:before>
                              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.allowed_from__msg.sender__allowed_from__msg.sender_-value.L120*C4266">
                                <sol:before>
                                  <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.balances.insert.L119*C4214">
                                    <sol:before>
                                      <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.balances.insert.L118*C4176">
                                        <sol:before>
                                          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.amountToInsert_amountToInsert_balances.get_to_.L117*C4125">
                                            <sol:before>
                                              <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if_ifRight._.L116*C4097">
                                                <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.amountToInsert_amountToInsert_balances.get_to_.L117*C4125"/>
                                                <sol:before>
                                                  <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if.balances.contains_to_.L116*C4097">
                                                    <sol:before>
                                                      <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_if_ifRight_if.balances.contains_to_.L116*C4097">
                                                        <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if_ifRight._.L116*C4097"/>
                                                        <sol:before>
                                                          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_varDeclare.uintamountToInsert.L115*C4067">
                                                            <sol:before>
                                                              <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L114*C3980">
    <sol:hasReturnValue rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.true.L122*C4358"/>
    <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.Transfer.L121*C4330"/>
    <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.allowed_from__msg.sender__allowed_from__msg.sender_-value.L120*C4266"/>
    <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.balances.insert.L119*C4214"/>
    <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.balances.insert.L118*C4176"/>
    <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_if_ifRight_if.balances.contains_to_.L116*C4097"/>
    <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_varDeclare.uintamountToInsert.L115*C4067"/>
    <sol:before>
      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.balances.get_from___value&amp;&amp;allowed_from__msg.sender___value&amp;&amp;value_0.L114*C3980">
        <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.balances.get_from___value&amp;&amp;allowed_from__msg.sender___value&amp;&amp;value_0.L114*C3980"/>
        <sol:hasIfCondition>balances.get(from)&gt;=value&amp;&amp;allowed[from][msg.sender]&gt;=value&amp;&amp;value&gt;0</sol:hasIfCondition>
      </sol:IfCondition>
    </sol:before>                                             </sol:IfRight>
                                                            </sol:before>
                                                            <sol:valueIs
                                                            >value</sol:valueIs>
                                                            <sol:nameIs
                                                            >amountToInsert</sol:nameIs>
                                                            <sol:typeName
                                                            >uint</sol:typeName>
                                                          </sol:StateVar>
                                                        </sol:before>
                                                        <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if.balances.contains_to_.L116*C4097"/>
                                                      </sol:FunctionIf>
                                                    </sol:before>
                                                    <sol:hasIfCondition
                                                    >balances.contains(to)</sol:hasIfCondition>
                                                  </sol:IfCondition>
                                                </sol:before>
                                              </sol:IfRight>
                                            </sol:before>
                                            <sol:assignSymbol
                                            >=</sol:assignSymbol>
                                            <sol:assignRight>amountToInsert+balances.get(to)</sol:assignRight>
                                            <sol:assignLeft>amountToInsert</sol:assignLeft>
                                          </sol:Assignment>
                                        </sol:before>
                                        <sol:callFunctionArgument
                                        >to,amountToInsert</sol:callFunctionArgument>
                                        <sol:callFunctionName
                                        >insert</sol:callFunctionName>
                                        <sol:callFunctionObject
                                        >balances</sol:callFunctionObject>
                                      </sol:FunctionCall>
                                    </sol:before>
                                    <sol:callFunctionArgument
                                    >from,balances.get(from)-value</sol:callFunctionArgument>
                                    <sol:callFunctionName>insert</sol:callFunctionName>
                                    <sol:callFunctionObject>balances</sol:callFunctionObject>
                                  </sol:FunctionCall>
                                </sol:before>
                                <sol:assignSymbol>=</sol:assignSymbol>
                                <sol:assignRight>allowed[from][msg.sender]-value</sol:assignRight>
                                <sol:assignLeft>allowed[from][msg.sender]</sol:assignLeft>
                              </sol:Assignment>
                            </sol:before>
                            <sol:callFunctionArgument>from,to,value</sol:callFunctionArgument>
                            <sol:callFunctionName>Transfer</sol:callFunctionName>
                          </sol:FunctionCall>
                        </sol:before>
                        <sol:returnText>true</sol:returnText>
                      </sol:ReturnValue>
                    </sol:before>
                    <sol:returnText>false</sol:returnText>
                  </sol:ReturnValue>
                </sol:hasReturnValue>
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.balances.get_from___value&amp;&amp;allowed_from__msg.sender___value&amp;&amp;value_0.L114*C3980"/>
              </sol:IfWrong>
            </sol:hasIfWrong>
            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L114*C3980"/>
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.transferFrom.L113*C3884"/>
            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.balances.get_from___value&amp;&amp;allowed_from__msg.sender___value&amp;&amp;value_0.L114*C3980"/>
          </sol:FunctionIf>
        </sol:hasIf>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L113*C3954">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.success.L113*C3963">
                <sol:typeName>bool</sol:typeName>
                <sol:nameIs>success</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.value.L113*C3932">
            <sol:typeName>uint256</sol:typeName>
            <sol:nameIs>value</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.to.L113*C3920">
            <sol:typeName>address</sol:typeName>
            <sol:nameIs>to</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.from.L113*C3906">
            <sol:typeName>address</sol:typeName>
            <sol:nameIs>from</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>transferFrom</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.fallback.L161*C5473">
        <sol:hasIf>
          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.balances.get_IceRockMiningAddress___valueToPass.L165*C5673">
            <sol:hasIfRight>
              <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L165*C5673">
                <sol:callFunction>
                  <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.Transfer.L173*C5982">
                    <sol:before>
                      <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.balances.insert.L172*C5894">
                        <sol:before>
                          <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.balances.insert.L170*C5848">
                            <sol:before>
                              <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.balances.insert.L167*C5769">
                                <sol:before>
                                  <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if_ifRight._.L166*C5731">
                                    <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.balances.insert.L167*C5769"/>
                                    <sol:before>
                                      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if.balances.contains_msg.sender_.L166*C5731">
                                        <sol:before>
                                          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_if_ifRight_if.balances.contains_msg.sender_.L166*C5731">
                                            <sol:hasIfWrong>
                                              <sol:IfWrong rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if_ifWrong._.L166*C5731">
                                                <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.balances.insert.L170*C5848"/>
                                                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if.balances.contains_msg.sender_.L166*C5731"/>
                                              </sol:IfWrong>
                                            </sol:hasIfWrong>
                                            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if_ifRight._.L166*C5731"/>
                                            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L165*C5673"/>
                                            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if.balances.contains_msg.sender_.L166*C5731"/>
                                          </sol:FunctionIf>
                                        </sol:before>
                                        <sol:hasIfCondition>balances.contains(msg.sender)</sol:hasIfCondition>
                                      </sol:IfCondition>
                                    </sol:before>
                                  </sol:IfRight>
                                </sol:before>
                                <sol:callFunctionArgument>msg.sender,balances.get(msg.sender)+valueToPass</sol:callFunctionArgument>
                                <sol:callFunctionName>insert</sol:callFunctionName>
                                <sol:callFunctionObject>balances</sol:callFunctionObject>
                              </sol:FunctionCall>
                            </sol:before>
                            <sol:callFunctionArgument>msg.sender,valueToPass</sol:callFunctionArgument>
                            <sol:callFunctionName>insert</sol:callFunctionName>
                            <sol:callFunctionObject>balances</sol:callFunctionObject>
                          </sol:FunctionCall>
                        </sol:before>
                        <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.balances.insert.L167*C5769"/>
                        <sol:callFunctionArgument>IceRockMiningAddress,balances.get(IceRockMiningAddress)-valueToPass</sol:callFunctionArgument>
                        <sol:callFunctionName>insert</sol:callFunctionName>
                        <sol:callFunctionObject>balances</sol:callFunctionObject>
                      </sol:FunctionCall>
                    </sol:before>
                    <sol:callFunctionArgument>IceRockMiningAddress,msg.sender,valueToPass</sol:callFunctionArgument>
                    <sol:callFunctionName>Transfer</sol:callFunctionName>
                  </sol:FunctionCall>
                </sol:callFunction>
                <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.balances.insert.L172*C5894"/>
                <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_if_ifRight_if.balances.contains_msg.sender_.L166*C5731"/>
                <sol:before>
                  <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.balances.get_IceRockMiningAddress___valueToPass.L165*C5673">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.balances.get_IceRockMiningAddress___valueToPass.L165*C5673"/>
                    <sol:hasIfCondition>balances.get(IceRockMiningAddress)&gt;=valueToPass</sol:hasIfCondition>
                  </sol:IfCondition>
                </sol:before>
              </sol:IfRight>
            </sol:hasIfRight>
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.valueToPass__valueToPass__100_bonus___100.L164*C5623">
                <sol:before>
                  <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintvalueToPass.L163*C5573">
                    <sol:before>
                      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintamountInUSDollars.L162*C5502">
                        <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.fallback.L161*C5473"/>
                        <sol:valueIs>msg.value*currentUSDExchangeRate/10**18</sol:valueIs>
                        <sol:nameIs>amountInUSDollars</sol:nameIs>
                        <sol:typeName>uint</sol:typeName>
                      </sol:StateVar>
                    </sol:before>
                    <sol:valueIs>amountInUSDollars/priceUSD</sol:valueIs>
                    <sol:nameIs>valueToPass</sol:nameIs>
                    <sol:typeName>uint</sol:typeName>
                  </sol:StateVar>
                </sol:before>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>(valueToPass*(100+bonus))/100</sol:assignRight>
                <sol:assignLeft>valueToPass</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.balances.get_IceRockMiningAddress___valueToPass.L165*C5673"/>
          </sol:FunctionIf>
        </sol:hasIf>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.valueToPass__valueToPass__100_bonus___100.L164*C5623"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintvalueToPass.L163*C5573"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintamountInUSDollars.L162*C5502"/>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:hasModifier>payable</sol:hasModifier>
        <sol:nameIs>fallback</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.name.L75*C2652">
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:valueIs>"ICE ROCK MINING"</sol:valueIs>
        <sol:typeName>string</sol:typeName>
        <sol:nameIs>name</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:inherit>ERC20</sol:inherit>
  </sol:Contract>
</rdf:RDF>
