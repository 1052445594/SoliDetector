<rdf:RDF
    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
    xmlns:owl="http://www.w3.org/2002/07/owl#"
    xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
    xmlns:sol="http://www.hty.group/tf/ontologies/2020/07/Solildity#"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema#">
  <owl:Ontology rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity"/>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#FunctionFor">
    <rdfs:subClassOf>
      <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#Function"/>
    </rdfs:subClassOf>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#Function">
    <owl:deprecated rdf:parseType="Resource">
    </owl:deprecated>
    <rdfs:subClassOf>
      <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#Contract"/>
    </rdfs:subClassOf>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#ForCondition">
    <rdfs:subClassOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#FunctionFor"/>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#Param">
    <rdfs:subClassOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#Function"/>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#VariableOperation">
    <rdfs:subClassOf>
      <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#Expression"/>
    </rdfs:subClassOf>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#IfCondition">
    <rdfs:subClassOf>
      <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#FunctionIf"/>
    </rdfs:subClassOf>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#StateVar">
    <rdfs:subClassOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#Contract"/>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#Constructor">
    <rdfs:subClassOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#Contract"/>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#Modifier">
    <rdfs:subClassOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#Contract"/>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#Struct">
    <rdfs:subClassOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#Contract"/>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#Expression">
    <rdfs:subClassOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#Contract"/>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#IfRight">
    <rdfs:subClassOf>
      <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#FunctionIf"/>
    </rdfs:subClassOf>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#FunctionIf">
    <rdfs:subClassOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#Function"/>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#FunctionCall">
    <rdfs:subClassOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#Expression"/>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#Assignment">
    <rdfs:subClassOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#Expression"/>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#Library"/>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#ForContent">
    <rdfs:subClassOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#FunctionFor"/>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#IfWrong">
    <rdfs:subClassOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#FunctionIf"/>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#Interface"/>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#ReturnValue">
    <rdfs:subClassOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#Function"/>
  </owl:Class>
  <owl:Class rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#ReturnClaim">
    <rdfs:subClassOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#Function"/>
  </owl:Class>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#containAssignment"/>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#callFunction"/>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasIfCondition"/>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasStateVar"/>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasParam"/>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasIfWrong">
    <rdfs:subPropertyOf rdf:resource="http://www.w3.org/2002/07/owl#topObjectProperty"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#defineConstructor"/>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#after"/>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasForConditionVar">
    <rdfs:subPropertyOf>
      <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasFor"/>
    </rdfs:subPropertyOf>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasForConditionStep">
    <rdfs:subPropertyOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasFor"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasReturnClaim"/>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasReturnValue"/>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasIfRight">
    <rdfs:subPropertyOf rdf:resource="http://www.w3.org/2002/07/owl#topObjectProperty"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#before">
    <rdfs:subPropertyOf rdf:resource="http://www.w3.org/2002/07/owl#topObjectProperty"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#operateVarible"/>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasFunction"/>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#defineModifier"/>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasForContent">
    <rdfs:subPropertyOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasFor"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasForCondition">
    <rdfs:subPropertyOf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasFor"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasIf"/>
  <owl:ObjectProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasStruct"/>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#assignLeft">
    <rdfs:subPropertyOf rdf:resource="http://www.w3.org/2002/07/owl#topDataProperty"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#conditionValue">
    <rdfs:subPropertyOf rdf:resource="http://www.w3.org/2002/07/owl#topDataProperty"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#storageLocate"/>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#hasModifier"/>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#callFunctionObject"/>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#conditionVar"/>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#pragmaValue">
    <rdfs:subPropertyOf rdf:resource="http://www.w3.org/2002/07/owl#topDataProperty"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#assignSymbol"/>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#assignRight"/>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#returnText"/>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#conditionSymbol"/>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#opSymbol">
    <rdfs:subPropertyOf rdf:resource="http://www.w3.org/2002/07/owl#topDataProperty"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#pragmaName">
    <rdfs:subPropertyOf rdf:resource="http://www.w3.org/2002/07/owl#topDataProperty"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#conditionStep"/>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#callFunctionName"/>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#typeName"/>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#valueIs"/>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#opVarible">
    <rdfs:subPropertyOf rdf:resource="http://www.w3.org/2002/07/owl#topDataProperty"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#callFunctionArgument"/>
  <owl:DatatypeProperty rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#nameIs"/>
  <sol:Contract rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con.nbagame.L919*C38245">
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.buyContract.L1199*C49506">
        <sol:callFunction>
          <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.ContractPurchased.L1232*C50784">
            <sol:before>
              <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.creator.transfer.L1230*C50737">
                <sol:before>
                  <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.oldOwner.transfer.L1229*C50700">
                    <sol:before>
                      <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.currentOwner_newOwner.L1226*C50615">
                        <sol:before>
                          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.contractPrice_SafeMath.div_SafeMath.mul_contractPrice_113__94_.L1222*C50511">
                            <sol:before>
                              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.contractPrice_SafeMath.div_SafeMath.mul_contractPrice_122__94_.L1219*C50377">
                                <sol:before>
                                  <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if_ifRight._.L1217*C50282">
                                    <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.contractPrice_SafeMath.div_SafeMath.mul_contractPrice_122__94_.L1219*C50377"/>
                                    <sol:before>
                                      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if.contractPrice_secondStepLimit.L1217*C50282">
                                        <sol:before>
                                          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_if_ifWrong_if.contractPrice_secondStepLimit.L1217*C50282">
                                            <sol:hasIfWrong>
                                              <sol:IfWrong rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if_ifWrong._.L1217*C50282">
                                                <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.contractPrice_SafeMath.div_SafeMath.mul_contractPrice_113__94_.L1222*C50511"/>
                                                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if.contractPrice_secondStepLimit.L1217*C50282"/>
                                              </sol:IfWrong>
                                            </sol:hasIfWrong>
                                            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if_ifRight._.L1217*C50282"/>
                                            <sol:before>
                                              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.contractPrice_SafeMath.div_SafeMath.mul_contractPrice_132__94_.L1216*C50205">
                                                <sol:before>
                                                  <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L1214*C50112">
                                                    <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.contractPrice_SafeMath.div_SafeMath.mul_contractPrice_132__94_.L1216*C50205"/>
                                                    <sol:before>
                                                      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.contractPrice_firstStepLimit.L1214*C50112">
                                                        <sol:before>
                                                          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.contractPrice_firstStepLimit.L1214*C50112">
                                                            <sol:hasIfWrong>
                                                              <sol:IfWrong rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifWrong._.L1214*C50112">
    <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_if_ifWrong_if.contractPrice_secondStepLimit.L1217*C50282"/>
    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.contractPrice_firstStepLimit.L1214*C50112"/>
                                                              </sol:IfWrong>
                                                            </sol:hasIfWrong>
                                                            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L1214*C50112"/>
                                                            <sol:before>
                                                              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintcreatorCommissionValue.L1211*C49961">
    <sol:before>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintpurchaseExcess.L1210*C49891">
        <sol:before>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintpayment.L1209*C49816">
            <sol:before>
              <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L1206*C49726">
                <sol:before>
                  <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L1205*C49687">
                    <sol:before>
                      <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L1204*C49649">
                        <sol:before>
                          <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L1203*C49616">
                            <sol:before>
                              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.addressnewOwner.L1201*C49581">
                                <sol:before>
                                  <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.addressoldOwner.L1200*C49547">
                                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.buyContract.L1199*C49506"/>
                                    <sol:valueIs>currentOwner</sol:valueIs>
                                    <sol:nameIs>oldOwner</sol:nameIs>
                                    <sol:typeName>address</sol:typeName>
                                  </sol:StateVar>
                                </sol:before>
                                <sol:valueIs>msg.sender</sol:valueIs>
                                <sol:nameIs>newOwner</sol:nameIs>
                                <sol:typeName>address</sol:typeName>
                              </sol:StateVar>
                            </sol:before>
                            <sol:callFunctionArgument>newOwner!=oldOwner</sol:callFunctionArgument>
                            <sol:callFunctionName>require</sol:callFunctionName>
                          </sol:FunctionCall>
                        </sol:before>
                        <sol:callFunctionArgument>_addressNotNull(newOwner)</sol:callFunctionArgument>
                        <sol:callFunctionName>require</sol:callFunctionName>
                      </sol:FunctionCall>
                    </sol:before>
                    <sol:callFunctionArgument>msg.value&gt;=contractPrice</sol:callFunctionArgument>
                    <sol:callFunctionName>require</sol:callFunctionName>
                  </sol:FunctionCall>
                </sol:before>
                <sol:callFunctionArgument>now&lt;BETTING_CLOSES</sol:callFunctionArgument>
                <sol:callFunctionName>require</sol:callFunctionName>
              </sol:FunctionCall>
            </sol:before>
            <sol:valueIs>uint(SafeMath.div(SafeMath.mul(contractPrice,94),100))</sol:valueIs>
            <sol:nameIs>payment</sol:nameIs>
            <sol:typeName>uint</sol:typeName>
          </sol:StateVar>
        </sol:before>
        <sol:valueIs>uint(SafeMath.sub(msg.value,contractPrice))</sol:valueIs>
        <sol:nameIs>purchaseExcess</sol:nameIs>
        <sol:typeName>uint</sol:typeName>
      </sol:StateVar>
    </sol:before>
    <sol:valueIs>uint(SafeMath.sub(contractPrice,payment))</sol:valueIs>
    <sol:nameIs>creatorCommissionValue</sol:nameIs>
    <sol:typeName>uint</sol:typeName>                         </sol:StateVar>
                                                            </sol:before>
                                                            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.contractPrice_firstStepLimit.L1214*C50112"/>
                                                          </sol:FunctionIf>
                                                        </sol:before>
                                                        <sol:hasIfCondition
                                                        >contractPrice&lt;firstStepLimit</sol:hasIfCondition>
                                                      </sol:IfCondition>
                                                    </sol:before>
                                                  </sol:IfRight>
                                                </sol:before>
                                                <sol:assignSymbol
                                                >=</sol:assignSymbol>
                                                <sol:assignRight
                                                >SafeMath.div(SafeMath.mul(contractPrice,132),94)</sol:assignRight>
                                                <sol:assignLeft
                                                >contractPrice</sol:assignLeft>
                                              </sol:Assignment>
                                            </sol:before>
                                            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if.contractPrice_secondStepLimit.L1217*C50282"/>
                                          </sol:FunctionIf>
                                        </sol:before>
                                        <sol:hasIfCondition>contractPrice&lt;secondStepLimit</sol:hasIfCondition>
                                      </sol:IfCondition>
                                    </sol:before>
                                  </sol:IfRight>
                                </sol:before>
                                <sol:assignSymbol>=</sol:assignSymbol>
                                <sol:assignRight>SafeMath.div(SafeMath.mul(contractPrice,122),94)</sol:assignRight>
                                <sol:assignLeft>contractPrice</sol:assignLeft>
                              </sol:Assignment>
                            </sol:before>
                            <sol:assignSymbol>=</sol:assignSymbol>
                            <sol:assignRight>SafeMath.div(SafeMath.mul(contractPrice,113),94)</sol:assignRight>
                            <sol:assignLeft>contractPrice</sol:assignLeft>
                          </sol:Assignment>
                        </sol:before>
                        <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.contractPrice_SafeMath.div_SafeMath.mul_contractPrice_122__94_.L1219*C50377"/>
                        <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.contractPrice_SafeMath.div_SafeMath.mul_contractPrice_132__94_.L1216*C50205"/>
                        <sol:assignSymbol>=</sol:assignSymbol>
                        <sol:assignRight>newOwner</sol:assignRight>
                        <sol:assignLeft>currentOwner</sol:assignLeft>
                      </sol:Assignment>
                    </sol:before>
                    <sol:callFunctionArgument>payment</sol:callFunctionArgument>
                    <sol:callFunctionName>transfer</sol:callFunctionName>
                    <sol:callFunctionObject>oldOwner</sol:callFunctionObject>
                  </sol:FunctionCall>
                </sol:before>
                <sol:callFunctionArgument>creatorCommissionValue</sol:callFunctionArgument>
                <sol:callFunctionName>transfer</sol:callFunctionName>
                <sol:callFunctionObject>creator</sol:callFunctionObject>
              </sol:FunctionCall>
            </sol:before>
            <sol:callFunctionArgument></sol:callFunctionArgument>
            <sol:callFunctionName>ContractPurchased</sol:callFunctionName>
          </sol:FunctionCall>
        </sol:callFunction>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.creator.transfer.L1230*C50737"/>
        <sol:hasModifier>payable</sol:hasModifier>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.addressoldOwner.L1200*C49547"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintpurchaseExcess.L1210*C49891"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.addressnewOwner.L1201*C49581"/>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L1206*C49726"/>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L1204*C49649"/>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L1205*C49687"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintpayment.L1209*C49816"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintcreatorCommissionValue.L1211*C49961"/>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.contractPrice_firstStepLimit.L1214*C50112"/>
        <sol:nameIs>buyContract</sol:nameIs>
        <sol:callFunction>
          <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.msg.sender.transfer.L1234*C50841">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.ContractPurchased.L1232*C50784"/>
            <sol:callFunctionArgument>purchaseExcess</sol:callFunctionArgument>
            <sol:callFunctionName>transfer</sol:callFunctionName>
            <sol:callFunctionObject>msg.sender</sol:callFunctionObject>
          </sol:FunctionCall>
        </sol:callFunction>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L1203*C49616"/>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.oldOwner.transfer.L1229*C50700"/>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.currentOwner_newOwner.L1226*C50615"/>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.numberOfBets.L955*C40221">
        <sol:hasModifier>public</sol:hasModifier>
        <sol:typeName>uint</sol:typeName>
        <sol:nameIs>numberOfBets</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.releaseBets.L1049*C43313">
        <sol:hasFor>
          <sol:FunctionFor rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for.for_uintk_0k_bettors.lengthk____uinttotalBet_SafeMath.add_bettorInfo_bettors_k__.amountsBet_0__bettorInfo_bettors_k__.amountsBet_1__bettors_k_.transfer_SafeMath.mul_totalBet_SafeMath.div_storedBalance_totalBetAmount____.L1051*C43383">
            <sol:conditionStep>k++</sol:conditionStep>
            <sol:hasForCondition>
              <sol:ForCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.k_bettors.length.L1051*C43383">
                <sol:conditionValue>bettors.length</sol:conditionValue>
                <sol:conditionSymbol>&lt;</sol:conditionSymbol>
              </sol:ForCondition>
            </sol:hasForCondition>
            <sol:conditionVar>k</sol:conditionVar>
            <sol:hasStateVar>
              <sol:stateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.uintk.L1051*C43383">
                <sol:valueIs>0</sol:valueIs>
                <sol:nameIs>k</sol:nameIs>
                <sol:typeName>uint</sol:typeName>
              </sol:stateVar>
            </sol:hasStateVar>
            <sol:callFunction>
              <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.bettors_k_.transfer.L1053*C43535">
                <sol:before>
                  <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for_varDeclare.uinttotalBet.L1052*C43428">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for.for_uintk_0k_bettors.lengthk____uinttotalBet_SafeMath.add_bettorInfo_bettors_k__.amountsBet_0__bettorInfo_bettors_k__.amountsBet_1__bettors_k_.transfer_SafeMath.mul_totalBet_SafeMath.div_storedBalance_totalBetAmount____.L1051*C43383"/>
                    <sol:valueIs>SafeMath.add(bettorInfo[bettors[k]].amountsBet[0],bettorInfo[bettors[k]].amountsBet[1])</sol:valueIs>
                    <sol:nameIs>totalBet</sol:nameIs>
                    <sol:typeName>uint</sol:typeName>
                  </sol:StateVar>
                </sol:before>
                <sol:callFunctionArgument>SafeMath.mul(totalBet,SafeMath.div(storedBalance,totalBetAmount))</sol:callFunctionArgument>
                <sol:callFunctionName>transfer</sol:callFunctionName>
                <sol:callFunctionObject>bettors[k]</sol:callFunctionObject>
              </sol:FunctionCall>
            </sol:callFunction>
            <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for_varDeclare.uinttotalBet.L1052*C43428"/>
            <sol:before>
              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintstoredBalance.L1050*C43347">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.releaseBets.L1049*C43313"/>
                <sol:valueIs>this.balance</sol:valueIs>
                <sol:nameIs>storedBalance</sol:nameIs>
                <sol:typeName>uint</sol:typeName>
              </sol:StateVar>
            </sol:before>
          </sol:FunctionFor>
        </sol:hasFor>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintstoredBalance.L1050*C43347"/>
        <sol:hasModifier>private</sol:hasModifier>
        <sol:nameIs>releaseBets</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.pingOracle.L1010*C41952">
        <sol:callFunction>
          <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.oraclize_query.L1012*C42052">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.pingOracle.L1010*C41952"/>
            <sol:callFunctionArgument>pingDelay,"WolframAlpha","Cavaliers vs 76ers March 1, 2018 Winner"</sol:callFunctionArgument>
            <sol:callFunctionName>oraclize_query</sol:callFunctionName>
          </sol:FunctionCall>
        </sol:callFunction>
        <sol:hasModifier>private</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.pingDelay.L1010*C41972">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>pingDelay</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>pingOracle</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.BETTING_OPENS.L933*C39136">
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:valueIs>1519599600</sol:valueIs>
        <sol:typeName>uint</sol:typeName>
        <sol:nameIs>BETTING_OPENS</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.getUserBets.L1045*C43111">
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.bettorInfo_msg.sender_.amountsBet.L1046*C43182">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.getUserBets.L1045*C43111"/>
            <sol:returnText>bettorInfo[msg.sender].amountsBet</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L1045*C43150">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.uint[NUM_TEAMS].L1045*C43158">
                <sol:typeName>uint[NUM_TEAMS]</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:nameIs>getUserBets</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.STAGE_ONE_BET_LIMIT.L939*C39644">
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:valueIs>0.2ether</sol:valueIs>
        <sol:typeName>uint</sol:typeName>
        <sol:nameIs>STAGE_ONE_BET_LIMIT</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:defineModifier>
      <sol:Modifier rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_modifier.bettingIsClosed.L978*C41024">
        <sol:hasIf>
          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_modifier_if.now_BETTING_CLOSES.L979*C41054">
            <sol:hasIfRight>
              <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_modifier_if_ifRight._.L979*C41054">
                <sol:before>
                  <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_modifier_if.now_BETTING_CLOSES.L979*C41054">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_modifier_if.now_BETTING_CLOSES.L979*C41054"/>
                    <sol:hasIfCondition>now&gt;BETTING_CLOSES</sol:hasIfCondition>
                  </sol:IfCondition>
                </sol:before>
              </sol:IfRight>
            </sol:hasIfRight>
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_modifier.bettingIsClosed.L978*C41024"/>
            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_modifier_if.now_BETTING_CLOSES.L979*C41054"/>
          </sol:FunctionIf>
        </sol:hasIf>
        <sol:nameIs>bettingIsClosed</sol:nameIs>
      </sol:Modifier>
    </sol:defineModifier>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.__callback.L1016*C42198">
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.result.L1016*C42235">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>result</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.queryId.L1016*C42218">
            <sol:typeName>bytes32</sol:typeName>
            <sol:nameIs>queryId</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:callFunction>
          <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L1020*C42343">
            <sol:before>
              <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L1019*C42307">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.__callback.L1016*C42198"/>
                <sol:callFunctionArgument>payoutCompleted==false</sol:callFunctionArgument>
                <sol:callFunctionName>require</sol:callFunctionName>
              </sol:FunctionCall>
            </sol:before>
            <sol:callFunctionArgument>msg.sender==oraclize_cbAddress()</sol:callFunctionArgument>
            <sol:callFunctionName>require</sol:callFunctionName>
          </sol:FunctionCall>
        </sol:callFunction>
        <sol:hasIf>
          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.keccak256_TEAM_NAMES_0____keccak256_result_.L1026*C42506">
            <sol:hasIfWrong>
              <sol:IfWrong rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifWrong._.L1026*C42506">
                <sol:hasIf>
                  <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_if_ifWrong_if.keccak256_TEAM_NAMES_1____keccak256_result_.L1029*C42597">
                    <sol:hasIfRight>
                      <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if_ifRight._.L1029*C42597">
                        <sol:containAssignment>
                          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.winningTeam_TeamType_1_.L1030*C42651">
                            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if_ifRight._.L1029*C42597"/>
                            <sol:assignSymbol>=</sol:assignSymbol>
                            <sol:assignRight>TeamType(1)</sol:assignRight>
                            <sol:assignLeft>winningTeam</sol:assignLeft>
                          </sol:Assignment>
                        </sol:containAssignment>
                        <sol:before>
                          <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if.keccak256_TEAM_NAMES_1____keccak256_result_.L1029*C42597">
                            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_if_ifWrong_if.keccak256_TEAM_NAMES_1____keccak256_result_.L1029*C42597"/>
                            <sol:hasIfCondition>keccak256(TEAM_NAMES[1])==keccak256(result)</sol:hasIfCondition>
                          </sol:IfCondition>
                        </sol:before>
                      </sol:IfRight>
                    </sol:hasIfRight>
                    <sol:before>
                      <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.winningTeam_TeamType_0_.L1027*C42561">
                        <sol:before>
                          <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L1026*C42506">
                            <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.winningTeam_TeamType_0_.L1027*C42561"/>
                            <sol:before>
                              <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.keccak256_TEAM_NAMES_0____keccak256_result_.L1026*C42506">
                                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.keccak256_TEAM_NAMES_0____keccak256_result_.L1026*C42506"/>
                                <sol:hasIfCondition>keccak256(TEAM_NAMES[0])==keccak256(result)</sol:hasIfCondition>
                              </sol:IfCondition>
                            </sol:before>
                          </sol:IfRight>
                        </sol:before>
                        <sol:assignSymbol>=</sol:assignSymbol>
                        <sol:assignRight>TeamType(0)</sol:assignRight>
                        <sol:assignLeft>winningTeam</sol:assignLeft>
                      </sol:Assignment>
                    </sol:before>
                    <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if.keccak256_TEAM_NAMES_1____keccak256_result_.L1029*C42597"/>
                  </sol:FunctionIf>
                </sol:hasIf>
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.keccak256_TEAM_NAMES_0____keccak256_result_.L1026*C42506"/>
              </sol:IfWrong>
            </sol:hasIfWrong>
            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L1026*C42506"/>
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L1020*C42343"/>
            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.keccak256_TEAM_NAMES_0____keccak256_result_.L1026*C42506"/>
          </sol:FunctionIf>
        </sol:hasIf>
        <sol:callFunction>
          <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.performPayout.L1042*C43038">
            <sol:before>
              <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.pingOracle_PAYOUT_ATTEMPT_INTERVAL_.L1039*C42987">
                <sol:before>
                  <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if_ifRight_return.releaseBets__.L1038*C42964">
                    <sol:before>
                      <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if_ifRight._.L1037*C42934">
                        <sol:hasReturnValue rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if_ifRight_return.releaseBets__.L1038*C42964"/>
                        <sol:before>
                          <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if.now__BET_RELEASE_DATE.L1037*C42934">
                            <sol:before>
                              <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_if_ifRight_if.now__BET_RELEASE_DATE.L1037*C42934">
                                <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if_ifRight._.L1037*C42934"/>
                                <sol:before>
                                  <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L1035*C42813">
                                    <sol:hasReturnValue rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.pingOracle_PAYOUT_ATTEMPT_INTERVAL_.L1039*C42987"/>
                                    <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_if_ifRight_if.now__BET_RELEASE_DATE.L1037*C42934"/>
                                    <sol:before>
                                      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.winningTeam__TeamType.None.L1035*C42813">
                                        <sol:before>
                                          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.winningTeam__TeamType.None.L1035*C42813">
                                            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L1035*C42813"/>
                                            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.winningTeam_TeamType_1_.L1030*C42651"/>
                                            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.winningTeam_TeamType_0_.L1027*C42561"/>
                                            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.winningTeam__TeamType.None.L1035*C42813"/>
                                          </sol:FunctionIf>
                                        </sol:before>
                                        <sol:hasIfCondition>winningTeam==TeamType.None</sol:hasIfCondition>
                                      </sol:IfCondition>
                                    </sol:before>
                                  </sol:IfRight>
                                </sol:before>
                                <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if.now__BET_RELEASE_DATE.L1037*C42934"/>
                              </sol:FunctionIf>
                            </sol:before>
                            <sol:hasIfCondition>now&gt;=BET_RELEASE_DATE</sol:hasIfCondition>
                          </sol:IfCondition>
                        </sol:before>
                      </sol:IfRight>
                    </sol:before>
                    <sol:returnText>releaseBets()</sol:returnText>
                  </sol:ReturnValue>
                </sol:before>
                <sol:returnText>pingOracle(PAYOUT_ATTEMPT_INTERVAL)</sol:returnText>
              </sol:ReturnValue>
            </sol:before>
            <sol:callFunctionArgument></sol:callFunctionArgument>
            <sol:callFunctionName>performPayout</sol:callFunctionName>
          </sol:FunctionCall>
        </sol:callFunction>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.winningTeam__TeamType.None.L1035*C42813"/>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L1019*C42307"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.proof.L1016*C42250">
            <sol:typeName>bytes</sol:typeName>
            <sol:nameIs>proof</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>__callback</sol:nameIs>
        <sol:hasModifier>public</sol:hasModifier>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.totalAmountsBet.L952*C40086">
        <sol:hasModifier>public</sol:hasModifier>
        <sol:typeName>uint[NUM_TEAMS]</sol:typeName>
        <sol:nameIs>totalAmountsBet</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:inherit>usingOraclize</sol:inherit>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.performPayout.L1146*C47098">
        <sol:hasModifier>private</sol:hasModifier>
        <sol:hasIf>
          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.this.balance_0.L1190*C49348">
            <sol:hasIfWrong>
              <sol:IfWrong rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifWrong._.L1190*C49348">
                <sol:containAssignment>
                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.stage2NotReached_false.L1194*C49444">
                    <sol:before>
                      <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.stage2NotReached_true.L1192*C49406">
                        <sol:before>
                          <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.creator.transfer.L1191*C49373">
                            <sol:before>
                              <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L1190*C49348">
                                <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.stage2NotReached_true.L1192*C49406"/>
                                <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.creator.transfer.L1191*C49373"/>
                                <sol:before>
                                  <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.this.balance_0.L1190*C49348">
                                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.this.balance_0.L1190*C49348"/>
                                    <sol:hasIfCondition>this.balance&gt;0</sol:hasIfCondition>
                                  </sol:IfCondition>
                                </sol:before>
                              </sol:IfRight>
                            </sol:before>
                            <sol:callFunctionArgument>this.balance</sol:callFunctionArgument>
                            <sol:callFunctionName>transfer</sol:callFunctionName>
                            <sol:callFunctionObject>creator</sol:callFunctionObject>
                          </sol:FunctionCall>
                        </sol:before>
                        <sol:assignSymbol>=</sol:assignSymbol>
                        <sol:assignRight>true</sol:assignRight>
                        <sol:assignLeft>stage2NotReached</sol:assignLeft>
                      </sol:Assignment>
                    </sol:before>
                    <sol:assignSymbol>=</sol:assignSymbol>
                    <sol:assignRight>false</sol:assignRight>
                    <sol:assignLeft>stage2NotReached</sol:assignLeft>
                  </sol:Assignment>
                </sol:containAssignment>
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.this.balance_0.L1190*C49348"/>
              </sol:IfWrong>
            </sol:hasIfWrong>
            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L1190*C49348"/>
            <sol:before>
              <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.currentOwner.transfer.L1187*C49182">
                <sol:before>
                  <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.bettors_k_.transfer.L1184*C49146">
                    <sol:before>
                      <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if_ifRight._.L1183*C49129">
                        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.bettors_k_.transfer.L1184*C49146"/>
                        <sol:before>
                          <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if.payout_0.L1183*C49129">
                            <sol:before>
                              <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_for_if.payout_0.L1183*C49129">
                                <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if_ifRight._.L1183*C49129"/>
                                <sol:before>
                                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.payout__stageTwoCommissionPayoutTeam1.L1179*C49068">
                                    <sol:before>
                                      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if_ifRight_varDeclare.uintstageTwoCommissionPayoutTeam1.L1178*C48929">
                                        <sol:before>
                                          <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if_ifRight._.L1177*C48888">
                                            <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.payout__stageTwoCommissionPayoutTeam1.L1179*C49068"/>
                                            <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if_ifRight_varDeclare.uintstageTwoCommissionPayoutTeam1.L1178*C48929"/>
                                            <sol:before>
                                              <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if.totalAmountsBetStage2_1__0.L1177*C48888">
                                                <sol:before>
                                                  <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_for_if.totalAmountsBetStage2_1__0.L1177*C48888">
                                                    <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if_ifRight._.L1177*C48888"/>
                                                    <sol:before>
                                                      <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.payout__stageTwoCommissionPayoutTeam0.L1174*C48832">
                                                        <sol:before>
                                                          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if_ifRight_varDeclare.uintstageTwoCommissionPayoutTeam0.L1173*C48693">
                                                            <sol:before>
                                                              <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if_ifRight._.L1172*C48652">
    <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.payout__stageTwoCommissionPayoutTeam0.L1174*C48832"/>
    <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if_ifRight_varDeclare.uintstageTwoCommissionPayoutTeam0.L1173*C48693"/>
    <sol:before>
      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if.totalAmountsBetStage2_0__0.L1172*C48652">
        <sol:before>
          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_for_if.totalAmountsBetStage2_0__0.L1172*C48652">
            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if_ifRight._.L1172*C48652"/>
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.payout__stageOneCommissionPayoutTeam1.L1169*C48596">
                <sol:before>
                  <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if_ifRight_varDeclare.uintstageOneCommissionPayoutTeam1.L1168*C48457">
                    <sol:before>
                      <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if_ifRight._.L1167*C48416">
                        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.payout__stageOneCommissionPayoutTeam1.L1169*C48596"/>
                        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if_ifRight_varDeclare.uintstageOneCommissionPayoutTeam1.L1168*C48457"/>
                        <sol:before>
                          <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if.totalAmountsBetStage1_1__0.L1167*C48416">
                            <sol:before>
                              <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_for_if.totalAmountsBetStage1_1__0.L1167*C48416">
                                <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if_ifRight._.L1167*C48416"/>
                                <sol:before>
                                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.payout__stageOneCommissionPayoutTeam0.L1164*C48360">
                                    <sol:before>
                                      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if_ifRight_varDeclare.uintstageOneCommissionPayoutTeam0.L1163*C48221">
                                        <sol:before>
                                          <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if_ifRight._.L1162*C48180">
                                            <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.payout__stageOneCommissionPayoutTeam0.L1164*C48360"/>
                                            <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if_ifRight_varDeclare.uintstageOneCommissionPayoutTeam0.L1163*C48221"/>
                                            <sol:before>
                                              <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if.totalAmountsBetStage1_0__0.L1162*C48180">
                                                <sol:before>
                                                  <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_for_if.totalAmountsBetStage1_0__0.L1162*C48180">
                                                    <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if_ifRight._.L1162*C48180"/>
                                                    <sol:before>
                                                      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for_varDeclare.uintpayout.L1158*C47850">
                                                        <sol:before>
                                                          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for_varDeclare.uintbetOnWinner.L1157*C47776">
                                                            <sol:before>
                                                              <sol:FunctionFor rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for.for_uintk_0k_bettors.lengthk____uintbetOnWinner_bettorInfo_bettors_k__.amountsBet_uint_winningTeam__uintpayout_betOnWinner___betOnWinner__losingChunk-currentOwnerPayoutCommission-_4_eachStageCommission____totalAmountsBet_uint_winningTeam___if_totalAmountsBetStage1_0__0__uintstageOneCommissionPayoutTeam0___bettorInfo_bettors_k__.amountsBetStage1_0__eachStageCommission__totalAmountsBetStage1_0__payout__stageOneCommissionPayoutTeam0_if_totalAmountsBetStage1_1__0__uintstageOneCommissionPayoutTeam1___bettorInfo_bettors_k__.amountsBetStage1_1__eachStageCommission__totalAmountsBetStage1_1__payout__stageOneCommissionPayoutTeam1_if_totalAmountsBetStage2_0__0__uintstageTwoCommissionPayoutTeam0___bettorInfo_bettors_k__.amountsBetStage2_0__eachStageCommission__totalAmountsBetStage2_0__payout__stageTwoCommissionPayoutTeam0_if_totalAmountsBetStage2_1__0__uintstageTwoCommissionPayoutTeam1___bettorInfo_bettors_k__.amountsBetStage2_1__eachStageCommission__totalAmountsBetStage2_1__payout__stageTwoCommissionPayoutTeam1_if_payout_0_bettors_k_.transfer_payout__.L1156*C47731">
    <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for_varDeclare.uintbetOnWinner.L1157*C47776"/>
    <sol:conditionStep>k++</sol:conditionStep>
    <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_for_if.totalAmountsBetStage1_0__0.L1162*C48180"/>
    <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_for_if.totalAmountsBetStage2_0__0.L1172*C48652"/>
    <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_for_if.totalAmountsBetStage2_1__0.L1177*C48888"/>
    <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_for_if.totalAmountsBetStage1_1__0.L1167*C48416"/>
    <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for_varDeclare.uintpayout.L1158*C47850"/>
    <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_for_if.payout_0.L1183*C49129"/>
    <sol:hasForCondition>
      <sol:ForCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.k_bettors.length.L1156*C47731">
        <sol:conditionValue>bettors.length</sol:conditionValue>
        <sol:conditionSymbol>&lt;</sol:conditionSymbol>
      </sol:ForCondition>
    </sol:hasForCondition>
    <sol:hasStateVar>
      <sol:stateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.uintk.L1156*C47731">
        <sol:valueIs>0</sol:valueIs>
        <sol:nameIs>k</sol:nameIs>
        <sol:typeName>uint</sol:typeName>
      </sol:stateVar>
    </sol:hasStateVar>
    <sol:conditionVar>k</sol:conditionVar>
    <sol:before>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uinteachStageCommission.L1151*C47460">
        <sol:before>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintcurrentOwnerPayoutCommission.L1150*C47328">
            <sol:before>
              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintlosingChunk.L1149*C47244">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.performPayout.L1146*C47098"/>
                <sol:valueIs>SafeMath.sub(this.balance,totalAmountsBet[uint(winningTeam)])</sol:valueIs>
                <sol:nameIs>losingChunk</sol:nameIs>
                <sol:typeName>uint</sol:typeName>
              </sol:StateVar>
            </sol:before>
            <sol:valueIs>uint256(SafeMath.div(SafeMath.mul(OWNER_POOL_COMMISSION,losingChunk),100))</sol:valueIs>
            <sol:nameIs>currentOwnerPayoutCommission</sol:nameIs>
            <sol:typeName>uint</sol:typeName>
          </sol:StateVar>
        </sol:before>
        <sol:valueIs>uint256(SafeMath.div(SafeMath.mul(1,losingChunk),100))</sol:valueIs>
        <sol:nameIs>eachStageCommission</sol:nameIs>
        <sol:typeName>uint</sol:typeName>
      </sol:StateVar>
    </sol:before>                                             </sol:FunctionFor>
                                                            </sol:before>
                                                            <sol:valueIs
                                                            >bettorInfo[bettors[k]].amountsBet[uint(winningTeam)]</sol:valueIs>
                                                            <sol:nameIs
                                                            >betOnWinner</sol:nameIs>
                                                            <sol:typeName
                                                            >uint</sol:typeName>
                                                          </sol:StateVar>
                                                        </sol:before>
                                                        <sol:valueIs
                                                        >betOnWinner+((betOnWinner*(losingChunk-currentOwnerPayoutCommission-(4*eachStageCommission)))/totalAmountsBet[uint(winningTeam)])</sol:valueIs>
                                                        <sol:nameIs
                                                        >payout</sol:nameIs>
                                                        <sol:typeName
                                                        >uint</sol:typeName>
                                                      </sol:StateVar>
                                                    </sol:before>
                                                    <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if.totalAmountsBetStage1_0__0.L1162*C48180"/>
                                                  </sol:FunctionIf>
                                                </sol:before>
                                                <sol:hasIfCondition
                                                >totalAmountsBetStage1[0]&gt;0</sol:hasIfCondition>
                                              </sol:IfCondition>
                                            </sol:before>
                                          </sol:IfRight>
                                        </sol:before>
                                        <sol:valueIs>((bettorInfo[bettors[k]].amountsBetStage1[0]*eachStageCommission)/totalAmountsBetStage1[0])</sol:valueIs>
                                        <sol:nameIs>stageOneCommissionPayoutTeam0</sol:nameIs>
                                        <sol:typeName>uint</sol:typeName>
                                      </sol:StateVar>
                                    </sol:before>
                                    <sol:assignSymbol>=</sol:assignSymbol>
                                    <sol:assignRight>payout+stageOneCommissionPayoutTeam0</sol:assignRight>
                                    <sol:assignLeft>payout</sol:assignLeft>
                                  </sol:Assignment>
                                </sol:before>
                                <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if.totalAmountsBetStage1_1__0.L1167*C48416"/>
                              </sol:FunctionIf>
                            </sol:before>
                            <sol:hasIfCondition>totalAmountsBetStage1[1]&gt;0</sol:hasIfCondition>
                          </sol:IfCondition>
                        </sol:before>
                      </sol:IfRight>
                    </sol:before>
                    <sol:valueIs>((bettorInfo[bettors[k]].amountsBetStage1[1]*eachStageCommission)/totalAmountsBetStage1[1])</sol:valueIs>
                    <sol:nameIs>stageOneCommissionPayoutTeam1</sol:nameIs>
                    <sol:typeName>uint</sol:typeName>
                  </sol:StateVar>
                </sol:before>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>payout+stageOneCommissionPayoutTeam1</sol:assignRight>
                <sol:assignLeft>payout</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if.totalAmountsBetStage2_0__0.L1172*C48652"/>
          </sol:FunctionIf>
        </sol:before>
        <sol:hasIfCondition>totalAmountsBetStage2[0]&gt;0</sol:hasIfCondition>
      </sol:IfCondition>
    </sol:before>                                             </sol:IfRight>
                                                            </sol:before>
                                                            <sol:valueIs
                                                            >((bettorInfo[bettors[k]].amountsBetStage2[0]*eachStageCommission)/totalAmountsBetStage2[0])</sol:valueIs>
                                                            <sol:nameIs
                                                            >stageTwoCommissionPayoutTeam0</sol:nameIs>
                                                            <sol:typeName
                                                            >uint</sol:typeName>
                                                          </sol:StateVar>
                                                        </sol:before>
                                                        <sol:assignSymbol
                                                        >=</sol:assignSymbol>
                                                        <sol:assignRight
                                                        >payout+stageTwoCommissionPayoutTeam0</sol:assignRight>
                                                        <sol:assignLeft
                                                        >payout</sol:assignLeft>
                                                      </sol:Assignment>
                                                    </sol:before>
                                                    <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if.totalAmountsBetStage2_1__0.L1177*C48888"/>
                                                  </sol:FunctionIf>
                                                </sol:before>
                                                <sol:hasIfCondition
                                                >totalAmountsBetStage2[1]&gt;0</sol:hasIfCondition>
                                              </sol:IfCondition>
                                            </sol:before>
                                          </sol:IfRight>
                                        </sol:before>
                                        <sol:valueIs>((bettorInfo[bettors[k]].amountsBetStage2[1]*eachStageCommission)/totalAmountsBetStage2[1])</sol:valueIs>
                                        <sol:nameIs>stageTwoCommissionPayoutTeam1</sol:nameIs>
                                        <sol:typeName>uint</sol:typeName>
                                      </sol:StateVar>
                                    </sol:before>
                                    <sol:assignSymbol>=</sol:assignSymbol>
                                    <sol:assignRight>payout+stageTwoCommissionPayoutTeam1</sol:assignRight>
                                    <sol:assignLeft>payout</sol:assignLeft>
                                  </sol:Assignment>
                                </sol:before>
                                <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if.payout_0.L1183*C49129"/>
                              </sol:FunctionIf>
                            </sol:before>
                            <sol:hasIfCondition>payout&gt;0</sol:hasIfCondition>
                          </sol:IfCondition>
                        </sol:before>
                      </sol:IfRight>
                    </sol:before>
                    <sol:callFunctionArgument>payout</sol:callFunctionArgument>
                    <sol:callFunctionName>transfer</sol:callFunctionName>
                    <sol:callFunctionObject>bettors[k]</sol:callFunctionObject>
                  </sol:FunctionCall>
                </sol:before>
                <sol:callFunctionArgument>currentOwnerPayoutCommission</sol:callFunctionArgument>
                <sol:callFunctionName>transfer</sol:callFunctionName>
                <sol:callFunctionObject>currentOwner</sol:callFunctionObject>
              </sol:FunctionCall>
            </sol:before>
            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.this.balance_0.L1190*C49348"/>
          </sol:FunctionIf>
        </sol:hasIf>
        <sol:hasModifier>canPerformPayout</sol:hasModifier>
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.payoutCompleted_true.L1197*C49478">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.stage2NotReached_false.L1194*C49444"/>
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.stage2NotReached_true.L1192*C49406"/>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>true</sol:assignRight>
            <sol:assignLeft>payoutCompleted</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:hasFor rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for.for_uintk_0k_bettors.lengthk____uintbetOnWinner_bettorInfo_bettors_k__.amountsBet_uint_winningTeam__uintpayout_betOnWinner___betOnWinner__losingChunk-currentOwnerPayoutCommission-_4_eachStageCommission____totalAmountsBet_uint_winningTeam___if_totalAmountsBetStage1_0__0__uintstageOneCommissionPayoutTeam0___bettorInfo_bettors_k__.amountsBetStage1_0__eachStageCommission__totalAmountsBetStage1_0__payout__stageOneCommissionPayoutTeam0_if_totalAmountsBetStage1_1__0__uintstageOneCommissionPayoutTeam1___bettorInfo_bettors_k__.amountsBetStage1_1__eachStageCommission__totalAmountsBetStage1_1__payout__stageOneCommissionPayoutTeam1_if_totalAmountsBetStage2_0__0__uintstageTwoCommissionPayoutTeam0___bettorInfo_bettors_k__.amountsBetStage2_0__eachStageCommission__totalAmountsBetStage2_0__payout__stageTwoCommissionPayoutTeam0_if_totalAmountsBetStage2_1__0__uintstageTwoCommissionPayoutTeam1___bettorInfo_bettors_k__.amountsBetStage2_1__eachStageCommission__totalAmountsBetStage2_1__payout__stageTwoCommissionPayoutTeam1_if_payout_0_bettors_k_.transfer_payout__.L1156*C47731"/>
        <sol:nameIs>performPayout</sol:nameIs>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.currentOwner.transfer.L1187*C49182"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uinteachStageCommission.L1151*C47460"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintlosingChunk.L1149*C47244"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintcurrentOwnerPayoutCommission.L1150*C47328"/>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.bettorInfo.L950*C40026">
        <sol:elementTypeName2>Bettor</sol:elementTypeName2>
        <sol:elementTypeName1>address</sol:elementTypeName1>
        <sol:typeName>mapping</sol:typeName>
        <sol:nameIs>bettorInfo</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:defineModifier>
      <sol:Modifier rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_modifier.onlyCreatorLevel.L983*C41179">
        <sol:callFunction>
          <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L984*C41210">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_modifier.onlyCreatorLevel.L983*C41179"/>
            <sol:callFunctionArgument>creator==msg.sender</sol:callFunctionArgument>
            <sol:callFunctionName>require</sol:callFunctionName>
          </sol:FunctionCall>
        </sol:callFunction>
        <sol:nameIs>onlyCreatorLevel</sol:nameIs>
      </sol:Modifier>
    </sol:defineModifier>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.bet.L1067*C43997">
        <sol:operateVarible>
          <sol:VariableOperation rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprVaribleOp.numberOfBets__.L1135*C46779">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.bettorInfo_msg.sender_.amountsBet_teamIdx___msg.value.L1134*C46721">
                <sol:before>
                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.totalAmountsBetStage2_teamIdx___amountExcess.L1099*C45416">
                    <sol:before>
                      <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.totalAmountsBetStage1_teamIdx__STAGE_ONE_BET_LIMIT.L1098*C45358">
                        <sol:before>
                          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.bettorInfo_msg.sender_.amountsBetStage2_teamIdx___amountExcess.L1096*C45283">
                            <sol:before>
                              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.bettorInfo_msg.sender_.amountsBetStage1_teamIdx___amountLeft.L1095*C45215">
                                <sol:before>
                                  <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if_ifWrong_varDeclare.uintamountExcess.L1093*C45149">
                                    <sol:before>
                                      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if_ifWrong_varDeclare.uintamountLeft.L1092*C45066">
                                        <sol:before>
                                          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.totalAmountsBetStage1_teamIdx___msg.value.L1089*C44922">
                                            <sol:before>
                                              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.bettorInfo_msg.sender_.amountsBetStage1_teamIdx___msg.value.L1087*C44850">
                                                <sol:before>
                                                  <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if_ifRight._.L1086*C44766">
                                                    <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.totalAmountsBetStage1_teamIdx___msg.value.L1089*C44922"/>
                                                    <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.bettorInfo_msg.sender_.amountsBetStage1_teamIdx___msg.value.L1087*C44850"/>
                                                    <sol:before>
                                                      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if.SafeMath.add_totalAmountsBet_teamIdx__msg.value___STAGE_ONE_BET_LIMIT.L1086*C44766">
                                                        <sol:before>
                                                          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_if_ifRight_if.SafeMath.add_totalAmountsBet_teamIdx__msg.value___STAGE_ONE_BET_LIMIT.L1086*C44766">
                                                            <sol:hasIfWrong>
                                                              <sol:IfWrong rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if_ifWrong._.L1086*C44766">
    <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.totalAmountsBetStage2_teamIdx___amountExcess.L1099*C45416"/>
    <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.totalAmountsBetStage1_teamIdx__STAGE_ONE_BET_LIMIT.L1098*C45358"/>
    <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.bettorInfo_msg.sender_.amountsBetStage2_teamIdx___amountExcess.L1096*C45283"/>
    <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.bettorInfo_msg.sender_.amountsBetStage1_teamIdx___amountLeft.L1095*C45215"/>
    <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if_ifWrong_varDeclare.uintamountExcess.L1093*C45149"/>
    <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if_ifWrong_varDeclare.uintamountLeft.L1092*C45066"/>
    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if.SafeMath.add_totalAmountsBet_teamIdx__msg.value___STAGE_ONE_BET_LIMIT.L1086*C44766"/>
                                                              </sol:IfWrong>
                                                            </sol:hasIfWrong>
                                                            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if_ifRight._.L1086*C44766"/>
                                                            <sol:before>
                                                              <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L1084*C44660">
    <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_if_ifRight_if.SafeMath.add_totalAmountsBet_teamIdx__msg.value___STAGE_ONE_BET_LIMIT.L1086*C44766"/>
    <sol:before>
      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.totalAmountsBet_teamIdx__STAGE_ONE_BET_LIMIT.L1084*C44660">
        <sol:before>
          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.totalAmountsBet_teamIdx__STAGE_ONE_BET_LIMIT.L1084*C44660">
            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L1084*C44660"/>
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.totalAmountsBetStage2_teamIdx___msg.value.L1080*C44587">
                <sol:before>
                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.bettorInfo_msg.sender_.amountsBetStage2_teamIdx___msg.value.L1078*C44517">
                    <sol:before>
                      <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L1076*C44427">
                        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.totalAmountsBetStage2_teamIdx___msg.value.L1080*C44587"/>
                        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.bettorInfo_msg.sender_.amountsBetStage2_teamIdx___msg.value.L1078*C44517"/>
                        <sol:before>
                          <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.totalAmountsBet_teamIdx___STAGE_ONE_BET_LIMIT.L1076*C44427">
                            <sol:before>
                              <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.totalAmountsBet_teamIdx___STAGE_ONE_BET_LIMIT.L1076*C44427">
                                <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L1076*C44427"/>
                                <sol:before>
                                  <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.bettors.push.L1073*C44337">
                                    <sol:before>
                                      <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L1072*C44244">
                                        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.bettors.push.L1073*C44337"/>
                                        <sol:before>
                                          <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.bettorInfo_msg.sender_.amountsBet_0___0&amp;&amp;bettorInfo_msg.sender_.amountsBet_1___0.L1072*C44244">
                                            <sol:before>
                                              <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.bettorInfo_msg.sender_.amountsBet_0___0&amp;&amp;bettorInfo_msg.sender_.amountsBet_1___0.L1072*C44244">
                                                <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L1072*C44244"/>
                                                <sol:before>
                                                  <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L1070*C44156">
                                                    <sol:before>
                                                      <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L1069*C44070">
                                                        <sol:before>
                                                          <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L1068*C44042">
                                                            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.bet.L1067*C43997"/>
                                                            <sol:callFunctionArgument
                                                            >canBet()==true</sol:callFunctionArgument>
                                                            <sol:callFunctionName
                                                            >require</sol:callFunctionName>
                                                          </sol:FunctionCall>
                                                        </sol:before>
                                                        <sol:callFunctionArgument
                                                        >TeamType(teamIdx)==TeamType.Cavs||TeamType(teamIdx)==TeamType.Philly</sol:callFunctionArgument>
                                                        <sol:callFunctionName
                                                        >require</sol:callFunctionName>
                                                      </sol:FunctionCall>
                                                    </sol:before>
                                                    <sol:callFunctionArgument
                                                    >msg.value&gt;=MINIMUM_BET</sol:callFunctionArgument>
                                                    <sol:callFunctionName
                                                    >require</sol:callFunctionName>
                                                  </sol:FunctionCall>
                                                </sol:before>
                                                <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.bettorInfo_msg.sender_.amountsBet_0___0&amp;&amp;bettorInfo_msg.sender_.amountsBet_1___0.L1072*C44244"/>
                                              </sol:FunctionIf>
                                            </sol:before>
                                            <sol:hasIfCondition
                                            >bettorInfo[msg.sender].amountsBet[0]==0&amp;&amp;bettorInfo[msg.sender].amountsBet[1]==0</sol:hasIfCondition>
                                          </sol:IfCondition>
                                        </sol:before>
                                      </sol:IfRight>
                                    </sol:before>
                                    <sol:callFunctionArgument
                                    >msg.sender</sol:callFunctionArgument>
                                    <sol:callFunctionName>push</sol:callFunctionName>
                                    <sol:callFunctionObject>bettors</sol:callFunctionObject>
                                  </sol:FunctionCall>
                                </sol:before>
                                <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.totalAmountsBet_teamIdx___STAGE_ONE_BET_LIMIT.L1076*C44427"/>
                              </sol:FunctionIf>
                            </sol:before>
                            <sol:hasIfCondition>totalAmountsBet[teamIdx]&gt;=STAGE_ONE_BET_LIMIT</sol:hasIfCondition>
                          </sol:IfCondition>
                        </sol:before>
                      </sol:IfRight>
                    </sol:before>
                    <sol:assignSymbol>=</sol:assignSymbol>
                    <sol:assignRight>bettorInfo[msg.sender].amountsBetStage2[teamIdx]+msg.value</sol:assignRight>
                    <sol:assignLeft>bettorInfo[msg.sender].amountsBetStage2[teamIdx]</sol:assignLeft>
                  </sol:Assignment>
                </sol:before>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>totalAmountsBetStage2[teamIdx]+msg.value</sol:assignRight>
                <sol:assignLeft>totalAmountsBetStage2[teamIdx]</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.totalAmountsBet_teamIdx__STAGE_ONE_BET_LIMIT.L1084*C44660"/>
          </sol:FunctionIf>
        </sol:before>
        <sol:hasIfCondition>totalAmountsBet[teamIdx]&lt;STAGE_ONE_BET_LIMIT</sol:hasIfCondition>
      </sol:IfCondition>
    </sol:before>                                             </sol:IfRight>
                                                            </sol:before>
                                                            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifRight_if.SafeMath.add_totalAmountsBet_teamIdx__msg.value___STAGE_ONE_BET_LIMIT.L1086*C44766"/>
                                                          </sol:FunctionIf>
                                                        </sol:before>
                                                        <sol:hasIfCondition
                                                        >SafeMath.add(totalAmountsBet[teamIdx],msg.value)&lt;=STAGE_ONE_BET_LIMIT</sol:hasIfCondition>
                                                      </sol:IfCondition>
                                                    </sol:before>
                                                  </sol:IfRight>
                                                </sol:before>
                                                <sol:assignSymbol
                                                >=</sol:assignSymbol>
                                                <sol:assignRight
                                                >bettorInfo[msg.sender].amountsBetStage1[teamIdx]+msg.value</sol:assignRight>
                                                <sol:assignLeft
                                                >bettorInfo[msg.sender].amountsBetStage1[teamIdx]</sol:assignLeft>
                                              </sol:Assignment>
                                            </sol:before>
                                            <sol:assignSymbol
                                            >=</sol:assignSymbol>
                                            <sol:assignRight>totalAmountsBetStage1[teamIdx]+msg.value</sol:assignRight>
                                            <sol:assignLeft>totalAmountsBetStage1[teamIdx]</sol:assignLeft>
                                          </sol:Assignment>
                                        </sol:before>
                                        <sol:valueIs>SafeMath.sub(STAGE_ONE_BET_LIMIT,totalAmountsBet[teamIdx])</sol:valueIs>
                                        <sol:nameIs>amountLeft</sol:nameIs>
                                        <sol:typeName>uint</sol:typeName>
                                      </sol:StateVar>
                                    </sol:before>
                                    <sol:valueIs>SafeMath.sub(msg.value,amountLeft)</sol:valueIs>
                                    <sol:nameIs>amountExcess</sol:nameIs>
                                    <sol:typeName>uint</sol:typeName>
                                  </sol:StateVar>
                                </sol:before>
                                <sol:assignSymbol>=</sol:assignSymbol>
                                <sol:assignRight>bettorInfo[msg.sender].amountsBetStage1[teamIdx]+amountLeft</sol:assignRight>
                                <sol:assignLeft>bettorInfo[msg.sender].amountsBetStage1[teamIdx]</sol:assignLeft>
                              </sol:Assignment>
                            </sol:before>
                            <sol:assignSymbol>=</sol:assignSymbol>
                            <sol:assignRight>bettorInfo[msg.sender].amountsBetStage2[teamIdx]+amountExcess</sol:assignRight>
                            <sol:assignLeft>bettorInfo[msg.sender].amountsBetStage2[teamIdx]</sol:assignLeft>
                          </sol:Assignment>
                        </sol:before>
                        <sol:assignSymbol>=</sol:assignSymbol>
                        <sol:assignRight>STAGE_ONE_BET_LIMIT</sol:assignRight>
                        <sol:assignLeft>totalAmountsBetStage1[teamIdx]</sol:assignLeft>
                      </sol:Assignment>
                    </sol:before>
                    <sol:assignSymbol>=</sol:assignSymbol>
                    <sol:assignRight>totalAmountsBetStage2[teamIdx]+amountExcess</sol:assignRight>
                    <sol:assignLeft>totalAmountsBetStage2[teamIdx]</sol:assignLeft>
                  </sol:Assignment>
                </sol:before>
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.totalAmountsBetStage1_teamIdx___msg.value.L1089*C44922"/>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>bettorInfo[msg.sender].amountsBet[teamIdx]+msg.value</sol:assignRight>
                <sol:assignLeft>bettorInfo[msg.sender].amountsBet[teamIdx]</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:opSymbol>++</sol:opSymbol>
            <sol:opVarible>numberOfBets</sol:opVarible>
          </sol:VariableOperation>
        </sol:operateVarible>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L1069*C44070"/>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.totalAmountsBet_teamIdx___msg.value.L1137*C46826">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.totalBetAmount__msg.value.L1136*C46796">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprVaribleOp.numberOfBets__.L1135*C46779"/>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>totalBetAmount+msg.value</sol:assignRight>
                <sol:assignLeft>totalBetAmount</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>totalAmountsBet[teamIdx]+msg.value</sol:assignRight>
            <sol:assignLeft>totalAmountsBet[teamIdx]</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:hasModifier>payable</sol:hasModifier>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L1068*C44042"/>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.bettorInfo_msg.sender_.amountsBet_0___0&amp;&amp;bettorInfo_msg.sender_.amountsBet_1___0.L1072*C44244"/>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.totalAmountsBet_teamIdx__STAGE_ONE_BET_LIMIT.L1084*C44660"/>
        <sol:callFunction>
          <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.BetMade.L1138*C46866">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.totalAmountsBet_teamIdx___msg.value.L1137*C46826"/>
            <sol:callFunctionArgument></sol:callFunctionArgument>
            <sol:callFunctionName>BetMade</sol:callFunctionName>
          </sol:FunctionCall>
        </sol:callFunction>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.bettorInfo_msg.sender_.amountsBet_teamIdx___msg.value.L1134*C46721"/>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L1070*C44156"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.teamIdx.L1067*C44010">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>teamIdx</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>bet</sol:nameIs>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.totalAmountsBet_teamIdx___STAGE_ONE_BET_LIMIT.L1076*C44427"/>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.totalBetAmount__msg.value.L1136*C46796"/>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.canBet.L1058*C43692">
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return._now__BETTING_OPENS&amp;&amp;now_BETTING_CLOSES_.L1059*C43743">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.canBet.L1058*C43692"/>
            <sol:returnText>(now&gt;=BETTING_OPENS&amp;&amp;now&lt;BETTING_CLOSES)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L1058*C43726">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.bool.L1058*C43734">
                <sol:typeName>bool</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:nameIs>canBet</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.NUM_TEAMS.L924*C38462">
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:valueIs>2</sol:valueIs>
        <sol:typeName>uint8</sol:typeName>
        <sol:nameIs>NUM_TEAMS</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.payoutCompleted.L941*C39796">
        <sol:hasModifier>public</sol:hasModifier>
        <sol:typeName>bool</sol:typeName>
        <sol:nameIs>payoutCompleted</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.triggerPayout.L1063*C43884">
        <sol:callFunction>
          <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.pingOracle.L1064*C43936">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.triggerPayout.L1063*C43884"/>
            <sol:callFunctionArgument>5</sol:callFunctionArgument>
            <sol:callFunctionName>pingOracle</sol:callFunctionName>
          </sol:FunctionCall>
        </sol:callFunction>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:hasModifier>onlyCreatorLevel</sol:hasModifier>
        <sol:nameIs>triggerPayout</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.totalBetAmount.L956*C40248">
        <sol:hasModifier>public</sol:hasModifier>
        <sol:typeName>uint</sol:typeName>
        <sol:nameIs>totalBetAmount</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:defineModifier>
      <sol:Modifier rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_modifier.canPerformPayout.L973*C40819">
        <sol:hasIf>
          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_modifier_if.winningTeam!_TeamType.None&amp;&amp;!payoutCompleted&amp;&amp;now_BETTING_CLOSES.L974*C40850">
            <sol:hasIfRight>
              <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_modifier_if_ifRight._.L974*C40850">
                <sol:before>
                  <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_modifier_if.winningTeam!_TeamType.None&amp;&amp;!payoutCompleted&amp;&amp;now_BETTING_CLOSES.L974*C40850">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_modifier_if.winningTeam!_TeamType.None&amp;&amp;!payoutCompleted&amp;&amp;now_BETTING_CLOSES.L974*C40850"/>
                    <sol:hasIfCondition>winningTeam!=TeamType.None&amp;&amp;!payoutCompleted&amp;&amp;now&gt;BETTING_CLOSES</sol:hasIfCondition>
                  </sol:IfCondition>
                </sol:before>
              </sol:IfRight>
            </sol:hasIfRight>
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_modifier.canPerformPayout.L973*C40819"/>
            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_modifier_if.winningTeam!_TeamType.None&amp;&amp;!payoutCompleted&amp;&amp;now_BETTING_CLOSES.L974*C40850"/>
          </sol:FunctionIf>
        </sol:hasIf>
        <sol:nameIs>canPerformPayout</sol:nameIs>
      </sol:Modifier>
    </sol:defineModifier>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.creator.L922*C38317">
        <sol:hasModifier>public</sol:hasModifier>
        <sol:valueIs>0x0161C8d35f0B603c7552017fe9642523f70d7B6A</sol:valueIs>
        <sol:typeName>address</sol:typeName>
        <sol:nameIs>creator</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.PAYOUT_ATTEMPT_INTERVAL.L935*C39347">
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:valueIs>64800</sol:valueIs>
        <sol:typeName>uint</sol:typeName>
        <sol:nameIs>PAYOUT_ATTEMPT_INTERVAL</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.BET_RELEASE_DATE.L936*C39436">
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:valueIs>1520035500</sol:valueIs>
        <sol:typeName>uint</sol:typeName>
        <sol:nameIs>BET_RELEASE_DATE</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:nameIs>nbagame</sol:nameIs>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.owner.L921*C38301">
        <sol:typeName>address</sol:typeName>
        <sol:nameIs>owner</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.firstStepLimit.L962*C40482">
        <sol:hasModifier>private</sol:hasModifier>
        <sol:valueIs>0.1ether</sol:valueIs>
        <sol:typeName>uint</sol:typeName>
        <sol:nameIs>firstStepLimit</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.PAYOUT_DATE.L937*C39539">
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:valueIs>BETTING_CLOSES+PAYOUT_ATTEMPT_INTERVAL</sol:valueIs>
        <sol:typeName>uint</sol:typeName>
        <sol:nameIs>PAYOUT_DATE</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.totalAmountsBetStage2.L954*C40174">
        <sol:hasModifier>public</sol:hasModifier>
        <sol:typeName>uint[NUM_TEAMS]</sol:typeName>
        <sol:nameIs>totalAmountsBetStage2</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.TEAM_NAMES.L925*C38500">
        <sol:hasModifier>public</sol:hasModifier>
        <sol:valueIs>["Cleveland Cavaliers","Philadelphia 76ers"]</sol:valueIs>
        <sol:typeName>string[NUM_TEAMS]</sol:typeName>
        <sol:nameIs>TEAM_NAMES</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.bettors.L951*C40066">
        <sol:typeName>address[]</sol:typeName>
        <sol:nameIs>bettors</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.MINIMUM_BET.L932*C39065">
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:valueIs>0.01ether</sol:valueIs>
        <sol:typeName>uint</sol:typeName>
        <sol:nameIs>MINIMUM_BET</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.currentOwner.L923*C38387">
        <sol:hasModifier>public</sol:hasModifier>
        <sol:valueIs>0x0161C8d35f0B603c7552017fe9642523f70d7B6A</sol:valueIs>
        <sol:typeName>address</sol:typeName>
        <sol:nameIs>currentOwner</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.triggerRelease.L999*C41621">
        <sol:callFunction>
          <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.releaseBets.L1002*C41711">
            <sol:before>
              <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L1000*C41674">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.triggerRelease.L999*C41621"/>
                <sol:callFunctionArgument>now&gt;BET_RELEASE_DATE</sol:callFunctionArgument>
                <sol:callFunctionName>require</sol:callFunctionName>
              </sol:FunctionCall>
            </sol:before>
            <sol:callFunctionArgument></sol:callFunctionArgument>
            <sol:callFunctionName>releaseBets</sol:callFunctionName>
          </sol:FunctionCall>
        </sol:callFunction>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.require.L1000*C41674"/>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:hasModifier>onlyCreatorLevel</sol:hasModifier>
        <sol:nameIs>triggerRelease</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.EARLY_BET_INCENTIVE_COMMISSION.L929*C38782">
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:valueIs>4</sol:valueIs>
        <sol:typeName>uint</sol:typeName>
        <sol:nameIs>EARLY_BET_INCENTIVE_COMMISSION</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.totalAmountsBetStage1.L953*C40127">
        <sol:hasModifier>public</sol:hasModifier>
        <sol:typeName>uint[NUM_TEAMS]</sol:typeName>
        <sol:nameIs>totalAmountsBetStage1</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.OWNER_POOL_COMMISSION.L930*C38916">
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:valueIs>6</sol:valueIs>
        <sol:typeName>uint</sol:typeName>
        <sol:nameIs>OWNER_POOL_COMMISSION</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.stage2NotReached.L942*C39826">
        <sol:hasModifier>public</sol:hasModifier>
        <sol:valueIs>true</sol:valueIs>
        <sol:typeName>bool</sol:typeName>
        <sol:nameIs>stage2NotReached</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.TOTAL_POOL_COMMISSION.L928*C38670">
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:valueIs>10</sol:valueIs>
        <sol:typeName>uint</sol:typeName>
        <sol:nameIs>TOTAL_POOL_COMMISSION</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasStruct>
      <sol:Struct rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_struct.Bettor.L944*C39867">
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.uint[NUM_TEAMS].L947*C39950">
            <sol:typeName>uint[NUM_TEAMS]</sol:typeName>
            <sol:nameIs>amountsBetStage2</sol:nameIs>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.uint[NUM_TEAMS].L946*C39914">
            <sol:typeName>uint[NUM_TEAMS]</sol:typeName>
            <sol:nameIs>amountsBetStage1</sol:nameIs>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.uint[NUM_TEAMS].L945*C39884">
            <sol:typeName>uint[NUM_TEAMS]</sol:typeName>
            <sol:nameIs>amountsBet</sol:nameIs>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:nameIs>Bettor</sol:nameIs>
      </sol:Struct>
    </sol:hasStruct>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.winningTeam.L927*C38624">
        <sol:hasModifier>public</sol:hasModifier>
        <sol:valueIs>TeamType.None</sol:valueIs>
        <sol:typeName>TeamType</sol:typeName>
        <sol:nameIs>winningTeam</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.secondStepLimit.L963*C40584">
        <sol:hasModifier>private</sol:hasModifier>
        <sol:valueIs>0.5ether</sol:valueIs>
        <sol:typeName>uint</sol:typeName>
        <sol:nameIs>secondStepLimit</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.contractPrice.L960*C40394">
        <sol:hasModifier>public</sol:hasModifier>
        <sol:valueIs>0.05ether</sol:valueIs>
        <sol:typeName>uint</sol:typeName>
        <sol:nameIs>contractPrice</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun._addressNotNull.L1006*C41848">
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return._adr!_address_0_.L1007*C41918">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun._addressNotNull.L1006*C41848"/>
            <sol:returnText>_adr!=address(0)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L1006*C41900">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.bool.L1006*C41909">
                <sol:typeName>bool</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>private</sol:hasModifier>
        <sol:hasModifier>pure</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._adr.L1006*C41873">
            <sol:typeName>address</sol:typeName>
            <sol:nameIs>_adr</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>_addressNotNull</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.nbagame.L993*C41293">
        <sol:callFunction>
          <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.pingOracle.L995*C41343">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.owner_msg.sender.L994*C41322">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.nbagame.L993*C41293"/>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>msg.sender</sol:assignRight>
                <sol:assignLeft>owner</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:callFunctionArgument>PAYOUT_DATE-now</sol:callFunctionArgument>
            <sol:callFunctionName>pingOracle</sol:callFunctionName>
          </sol:FunctionCall>
        </sol:callFunction>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.owner_msg.sender.L994*C41322"/>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:nameIs>nbagame</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.BETTING_CLOSES.L934*C39237">
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:hasModifier>public</sol:hasModifier>
        <sol:valueIs>1519862700</sol:valueIs>
        <sol:typeName>uint</sol:typeName>
        <sol:nameIs>BETTING_CLOSES</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
  </sol:Contract>
  <sol:Contract rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con.OraclizeI.L23*C1164">
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.randomDS_getSessionPubKeyHash.L37*C2220">
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L37*C2261">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.bytes32.L37*C2269">
                <sol:typeName>bytes32</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:nameIs>randomDS_getSessionPubKeyHash</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.query2.L27*C1436">
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L27*C1525">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param._id.L27*C1534">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>_id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>payable</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._arg2.L27*C1503">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_arg2</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._arg1.L27*C1489">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_arg1</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._datasource.L27*C1469">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._timestamp.L27*C1452">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>_timestamp</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>query2</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.queryN.L29*C1691">
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L29*C1765">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param._id.L29*C1774">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>_id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>payable</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._argN.L29*C1744">
            <sol:typeName>bytes</sol:typeName>
            <sol:nameIs>_argN</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._datasource.L29*C1724">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._timestamp.L29*C1707">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>_timestamp</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>queryN</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:nameIs>OraclizeI</sol:nameIs>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.queryN_withGasLimit.L30*C1789">
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L30*C1892">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param._id.L30*C1901">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>_id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>payable</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._gaslimit.L30*C1868">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>_gaslimit</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._argN.L30*C1855">
            <sol:typeName>bytes</sol:typeName>
            <sol:nameIs>_argN</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._datasource.L30*C1835">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._timestamp.L30*C1818">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>_timestamp</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>queryN_withGasLimit</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.query.L25*C1213">
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L25*C1286">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param._id.L25*C1295">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>_id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>payable</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._arg.L25*C1265">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_arg</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._datasource.L25*C1245">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._timestamp.L25*C1228">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>_timestamp</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>query</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.setConfig.L35*C2137">
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._config.L35*C2156">
            <sol:typeName>bytes32</sol:typeName>
            <sol:nameIs>_config</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>setConfig</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.getPrice.L32*C1980">
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L32*C2033">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param._dsprice.L32*C2042">
                <sol:typeName>uint</sol:typeName>
                <sol:nameIs>_dsprice</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.gaslimit.L32*C2018">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>gaslimit</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._datasource.L32*C1998">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>getPrice</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.setProofType.L34*C2096">
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._proofType.L34*C2118">
            <sol:typeName>byte</sol:typeName>
            <sol:nameIs>_proofType</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>setProofType</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.cbAddress.L24*C1186">
        <sol:hasModifier>public</sol:hasModifier>
        <sol:typeName>address</sol:typeName>
        <sol:nameIs>cbAddress</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.query_withGasLimit.L26*C1310">
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L26*C1412">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param._id.L26*C1421">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>_id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>payable</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._gaslimit.L26*C1388">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>_gaslimit</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._arg.L26*C1375">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_arg</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._datasource.L26*C1355">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._timestamp.L26*C1338">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>_timestamp</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>query_withGasLimit</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.useCoupon.L33*C2059">
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._coupon.L33*C2078">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_coupon</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>useCoupon</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.query2_withGasLimit.L28*C1549">
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L28*C1667">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param._id.L28*C1676">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>_id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>payable</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._gaslimit.L28*C1643">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>_gaslimit</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._arg2.L28*C1629">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_arg2</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._arg1.L28*C1615">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_arg1</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._datasource.L28*C1595">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._timestamp.L28*C1578">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>_timestamp</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>query2_withGasLimit</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.getPrice.L31*C1916">
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L31*C1954">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param._dsprice.L31*C1963">
                <sol:typeName>uint</sol:typeName>
                <sol:nameIs>_dsprice</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._datasource.L31*C1934">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>getPrice</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.setCustomGasPrice.L36*C2175">
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._gasPrice.L36*C2202">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>_gasPrice</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>setCustomGasPrice</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
  </sol:Contract>
  <sol:Contract rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con.usingOraclize.L42*C2368">
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.strConcat.L586*C25348">
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.strConcat__a__b__c__d_&quot;&quot;_.L587*C25440">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.strConcat.L586*C25348"/>
            <sol:returnText>strConcat(_a,_b,_c,_d,"")</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L586*C25420">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.string.L586*C25429">
                <sol:typeName>string</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._d.L586*C25400">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_d</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._c.L586*C25389">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_c</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._b.L586*C25378">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_b</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._a.L586*C25367">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_a</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>strConcat</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.copyBytes.L841*C35486">
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.fromOffset.L841*C35517">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>fromOffset</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.toOffset.L841*C35557">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>toOffset</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L841*C35581">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.bytes.L841*C35590">
                <sol:typeName>bytes</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasIf>
          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.to.length_minLength.L843*C35637">
            <sol:hasIfRight>
              <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L843*C35637">
                <sol:hasThrow>
                  <sol:Throw rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_throw.throw;.L845*C35688">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L843*C35637"/>
                    <sol:throwText>throw;</sol:throwText>
                  </sol:Throw>
                </sol:hasThrow>
                <sol:before>
                  <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.to.length_minLength.L843*C35637">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.to.length_minLength.L843*C35637"/>
                    <sol:hasIfCondition>to.length&lt;minLength</sol:hasIfCondition>
                  </sol:IfCondition>
                </sol:before>
              </sol:IfRight>
            </sol:hasIfRight>
            <sol:before>
              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintminLength.L842*C35600">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.copyBytes.L841*C35486"/>
                <sol:valueIs>length+toOffset</sol:valueIs>
                <sol:nameIs>minLength</sol:nameIs>
                <sol:typeName>uint</sol:typeName>
              </sol:StateVar>
            </sol:before>
            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.to.length_minLength.L843*C35637"/>
          </sol:FunctionIf>
        </sol:hasIf>
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uinti.L848*C35808">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_throw.throw;.L845*C35688"/>
            <sol:valueIs>32+fromOffset</sol:valueIs>
            <sol:nameIs>i</sol:nameIs>
            <sol:typeName>uint</sol:typeName>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.length.L841*C35534">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>length</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.to.L858*C35997">
            <sol:before>
              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintj.L849*C35835">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uinti.L848*C35808"/>
                <sol:valueIs>32+toOffset</sol:valueIs>
                <sol:nameIs>j</sol:nameIs>
                <sol:typeName>uint</sol:typeName>
              </sol:StateVar>
            </sol:before>
            <sol:returnText>to</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintj.L849*C35835"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.to.L841*C35547">
            <sol:typeName>bytes</sol:typeName>
            <sol:nameIs>to</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>copyBytes</sol:nameIs>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.from.L841*C35505">
            <sol:typeName>bytes</sol:typeName>
            <sol:nameIs>from</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintminLength.L842*C35600"/>
        <sol:hasModifier>internal</sol:hasModifier>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L413*C19561">
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.args.L413*C19604">
            <sol:typeName>bytes[3]</sol:typeName>
            <sol:nameIs>args</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize_query_datasource_dynargs_gaslimit_.L418*C19790">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_2__args_2_.L417*C19767">
                <sol:before>
                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_1__args_1_.L416*C19744">
                    <sol:before>
                      <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L415*C19721">
                        <sol:before>
                          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes__memorydynargs.L414*C19679">
                            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L413*C19561"/>
                            <sol:storageLocate>memory</sol:storageLocate>
                            <sol:valueIs>newbytes[](3)</sol:valueIs>
                            <sol:nameIs>dynargs</sol:nameIs>
                            <sol:typeName>bytes[]</sol:typeName>
                          </sol:StateVar>
                        </sol:before>
                        <sol:assignSymbol>=</sol:assignSymbol>
                        <sol:assignRight>args[0]</sol:assignRight>
                        <sol:assignLeft>dynargs[0]</sol:assignLeft>
                      </sol:Assignment>
                    </sol:before>
                    <sol:assignSymbol>=</sol:assignSymbol>
                    <sol:assignRight>args[1]</sol:assignRight>
                    <sol:assignLeft>dynargs[1]</sol:assignLeft>
                  </sol:Assignment>
                </sol:before>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>args[2]</sol:assignRight>
                <sol:assignLeft>dynargs[2]</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:returnText>oraclize_query(datasource,dynargs,gaslimit)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_1__args_1_.L416*C19744"/>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.gaslimit.L413*C19619">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>gaslimit</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L413*C19585">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>oraclize_query</sol:nameIs>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes__memorydynargs.L414*C19679"/>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L415*C19721"/>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_2__args_2_.L417*C19767"/>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L413*C19655">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.id.L413*C19664">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L306*C14525">
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.gaslimit.L306*C14600">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>gaslimit</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_2__args_2_.L310*C14750">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_1__args_1_.L309*C14727">
                <sol:before>
                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L308*C14704">
                    <sol:before>
                      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.string__memorydynargs.L307*C14660">
                        <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L306*C14525"/>
                        <sol:storageLocate>memory</sol:storageLocate>
                        <sol:valueIs>newstring[](5)</sol:valueIs>
                        <sol:nameIs>dynargs</sol:nameIs>
                        <sol:typeName>string[]</sol:typeName>
                      </sol:StateVar>
                    </sol:before>
                    <sol:assignSymbol>=</sol:assignSymbol>
                    <sol:assignRight>args[0]</sol:assignRight>
                    <sol:assignLeft>dynargs[0]</sol:assignLeft>
                  </sol:Assignment>
                </sol:before>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>args[1]</sol:assignRight>
                <sol:assignLeft>dynargs[1]</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>args[2]</sol:assignRight>
            <sol:assignLeft>dynargs[2]</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.string__memorydynargs.L307*C14660"/>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L306*C14636">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.id.L306*C14645">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:nameIs>oraclize_query</sol:nameIs>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.args.L306*C14584">
            <sol:typeName>string[5]</sol:typeName>
            <sol:nameIs>args</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_1__args_1_.L309*C14727"/>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L308*C14704"/>
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_3__args_3_.L311*C14773">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_2__args_2_.L310*C14750"/>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>args[3]</sol:assignRight>
            <sol:assignLeft>dynargs[3]</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.timestamp.L306*C14549">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>timestamp</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L306*C14565">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_4__args_4_.L312*C14796">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_3__args_3_.L311*C14773"/>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>args[4]</sol:assignRight>
            <sol:assignLeft>dynargs[4]</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize_query_timestamp_datasource_dynargs_gaslimit_.L313*C14819">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_4__args_4_.L312*C14796"/>
            <sol:returnText>oraclize_query(timestamp,datasource,dynargs,gaslimit)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L184*C9404">
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.string__memorydynargs.L185*C9508">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L184*C9404"/>
            <sol:storageLocate>memory</sol:storageLocate>
            <sol:valueIs>newstring[](1)</sol:valueIs>
            <sol:nameIs>dynargs</sol:nameIs>
            <sol:typeName>string[]</sol:typeName>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize_query_datasource_dynargs_.L187*C9575">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L186*C9552">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.string__memorydynargs.L185*C9508"/>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>args[0]</sol:assignRight>
                <sol:assignLeft>dynargs[0]</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:returnText>oraclize_query(datasource,dynargs)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:nameIs>oraclize_query</sol:nameIs>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L184*C9428">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L186*C9552"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.args.L184*C9447">
            <sol:typeName>string[1]</sol:typeName>
            <sol:nameIs>args</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L184*C9484">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.id.L184*C9493">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>internal</sol:hasModifier>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L140*C6576">
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:nameIs>oraclize_query</sol:nameIs>
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintprice.L141*C6689">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L140*C6576"/>
            <sol:valueIs>oraclize.getPrice(datasource)</sol:valueIs>
            <sol:nameIs>price</sol:nameIs>
            <sol:typeName>uint</sol:typeName>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize.query2.value_price__0_datasource_arg1_arg2_.L143*C6814">
            <sol:before>
              <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.0.L142*C6776">
                <sol:before>
                  <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L142*C6734">
                    <sol:hasReturnValue rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.0.L142*C6776"/>
                    <sol:before>
                      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.price_1ether_tx.gasprice_200000.L142*C6734">
                        <sol:before>
                          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.price_1ether_tx.gasprice_200000.L142*C6734">
                            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L142*C6734"/>
                            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintprice.L141*C6689"/>
                            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.price_1ether_tx.gasprice_200000.L142*C6734"/>
                          </sol:FunctionIf>
                        </sol:before>
                        <sol:hasIfCondition>price&gt;1ether+tx.gasprice*200000</sol:hasIfCondition>
                      </sol:IfCondition>
                    </sol:before>
                  </sol:IfRight>
                </sol:before>
                <sol:returnText>0</sol:returnText>
              </sol:ReturnValue>
            </sol:before>
            <sol:returnText>oraclize.query2.value(price)(0,datasource,arg1,arg2)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L140*C6666">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.id.L140*C6675">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.price_1ether_tx.gasprice_200000.L142*C6734"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.arg1.L140*C6619">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>arg1</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.arg2.L140*C6632">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>arg2</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L140*C6600">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L324*C15224">
        <sol:nameIs>oraclize_query</sol:nameIs>
        <sol:hasIf>
          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.price_1ether_tx.gasprice_200000.L326*C15370">
            <sol:hasIfRight>
              <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L326*C15370">
                <sol:hasReturnValue>
                  <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.0.L326*C15412">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L326*C15370"/>
                    <sol:returnText>0</sol:returnText>
                  </sol:ReturnValue>
                </sol:hasReturnValue>
                <sol:before>
                  <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.price_1ether_tx.gasprice_200000.L326*C15370">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.price_1ether_tx.gasprice_200000.L326*C15370"/>
                    <sol:hasIfCondition>price&gt;1ether+tx.gasprice*200000</sol:hasIfCondition>
                  </sol:IfCondition>
                </sol:before>
              </sol:IfRight>
            </sol:hasIfRight>
            <sol:before>
              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintprice.L325*C15325">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L324*C15224"/>
                <sol:valueIs>oraclize.getPrice(datasource)</sol:valueIs>
                <sol:nameIs>price</sol:nameIs>
                <sol:typeName>uint</sol:typeName>
              </sol:StateVar>
            </sol:before>
            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.price_1ether_tx.gasprice_200000.L326*C15370"/>
          </sol:FunctionIf>
        </sol:hasIf>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize.queryN.value_price__0_datasource_args_.L328*C15486">
            <sol:before>
              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemoryargs.L327*C15450">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.0.L326*C15412"/>
                <sol:storageLocate>memory</sol:storageLocate>
                <sol:valueIs>ba2cbor(argN)</sol:valueIs>
                <sol:nameIs>args</sol:nameIs>
                <sol:typeName>bytes</sol:typeName>
              </sol:StateVar>
            </sol:before>
            <sol:returnText>oraclize.queryN.value(price)(0,datasource,args)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemoryargs.L327*C15450"/>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L324*C15248">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L324*C15302">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.id.L324*C15311">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.argN.L324*C15267">
            <sol:typeName>bytes[]</sol:typeName>
            <sol:nameIs>argN</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintprice.L325*C15325"/>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.stra2cbor.L633*C26548">
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L633*C26590">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.bytes.L633*C26599">
                <sol:typeName>bytes</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes__memoryelemArray.L637*C26692">
            <sol:before>
              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintoutputlen.L636*C26671">
                <sol:before>
                  <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintarrlen.L634*C26609">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.stra2cbor.L633*C26548"/>
                    <sol:valueIs>arr.length</sol:valueIs>
                    <sol:nameIs>arrlen</sol:nameIs>
                    <sol:typeName>uint</sol:typeName>
                  </sol:StateVar>
                </sol:before>
                <sol:valueIs>0</sol:valueIs>
                <sol:nameIs>outputlen</sol:nameIs>
                <sol:typeName>uint</sol:typeName>
              </sol:StateVar>
            </sol:before>
            <sol:storageLocate>memory</sol:storageLocate>
            <sol:valueIs>newbytes[](arrlen)</sol:valueIs>
            <sol:nameIs>elemArray</sol:nameIs>
            <sol:typeName>bytes[]</sol:typeName>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasFor>
          <sol:FunctionFor rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for.for_uinti_0i_arrleni____elemArray_i___bytes_arr_i___outputlen__elemArray_i_.length__elemArray_i_.length-1__23_3_.L638*C26741">
            <sol:conditionStep>i++</sol:conditionStep>
            <sol:hasForCondition>
              <sol:ForCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.i_arrlen.L638*C26741">
                <sol:conditionValue>arrlen</sol:conditionValue>
                <sol:conditionSymbol>&lt;</sol:conditionSymbol>
              </sol:ForCondition>
            </sol:hasForCondition>
            <sol:conditionVar>i</sol:conditionVar>
            <sol:hasStateVar>
              <sol:stateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.uinti.L638*C26741">
                <sol:valueIs>0</sol:valueIs>
                <sol:nameIs>i</sol:nameIs>
                <sol:typeName>uint</sol:typeName>
              </sol:stateVar>
            </sol:hasStateVar>
            <sol:containAssignment>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.outputlen__elemArray_i_.length__elemArray_i_.length-1__23_3.L640*C26811">
                <sol:before>
                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.elemArray_i___bytes_arr_i___.L639*C26778">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for.for_uinti_0i_arrleni____elemArray_i___bytes_arr_i___outputlen__elemArray_i_.length__elemArray_i_.length-1__23_3_.L638*C26741"/>
                    <sol:assignSymbol>=</sol:assignSymbol>
                    <sol:assignRight>(bytes(arr[i]))</sol:assignRight>
                    <sol:assignLeft>elemArray[i]</sol:assignLeft>
                  </sol:Assignment>
                </sol:before>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>outputlen+elemArray[i].length+(elemArray[i].length-1)/23+3</sol:assignRight>
                <sol:assignLeft>outputlen</sol:assignLeft>
              </sol:Assignment>
            </sol:containAssignment>
            <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.elemArray_i___bytes_arr_i___.L639*C26778"/>
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes__memoryelemArray.L637*C26692"/>
          </sol:FunctionFor>
        </sol:hasFor>
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.outputlen__byte_cborlen_.length.L644*C26972">
            <sol:before>
              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintcborlen.L643*C26941">
                <sol:before>
                  <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintctr.L642*C26926">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.outputlen__elemArray_i_.length__elemArray_i_.length-1__23_3.L640*C26811"/>
                    <sol:valueIs>0</sol:valueIs>
                    <sol:nameIs>ctr</sol:nameIs>
                    <sol:typeName>uint</sol:typeName>
                  </sol:StateVar>
                </sol:before>
                <sol:valueIs>arrlen+0x80</sol:valueIs>
                <sol:nameIs>cborlen</sol:nameIs>
                <sol:typeName>uint</sol:typeName>
              </sol:StateVar>
            </sol:before>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>outputlen+byte(cborlen).length</sol:assignRight>
            <sol:assignLeft>outputlen</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.arr.L633*C26567">
            <sol:typeName>string[]</sol:typeName>
            <sol:nameIs>arr</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintcborlen.L643*C26941"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintoutputlen.L636*C26671"/>
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemoryres.L645*C27008">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.outputlen__byte_cborlen_.length.L644*C26972"/>
            <sol:storageLocate>memory</sol:storageLocate>
            <sol:valueIs>newbytes(outputlen)</sol:valueIs>
            <sol:nameIs>res</sol:nameIs>
            <sol:typeName>bytes</sol:typeName>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintctr.L642*C26926"/>
        <sol:hasFor>
          <sol:FunctionFor rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for.for_i_0i_arrleni____res_ctr__0x5Fctr__for_uintx_0x_elemArray_i_.lengthx____if_x_23__0__uintelemcborlen_elemArray_i_.length-x__24?23:elemArray_i_.length-xelemcborlen__0x40uintlctr_ctrwhile_byte_elemcborlen_.length_ctr-lctr__res_ctr__byte_elemcborlen__ctr-lctr_ctr____res_ctr__elemArray_i__x_ctr___res_ctr__0xFFctr___.L650*C27131">
            <sol:operateVarible>
              <sol:VariableOperation rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprVaribleOp.ctr__.L668*C27611">
                <sol:before>
                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.res_ctr__0xFF.L667*C27593">
                    <sol:before>
                      <sol:VariableOperation rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprVaribleOp.ctr__.L665*C27582">
                        <sol:before>
                          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.res_ctr__elemArray_i__x_.L664*C27553">
                            <sol:before>
                              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_for_for_if_ifRight_varDeclare.uintlctr.L658*C27429">
                                <sol:before>
                                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.elemcborlen__0x40.L657*C27407">
                                    <sol:before>
                                      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_for_for_if_ifRight_varDeclare.uintelemcborlen.L656*C27325">
                                        <sol:before>
                                          <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_for_for_if_ifRight._.L655*C27305">
                                            <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_for_for_if_ifRight_varDeclare.uintlctr.L658*C27429"/>
                                            <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.elemcborlen__0x40.L657*C27407"/>
                                            <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_for_for_if_ifRight_varDeclare.uintelemcborlen.L656*C27325"/>
                                            <sol:before>
                                              <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_for_for_if.x_23__0.L655*C27305">
                                                <sol:before>
                                                  <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_for_if.x_23__0.L655*C27305">
                                                    <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_for_for_if_ifRight._.L655*C27305"/>
                                                    <sol:before>
                                                      <sol:FunctionFor rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_for_for.for_uintx_0x_elemArray_i_.lengthx____if_x_23__0__uintelemcborlen_elemArray_i_.length-x__24?23:elemArray_i_.length-xelemcborlen__0x40uintlctr_ctrwhile_byte_elemcborlen_.length_ctr-lctr__res_ctr__byte_elemcborlen__ctr-lctr_ctr____res_ctr__elemArray_i__x_ctr___.L653*C27189">
                                                        <sol:conditionStep
                                                        >x++</sol:conditionStep>
                                                        <sol:hasForCondition>
                                                          <sol:ForCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.x_elemArray_i_.length.L653*C27189">
                                                            <sol:conditionValue
                                                            >elemArray[i].length</sol:conditionValue>
                                                            <sol:conditionSymbol
                                                            >&lt;</sol:conditionSymbol>
                                                          </sol:ForCondition>
                                                        </sol:hasForCondition>
                                                        <sol:conditionVar
                                                        >x</sol:conditionVar>
                                                        <sol:hasStateVar>
                                                          <sol:stateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.uintx.L653*C27189">
                                                            <sol:valueIs
                                                            >0</sol:valueIs>
                                                            <sol:nameIs
                                                            >x</sol:nameIs>
                                                            <sol:typeName
                                                            >uint</sol:typeName>
                                                          </sol:stateVar>
                                                        </sol:hasStateVar>
                                                        <sol:operateVarible rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprVaribleOp.ctr__.L665*C27582"/>
                                                        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.res_ctr__elemArray_i__x_.L664*C27553"/>
                                                        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_for_if.x_23__0.L655*C27305"/>
                                                        <sol:before>
                                                          <sol:VariableOperation rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprVaribleOp.ctr__.L652*C27181">
                                                            <sol:before>
                                                              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.res_ctr__0x5F.L651*C27163">
    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for.for_i_0i_arrleni____res_ctr__0x5Fctr__for_uintx_0x_elemArray_i_.lengthx____if_x_23__0__uintelemcborlen_elemArray_i_.length-x__24?23:elemArray_i_.length-xelemcborlen__0x40uintlctr_ctrwhile_byte_elemcborlen_.length_ctr-lctr__res_ctr__byte_elemcborlen__ctr-lctr_ctr____res_ctr__elemArray_i__x_ctr___res_ctr__0xFFctr___.L650*C27131"/>
    <sol:assignSymbol>=</sol:assignSymbol>
    <sol:assignRight>0x5F</sol:assignRight>
    <sol:assignLeft>res[ctr]</sol:assignLeft>                 </sol:Assignment>
                                                            </sol:before>
                                                            <sol:opSymbol
                                                            >++</sol:opSymbol>
                                                            <sol:opVarible
                                                            >ctr</sol:opVarible>
                                                          </sol:VariableOperation>
                                                        </sol:before>
                                                      </sol:FunctionFor>
                                                    </sol:before>
                                                    <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_for_for_if.x_23__0.L655*C27305"/>
                                                  </sol:FunctionIf>
                                                </sol:before>
                                                <sol:hasIfCondition
                                                >x%23==0</sol:hasIfCondition>
                                              </sol:IfCondition>
                                            </sol:before>
                                          </sol:IfRight>
                                        </sol:before>
                                        <sol:valueIs>elemArray[i].length-x&gt;=24?23:elemArray[i].length-x</sol:valueIs>
                                        <sol:nameIs>elemcborlen</sol:nameIs>
                                        <sol:typeName>uint</sol:typeName>
                                      </sol:StateVar>
                                    </sol:before>
                                    <sol:assignSymbol>=</sol:assignSymbol>
                                    <sol:assignRight>elemcborlen+0x40</sol:assignRight>
                                    <sol:assignLeft>elemcborlen</sol:assignLeft>
                                  </sol:Assignment>
                                </sol:before>
                                <sol:valueIs>ctr</sol:valueIs>
                                <sol:nameIs>lctr</sol:nameIs>
                                <sol:typeName>uint</sol:typeName>
                              </sol:StateVar>
                            </sol:before>
                            <sol:assignSymbol>=</sol:assignSymbol>
                            <sol:assignRight>elemArray[i][x]</sol:assignRight>
                            <sol:assignLeft>res[ctr]</sol:assignLeft>
                          </sol:Assignment>
                        </sol:before>
                        <sol:opSymbol>++</sol:opSymbol>
                        <sol:opVarible>ctr</sol:opVarible>
                      </sol:VariableOperation>
                    </sol:before>
                    <sol:assignSymbol>=</sol:assignSymbol>
                    <sol:assignRight>0xFF</sol:assignRight>
                    <sol:assignLeft>res[ctr]</sol:assignLeft>
                  </sol:Assignment>
                </sol:before>
                <sol:opSymbol>++</sol:opSymbol>
                <sol:opVarible>ctr</sol:opVarible>
              </sol:VariableOperation>
            </sol:operateVarible>
            <sol:hasFor rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_for_for.for_uintx_0x_elemArray_i_.lengthx____if_x_23__0__uintelemcborlen_elemArray_i_.length-x__24?23:elemArray_i_.length-xelemcborlen__0x40uintlctr_ctrwhile_byte_elemcborlen_.length_ctr-lctr__res_ctr__byte_elemcborlen__ctr-lctr_ctr____res_ctr__elemArray_i__x_ctr___.L653*C27189"/>
            <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.res_ctr__0x5F.L651*C27163"/>
            <sol:hasForCondition>
              <sol:ForCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.i_arrlen.L650*C27131">
                <sol:conditionValue>arrlen</sol:conditionValue>
                <sol:conditionSymbol>&lt;</sol:conditionSymbol>
              </sol:ForCondition>
            </sol:hasForCondition>
            <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.res_ctr__0xFF.L667*C27593"/>
            <sol:condition>noDecelaration</sol:condition>
            <sol:conditionVar>noDeclaration</sol:conditionVar>
            <sol:conditionVar>i</sol:conditionVar>
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemoryres.L645*C27008"/>
            <sol:hasStateVar>
              <sol:stateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.i_0;.L650*C27131">
                <sol:valueIs>0</sol:valueIs>
                <sol:nameIs>i</sol:nameIs>
                <sol:typeName>null</sol:typeName>
              </sol:stateVar>
            </sol:hasStateVar>
            <sol:conditionStep>noDecelaration</sol:conditionStep>
            <sol:conditionStep>i++</sol:conditionStep>
            <sol:operateVarible rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprVaribleOp.ctr__.L652*C27181"/>
          </sol:FunctionFor>
        </sol:hasFor>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.res.L670*C27622">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprVaribleOp.ctr__.L668*C27611"/>
            <sol:returnText>res</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintarrlen.L634*C26609"/>
        <sol:nameIs>stra2cbor</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.__callback.L109*C4852">
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.proof.L109*C4901">
            <sol:typeName>bytes</sol:typeName>
            <sol:nameIs>proof</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.result.L109*C4886">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>result</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.myid.L109*C4872">
            <sol:typeName>bytes32</sol:typeName>
            <sol:nameIs>myid</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>__callback</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.strCompare.L527*C23677">
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintminLength.L530*C23803">
            <sol:before>
              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemoryb.L529*C23774">
                <sol:before>
                  <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemorya.L528*C23745">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.strCompare.L527*C23677"/>
                    <sol:storageLocate>memory</sol:storageLocate>
                    <sol:valueIs>bytes(_a)</sol:valueIs>
                    <sol:nameIs>a</sol:nameIs>
                    <sol:typeName>bytes</sol:typeName>
                  </sol:StateVar>
                </sol:before>
                <sol:storageLocate>memory</sol:storageLocate>
                <sol:valueIs>bytes(_b)</sol:valueIs>
                <sol:nameIs>b</sol:nameIs>
                <sol:typeName>bytes</sol:typeName>
              </sol:StateVar>
            </sol:before>
            <sol:valueIs>a.length</sol:valueIs>
            <sol:nameIs>minLength</sol:nameIs>
            <sol:typeName>uint</sol:typeName>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemoryb.L529*C23774"/>
        <sol:hasIf>
          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.b.length_minLength.L531*C23831">
            <sol:hasIfRight>
              <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L531*C23831">
                <sol:containAssignment>
                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.minLength_b.length.L531*C23857">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L531*C23831"/>
                    <sol:assignSymbol>=</sol:assignSymbol>
                    <sol:assignRight>b.length</sol:assignRight>
                    <sol:assignLeft>minLength</sol:assignLeft>
                  </sol:Assignment>
                </sol:containAssignment>
                <sol:before>
                  <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.b.length_minLength.L531*C23831">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.b.length_minLength.L531*C23831"/>
                    <sol:hasIfCondition>b.length&lt;minLength</sol:hasIfCondition>
                  </sol:IfCondition>
                </sol:before>
              </sol:IfRight>
            </sol:hasIfRight>
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintminLength.L530*C23803"/>
            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.b.length_minLength.L531*C23831"/>
          </sol:FunctionIf>
        </sol:hasIf>
        <sol:nameIs>strCompare</sol:nameIs>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L527*C23728">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.int.L527*C23737">
                <sol:typeName>int</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._a.L527*C23697">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_a</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasIf>
          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.a.length_b.length.L537*C23983">
            <sol:hasIfWrong>
              <sol:IfWrong rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifWrong._.L537*C23983">
                <sol:hasIf>
                  <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_if_ifWrong_if.a.length_b.length.L539*C24026">
                    <sol:hasIfWrong>
                      <sol:IfWrong rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if_ifWrong._.L539*C24026">
                        <sol:hasReturnValue>
                          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if_ifWrong_return.0.L542*C24069">
                            <sol:before>
                              <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if_ifRight_return.1.L540*C24052">
                                <sol:before>
                                  <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if_ifRight._.L539*C24026">
                                    <sol:hasReturnValue rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if_ifRight_return.1.L540*C24052"/>
                                    <sol:before>
                                      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if.a.length_b.length.L539*C24026">
                                        <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_if_ifWrong_if.a.length_b.length.L539*C24026"/>
                                        <sol:hasIfCondition>a.length&gt;b.length</sol:hasIfCondition>
                                      </sol:IfCondition>
                                    </sol:before>
                                  </sol:IfRight>
                                </sol:before>
                                <sol:returnText>1</sol:returnText>
                              </sol:ReturnValue>
                            </sol:before>
                            <sol:returnText>0</sol:returnText>
                          </sol:ReturnValue>
                        </sol:hasReturnValue>
                        <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if.a.length_b.length.L539*C24026"/>
                      </sol:IfWrong>
                    </sol:hasIfWrong>
                    <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if_ifRight._.L539*C24026"/>
                    <sol:before>
                      <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.-1.L538*C24009">
                        <sol:before>
                          <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L537*C23983">
                            <sol:hasReturnValue rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.-1.L538*C24009"/>
                            <sol:before>
                              <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.a.length_b.length.L537*C23983">
                                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.a.length_b.length.L537*C23983"/>
                                <sol:hasIfCondition>a.length&lt;b.length</sol:hasIfCondition>
                              </sol:IfCondition>
                            </sol:before>
                          </sol:IfRight>
                        </sol:before>
                        <sol:returnText>-1</sol:returnText>
                      </sol:ReturnValue>
                    </sol:before>
                    <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if.a.length_b.length.L539*C24026"/>
                  </sol:FunctionIf>
                </sol:hasIf>
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.a.length_b.length.L537*C23983"/>
              </sol:IfWrong>
            </sol:hasIfWrong>
            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L537*C23983"/>
            <sol:before>
              <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_for_if_ifWrong_if_ifRight_return.1.L536*C23972">
                <sol:before>
                  <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_for_if_ifWrong_if_ifRight._.L535*C23954">
                    <sol:hasReturnValue rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_for_if_ifWrong_if_ifRight_return.1.L536*C23972"/>
                    <sol:before>
                      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_for_if_ifWrong_if.a_i__b_i_.L535*C23954">
                        <sol:before>
                          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_for_if_ifWrong_if.a_i__b_i_.L535*C23954">
                            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_for_if_ifWrong_if_ifRight._.L535*C23954"/>
                            <sol:before>
                              <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if_ifRight_return.-1.L534*C23937">
                                <sol:before>
                                  <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if_ifRight._.L533*C23919">
                                    <sol:hasReturnValue rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if_ifRight_return.-1.L534*C23937"/>
                                    <sol:before>
                                      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if.a_i__b_i_.L533*C23919">
                                        <sol:before>
                                          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_for_if.a_i__b_i_.L533*C23919">
                                            <sol:hasIfWrong>
                                              <sol:IfWrong rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if_ifWrong._.L533*C23919">
                                                <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_for_if_ifWrong_if.a_i__b_i_.L535*C23954"/>
                                                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if.a_i__b_i_.L533*C23919"/>
                                              </sol:IfWrong>
                                            </sol:hasIfWrong>
                                            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if_ifRight._.L533*C23919"/>
                                            <sol:before>
                                              <sol:FunctionFor rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for.for_uinti_0i_minLengthi___if_a_i__b_i__return-1elseif_a_i__b_i__return1.L532*C23880">
                                                <sol:conditionStep
                                                >i++</sol:conditionStep>
                                                <sol:hasForCondition>
                                                  <sol:ForCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.i_minLength.L532*C23880">
                                                    <sol:conditionValue
                                                    >minLength</sol:conditionValue>
                                                    <sol:conditionSymbol
                                                    >&lt;</sol:conditionSymbol>
                                                  </sol:ForCondition>
                                                </sol:hasForCondition>
                                                <sol:conditionVar
                                                >i</sol:conditionVar>
                                                <sol:hasStateVar>
                                                  <sol:stateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.uinti.L532*C23880">
                                                    <sol:valueIs
                                                    >0</sol:valueIs>
                                                    <sol:nameIs
                                                    >i</sol:nameIs>
                                                    <sol:typeName
                                                    >uint</sol:typeName>
                                                  </sol:stateVar>
                                                </sol:hasStateVar>
                                                <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_for_if.a_i__b_i_.L533*C23919"/>
                                                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.minLength_b.length.L531*C23857"/>
                                              </sol:FunctionFor>
                                            </sol:before>
                                            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if.a_i__b_i_.L533*C23919"/>
                                          </sol:FunctionIf>
                                        </sol:before>
                                        <sol:hasIfCondition>a[i]&lt;b[i]</sol:hasIfCondition>
                                      </sol:IfCondition>
                                    </sol:before>
                                  </sol:IfRight>
                                </sol:before>
                                <sol:returnText>-1</sol:returnText>
                              </sol:ReturnValue>
                            </sol:before>
                            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_for_if_ifWrong_if.a_i__b_i_.L535*C23954"/>
                          </sol:FunctionIf>
                        </sol:before>
                        <sol:hasIfCondition>a[i]&gt;b[i]</sol:hasIfCondition>
                      </sol:IfCondition>
                    </sol:before>
                  </sol:IfRight>
                </sol:before>
                <sol:returnText>1</sol:returnText>
              </sol:ReturnValue>
            </sol:before>
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if_ifRight_return.-1.L534*C23937"/>
            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.a.length_b.length.L537*C23983"/>
          </sol:FunctionIf>
        </sol:hasIf>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._b.L527*C23708">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_b</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemorya.L528*C23745"/>
        <sol:hasFor rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for.for_uinti_0i_minLengthi___if_a_i__b_i__return-1elseif_a_i__b_i__return1.L532*C23880"/>
        <sol:hasModifier>internal</sol:hasModifier>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L374*C17875">
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.args.L374*C17934">
            <sol:typeName>bytes[2]</sol:typeName>
            <sol:nameIs>args</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_1__args_1_.L377*C18059">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L376*C18036">
                <sol:before>
                  <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes__memorydynargs.L375*C17994">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L374*C17875"/>
                    <sol:storageLocate>memory</sol:storageLocate>
                    <sol:valueIs>newbytes[](2)</sol:valueIs>
                    <sol:nameIs>dynargs</sol:nameIs>
                    <sol:typeName>bytes[]</sol:typeName>
                  </sol:StateVar>
                </sol:before>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>args[0]</sol:assignRight>
                <sol:assignLeft>dynargs[0]</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>args[1]</sol:assignRight>
            <sol:assignLeft>dynargs[1]</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L374*C17915">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L376*C18036"/>
        <sol:nameIs>oraclize_query</sol:nameIs>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.timestamp.L374*C17899">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>timestamp</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize_query_timestamp_datasource_dynargs_.L378*C18082">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_1__args_1_.L377*C18059"/>
            <sol:returnText>oraclize_query(timestamp,datasource,dynargs)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L374*C17970">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.id.L374*C17979">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes__memorydynargs.L375*C17994"/>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L479*C22095">
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_3__args_3_.L484*C22324">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_2__args_2_.L483*C22301">
                <sol:before>
                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_1__args_1_.L482*C22278">
                    <sol:before>
                      <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L481*C22255">
                        <sol:before>
                          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes__memorydynargs.L480*C22213">
                            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L479*C22095"/>
                            <sol:storageLocate>memory</sol:storageLocate>
                            <sol:valueIs>newbytes[](5)</sol:valueIs>
                            <sol:nameIs>dynargs</sol:nameIs>
                            <sol:typeName>bytes[]</sol:typeName>
                          </sol:StateVar>
                        </sol:before>
                        <sol:assignSymbol>=</sol:assignSymbol>
                        <sol:assignRight>args[0]</sol:assignRight>
                        <sol:assignLeft>dynargs[0]</sol:assignLeft>
                      </sol:Assignment>
                    </sol:before>
                    <sol:assignSymbol>=</sol:assignSymbol>
                    <sol:assignRight>args[1]</sol:assignRight>
                    <sol:assignLeft>dynargs[1]</sol:assignLeft>
                  </sol:Assignment>
                </sol:before>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>args[2]</sol:assignRight>
                <sol:assignLeft>dynargs[2]</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>args[3]</sol:assignRight>
            <sol:assignLeft>dynargs[3]</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize_query_datasource_dynargs_gaslimit_.L486*C22370">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_4__args_4_.L485*C22347">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_3__args_3_.L484*C22324"/>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>args[4]</sol:assignRight>
                <sol:assignLeft>dynargs[4]</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:returnText>oraclize_query(datasource,dynargs,gaslimit)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_4__args_4_.L485*C22347"/>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_2__args_2_.L483*C22301"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.args.L479*C22138">
            <sol:typeName>bytes[5]</sol:typeName>
            <sol:nameIs>args</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L479*C22189">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.id.L479*C22198">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.gaslimit.L479*C22153">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>gaslimit</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes__memorydynargs.L480*C22213"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L479*C22119">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_1__args_1_.L482*C22278"/>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L481*C22255"/>
        <sol:nameIs>oraclize_query</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.parseInt.L596*C25730">
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.parseInt__a_0_.L597*C25786">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.parseInt.L596*C25730"/>
            <sol:returnText>parseInt(_a,0)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L596*C25768">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.uint.L596*C25777">
                <sol:typeName>uint</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._a.L596*C25748">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_a</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>parseInt</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L166*C8275">
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.argN.L166*C8334">
            <sol:typeName>string[]</sol:typeName>
            <sol:nameIs>argN</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemoryargs.L169*C8518">
            <sol:before>
              <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.0.L168*C8480">
                <sol:before>
                  <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L168*C8438">
                    <sol:hasReturnValue rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.0.L168*C8480"/>
                    <sol:before>
                      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.price_1ether_tx.gasprice_200000.L168*C8438">
                        <sol:before>
                          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.price_1ether_tx.gasprice_200000.L168*C8438">
                            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L168*C8438"/>
                            <sol:before>
                              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintprice.L167*C8393">
                                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L166*C8275"/>
                                <sol:valueIs>oraclize.getPrice(datasource)</sol:valueIs>
                                <sol:nameIs>price</sol:nameIs>
                                <sol:typeName>uint</sol:typeName>
                              </sol:StateVar>
                            </sol:before>
                            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.price_1ether_tx.gasprice_200000.L168*C8438"/>
                          </sol:FunctionIf>
                        </sol:before>
                        <sol:hasIfCondition>price&gt;1ether+tx.gasprice*200000</sol:hasIfCondition>
                      </sol:IfCondition>
                    </sol:before>
                  </sol:IfRight>
                </sol:before>
                <sol:returnText>0</sol:returnText>
              </sol:ReturnValue>
            </sol:before>
            <sol:storageLocate>memory</sol:storageLocate>
            <sol:valueIs>stra2cbor(argN)</sol:valueIs>
            <sol:nameIs>args</sol:nameIs>
            <sol:typeName>bytes</sol:typeName>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L166*C8370">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.id.L166*C8379">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize.queryN.value_price__timestamp_datasource_args_.L170*C8556">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemoryargs.L169*C8518"/>
            <sol:returnText>oraclize.queryN.value(price)(timestamp,datasource,args)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.timestamp.L166*C8299">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>timestamp</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintprice.L167*C8393"/>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:nameIs>oraclize_query</sol:nameIs>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L166*C8315">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.price_1ether_tx.gasprice_200000.L168*C8438"/>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.indexOf.L544*C24083">
        <sol:hasIf>
          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.h.length_1__n.length_1___n.length_h.length_.L547*C24230">
            <sol:hasIfWrong>
              <sol:IfWrong rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifWrong._.L547*C24230">
                <sol:hasIf>
                  <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_if_ifWrong_if.h.length__2__128-1_.L549*C24306">
                    <sol:hasIfWrong>
                      <sol:IfWrong rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if_ifWrong._.L549*C24306">
                        <sol:hasReturnValue>
                          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if_ifWrong_return.-1.L567*C24611">
                            <sol:before>
                              <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#100_con_fun_if_ifWrong_if_ifWrong_for_if_ifRight_if_ifRight_return.int_i_.L564*C24589">
                                <sol:before>
                                  <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#10_con_fun_if_ifWrong_if_ifWrong_for_if_ifRight_if_ifRight._.L563*C24563">
                                    <sol:hasReturnValue rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#100_con_fun_if_ifWrong_if_ifWrong_for_if_ifRight_if_ifRight_return.int_i_.L564*C24589"/>
                                    <sol:before>
                                      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#10_con_fun_if_ifWrong_if_ifWrong_for_if_ifRight_if.subindex__n.length.L563*C24563">
                                        <sol:before>
                                          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#9_con_fun_if_ifWrong_if_ifWrong_for_if_ifRight_if.subindex__n.length.L563*C24563">
                                            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#10_con_fun_if_ifWrong_if_ifWrong_for_if_ifRight_if_ifRight._.L563*C24563"/>
                                            <sol:before>
                                              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.subindex_1.L558*C24438">
                                                <sol:before>
                                                  <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#8_con_fun_if_ifWrong_if_ifWrong_for_if_ifRight._.L556*C24416">
                                                    <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#9_con_fun_if_ifWrong_if_ifWrong_for_if_ifRight_if.subindex__n.length.L563*C24563"/>
                                                    <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.subindex_1.L558*C24438"/>
                                                    <sol:before>
                                                      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#8_con_fun_if_ifWrong_if_ifWrong_for_if.h_i___n_0_.L556*C24416">
                                                        <sol:before>
                                                          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#7_con_fun_if_ifWrong_if_ifWrong_for_if.h_i___n_0_.L556*C24416">
                                                            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#8_con_fun_if_ifWrong_if_ifWrong_for_if_ifRight._.L556*C24416"/>
                                                            <sol:before>
                                                              <sol:FunctionFor rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_if_ifWrong_if_ifWrong_for.for_uinti_0i_h.lengthi____if_h_i___n_0___subindex_1while_subindex_n.length&amp;&amp;_i_subindex__h.length&amp;&amp;h_i_subindex___n_subindex___subindex___if_subindex__n.length_returnint_i___.L554*C24375">
    <sol:conditionStep>i++</sol:conditionStep>
    <sol:hasForCondition>
      <sol:ForCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.i_h.length.L554*C24375">
        <sol:conditionValue>h.length</sol:conditionValue>
        <sol:conditionSymbol>&lt;</sol:conditionSymbol>
      </sol:ForCondition>
    </sol:hasForCondition>
    <sol:conditionVar>i</sol:conditionVar>
    <sol:hasStateVar>
      <sol:stateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.uinti.L554*C24375">
        <sol:valueIs>0</sol:valueIs>
        <sol:nameIs>i</sol:nameIs>
        <sol:typeName>uint</sol:typeName>
      </sol:stateVar>
    </sol:hasStateVar>
    <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#7_con_fun_if_ifWrong_if_ifWrong_for_if.h_i___n_0_.L556*C24416"/>
    <sol:before>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if_ifWrong_varDeclare.uintsubindex.L553*C24355">
        <sol:before>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if_ifRight_return.-1.L550*C24334">
            <sol:before>
              <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if_ifRight._.L549*C24306">
                <sol:conditionStep>i++</sol:conditionStep>
                <sol:hasForCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.i_h.length.L554*C24375"/>
                <sol:conditionVar>i</sol:conditionVar>
                <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.uinti.L554*C24375"/>
                <sol:hasReturnValue rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if_ifRight_return.-1.L550*C24334"/>
                <sol:before>
                  <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if.h.length__2__128-1_.L549*C24306">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_if_ifWrong_if.h.length__2__128-1_.L549*C24306"/>
                    <sol:hasIfCondition>h.length&gt;(2**128-1)</sol:hasIfCondition>
                  </sol:IfCondition>
                </sol:before>
              </sol:IfRight>
            </sol:before>
            <sol:returnText>-1</sol:returnText>
          </sol:ReturnValue>
        </sol:before>
        <sol:valueIs>0</sol:valueIs>
        <sol:nameIs>subindex</sol:nameIs>
        <sol:typeName>uint</sol:typeName>
      </sol:StateVar>
    </sol:before>                                             </sol:FunctionFor>
                                                            </sol:before>
                                                            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#8_con_fun_if_ifWrong_if_ifWrong_for_if.h_i___n_0_.L556*C24416"/>
                                                          </sol:FunctionIf>
                                                        </sol:before>
                                                        <sol:hasIfCondition
                                                        >h[i]==n[0]</sol:hasIfCondition>
                                                      </sol:IfCondition>
                                                    </sol:before>
                                                  </sol:IfRight>
                                                </sol:before>
                                                <sol:assignSymbol
                                                >=</sol:assignSymbol>
                                                <sol:assignRight
                                                >1</sol:assignRight>
                                                <sol:assignLeft
                                                >subindex</sol:assignLeft>
                                              </sol:Assignment>
                                            </sol:before>
                                            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#10_con_fun_if_ifWrong_if_ifWrong_for_if_ifRight_if.subindex__n.length.L563*C24563"/>
                                          </sol:FunctionIf>
                                        </sol:before>
                                        <sol:hasIfCondition>subindex==n.length</sol:hasIfCondition>
                                      </sol:IfCondition>
                                    </sol:before>
                                  </sol:IfRight>
                                </sol:before>
                                <sol:returnText>int(i)</sol:returnText>
                              </sol:ReturnValue>
                            </sol:before>
                            <sol:returnText>-1</sol:returnText>
                          </sol:ReturnValue>
                        </sol:hasReturnValue>
                        <sol:hasFor rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_if_ifWrong_if_ifWrong_for.for_uinti_0i_h.lengthi____if_h_i___n_0___subindex_1while_subindex_n.length&amp;&amp;_i_subindex__h.length&amp;&amp;h_i_subindex___n_subindex___subindex___if_subindex__n.length_returnint_i___.L554*C24375"/>
                        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if_ifWrong_varDeclare.uintsubindex.L553*C24355"/>
                        <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if.h.length__2__128-1_.L549*C24306"/>
                      </sol:IfWrong>
                    </sol:hasIfWrong>
                    <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if_ifRight._.L549*C24306"/>
                    <sol:before>
                      <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.-1.L548*C24289">
                        <sol:before>
                          <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L547*C24230">
                            <sol:conditionStep>i++</sol:conditionStep>
                            <sol:hasForCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.i_h.length.L554*C24375"/>
                            <sol:conditionVar>i</sol:conditionVar>
                            <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.uinti.L554*C24375"/>
                            <sol:hasReturnValue rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.-1.L548*C24289"/>
                            <sol:before>
                              <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.h.length_1__n.length_1___n.length_h.length_.L547*C24230">
                                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.h.length_1__n.length_1___n.length_h.length_.L547*C24230"/>
                                <sol:hasIfCondition>h.length&lt;1||n.length&lt;1||(n.length&gt;h.length)</sol:hasIfCondition>
                              </sol:IfCondition>
                            </sol:before>
                          </sol:IfRight>
                        </sol:before>
                        <sol:returnText>-1</sol:returnText>
                      </sol:ReturnValue>
                    </sol:before>
                    <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_if_ifWrong_if.h.length__2__128-1_.L549*C24306"/>
                  </sol:FunctionIf>
                </sol:hasIf>
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.h.length_1__n.length_1___n.length_h.length_.L547*C24230"/>
              </sol:IfWrong>
            </sol:hasIfWrong>
            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L547*C24230"/>
            <sol:before>
              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemoryn.L546*C24196">
                <sol:before>
                  <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemoryh.L545*C24160">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.indexOf.L544*C24083"/>
                    <sol:storageLocate>memory</sol:storageLocate>
                    <sol:valueIs>bytes(_haystack)</sol:valueIs>
                    <sol:nameIs>h</sol:nameIs>
                    <sol:typeName>bytes</sol:typeName>
                  </sol:StateVar>
                </sol:before>
                <sol:storageLocate>memory</sol:storageLocate>
                <sol:valueIs>bytes(_needle)</sol:valueIs>
                <sol:nameIs>n</sol:nameIs>
                <sol:typeName>bytes</sol:typeName>
              </sol:StateVar>
            </sol:before>
            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.h.length_1__n.length_1___n.length_h.length_.L547*C24230"/>
          </sol:FunctionIf>
        </sol:hasIf>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemoryn.L546*C24196"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemoryh.L545*C24160"/>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L544*C24143">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.int.L544*C24152">
                <sol:typeName>int</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._needle.L544*C24118">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_needle</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._haystack.L544*C24100">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_haystack</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>indexOf</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L406*C19247">
        <sol:nameIs>oraclize_query</sol:nameIs>
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes__memorydynargs.L407*C19381">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L406*C19247"/>
            <sol:storageLocate>memory</sol:storageLocate>
            <sol:valueIs>newbytes[](3)</sol:valueIs>
            <sol:nameIs>dynargs</sol:nameIs>
            <sol:typeName>bytes[]</sol:typeName>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_1__args_1_.L409*C19446">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L408*C19423">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes__memorydynargs.L407*C19381"/>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>args[0]</sol:assignRight>
                <sol:assignLeft>dynargs[0]</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>args[1]</sol:assignRight>
            <sol:assignLeft>dynargs[1]</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L406*C19287">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.args.L406*C19306">
            <sol:typeName>bytes[3]</sol:typeName>
            <sol:nameIs>args</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.timestamp.L406*C19271">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>timestamp</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize_query_timestamp_datasource_dynargs_gaslimit_.L411*C19492">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_2__args_2_.L410*C19469">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_1__args_1_.L409*C19446"/>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>args[2]</sol:assignRight>
                <sol:assignLeft>dynargs[2]</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:returnText>oraclize_query(timestamp,datasource,dynargs,gaslimit)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_2__args_2_.L410*C19469"/>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L408*C19423"/>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L406*C19357">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.id.L406*C19366">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.gaslimit.L406*C19321">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>gaslimit</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L386*C18432">
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L386*C18456">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize_query_datasource_dynargs_gaslimit_.L390*C18638">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_1__args_1_.L389*C18615">
                <sol:before>
                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L388*C18592">
                    <sol:before>
                      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes__memorydynargs.L387*C18550">
                        <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L386*C18432"/>
                        <sol:storageLocate>memory</sol:storageLocate>
                        <sol:valueIs>newbytes[](2)</sol:valueIs>
                        <sol:nameIs>dynargs</sol:nameIs>
                        <sol:typeName>bytes[]</sol:typeName>
                      </sol:StateVar>
                    </sol:before>
                    <sol:assignSymbol>=</sol:assignSymbol>
                    <sol:assignRight>args[0]</sol:assignRight>
                    <sol:assignLeft>dynargs[0]</sol:assignLeft>
                  </sol:Assignment>
                </sol:before>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>args[1]</sol:assignRight>
                <sol:assignLeft>dynargs[1]</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:returnText>oraclize_query(datasource,dynargs,gaslimit)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes__memorydynargs.L387*C18550"/>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_1__args_1_.L389*C18615"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.args.L386*C18475">
            <sol:typeName>bytes[2]</sol:typeName>
            <sol:nameIs>args</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>oraclize_query</sol:nameIs>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L386*C18526">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.id.L386*C18535">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.gaslimit.L386*C18490">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>gaslimit</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L388*C18592"/>
        <sol:hasModifier>internal</sol:hasModifier>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.safer_ecrecover.L862*C36198">
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.s.L862*C36257">
            <sol:typeName>bytes32</sol:typeName>
            <sol:nameIs>s</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.r.L862*C36246">
            <sol:typeName>bytes32</sol:typeName>
            <sol:nameIs>r</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L862*C36277">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.address.L862*C36292">
                <sol:typeName>address</sol:typeName>
              </sol:Param>
            </sol:hasParam>
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.bool.L862*C36286">
                <sol:typeName>bool</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.boolret.L869*C36646">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.safer_ecrecover.L862*C36198"/>
            <sol:valueIs>null</sol:valueIs>
            <sol:nameIs>ret</sol:nameIs>
            <sol:typeName>bool</sol:typeName>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.v.L862*C36237">
            <sol:typeName>uint8</sol:typeName>
            <sol:nameIs>v</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return._ret_addr_.L882*C36966">
            <sol:before>
              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.addressaddr.L870*C36657">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.boolret.L869*C36646"/>
                <sol:valueIs>null</sol:valueIs>
                <sol:nameIs>addr</sol:nameIs>
                <sol:typeName>address</sol:typeName>
              </sol:StateVar>
            </sol:before>
            <sol:returnText>(ret,addr)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.hash.L862*C36223">
            <sol:typeName>bytes32</sol:typeName>
            <sol:nameIs>hash</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.addressaddr.L870*C36657"/>
        <sol:nameIs>safer_ecrecover</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.week.L44*C2425">
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:valueIs>60*60*24*7</sol:valueIs>
        <sol:typeName>uint</sol:typeName>
        <sol:nameIs>week</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.ecrecovery.L885*C37105">
        <sol:hasIf>
          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.sig.length!_65.L889*C37220">
            <sol:hasIfRight>
              <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L889*C37220">
                <sol:hasReturnValue>
                  <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return._false_0_.L890*C37243">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L889*C37220"/>
                    <sol:returnText>(false,0)</sol:returnText>
                  </sol:ReturnValue>
                </sol:hasReturnValue>
                <sol:before>
                  <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.sig.length!_65.L889*C37220">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.sig.length!_65.L889*C37220"/>
                    <sol:hasIfCondition>sig.length!=65</sol:hasIfCondition>
                  </sol:IfCondition>
                </sol:before>
              </sol:IfRight>
            </sol:hasIfRight>
            <sol:before>
              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uint8v.L888*C37210">
                <sol:before>
                  <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes32s.L887*C37198">
                    <sol:before>
                      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes32r.L886*C37186">
                        <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.ecrecovery.L885*C37105"/>
                        <sol:valueIs>null</sol:valueIs>
                        <sol:nameIs>r</sol:nameIs>
                        <sol:typeName>bytes32</sol:typeName>
                      </sol:StateVar>
                    </sol:before>
                    <sol:valueIs>null</sol:valueIs>
                    <sol:nameIs>s</sol:nameIs>
                    <sol:typeName>bytes32</sol:typeName>
                  </sol:StateVar>
                </sol:before>
                <sol:valueIs>null</sol:valueIs>
                <sol:nameIs>v</sol:nameIs>
                <sol:typeName>uint8</sol:typeName>
              </sol:StateVar>
            </sol:before>
            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.sig.length!_65.L889*C37220"/>
          </sol:FunctionIf>
        </sol:hasIf>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uint8v.L888*C37210"/>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.safer_ecrecover_hash_v_r_s_.L915*C38179">
            <sol:before>
              <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return._false_0_.L914*C38159">
                <sol:before>
                  <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L913*C38134">
                    <sol:hasReturnValue rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return._false_0_.L914*C38159"/>
                    <sol:before>
                      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.v!_27&amp;&amp;v!_28.L913*C38134">
                        <sol:before>
                          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.v!_27&amp;&amp;v!_28.L913*C38134">
                            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L913*C38134"/>
                            <sol:before>
                              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.v__27.L912*C38124">
                                <sol:before>
                                  <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L911*C38111">
                                    <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.v__27.L912*C38124"/>
                                    <sol:before>
                                      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.v_27.L911*C38111">
                                        <sol:before>
                                          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.v_27.L911*C38111">
                                            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L911*C38111"/>
                                            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return._false_0_.L890*C37243"/>
                                            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.v_27.L911*C38111"/>
                                          </sol:FunctionIf>
                                        </sol:before>
                                        <sol:hasIfCondition>v&lt;27</sol:hasIfCondition>
                                      </sol:IfCondition>
                                    </sol:before>
                                  </sol:IfRight>
                                </sol:before>
                                <sol:assignSymbol>=</sol:assignSymbol>
                                <sol:assignRight>v+27</sol:assignRight>
                                <sol:assignLeft>v</sol:assignLeft>
                              </sol:Assignment>
                            </sol:before>
                            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.v!_27&amp;&amp;v!_28.L913*C38134"/>
                          </sol:FunctionIf>
                        </sol:before>
                        <sol:hasIfCondition>v!=27&amp;&amp;v!=28</sol:hasIfCondition>
                      </sol:IfCondition>
                    </sol:before>
                  </sol:IfRight>
                </sol:before>
                <sol:returnText>(false,0)</sol:returnText>
              </sol:ReturnValue>
            </sol:before>
            <sol:returnText>safer_ecrecover(hash,v,r,s)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.v!_27&amp;&amp;v!_28.L913*C38134"/>
        <sol:nameIs>ecrecovery</sol:nameIs>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes32r.L886*C37186"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.hash.L885*C37125">
            <sol:typeName>bytes32</sol:typeName>
            <sol:nameIs>hash</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.sig.L885*C37139">
            <sol:typeName>bytes</sol:typeName>
            <sol:nameIs>sig</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes32s.L887*C37198"/>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L885*C37159">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.address.L885*C37174">
                <sol:typeName>address</sol:typeName>
              </sol:Param>
            </sol:hasParam>
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.bool.L885*C37168">
                <sol:typeName>bool</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.v_27.L911*C38111"/>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.day.L43*C2394">
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:valueIs>60*60*24</sol:valueIs>
        <sol:typeName>uint</sol:typeName>
        <sol:nameIs>day</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_randomDS_proofVerify__returnCode.L794*C32496">
        <sol:hasIf>
          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.proofVerified__false.L798*C32885">
            <sol:hasIfRight>
              <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L798*C32885">
                <sol:hasReturnValue>
                  <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.2.L798*C32913">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L798*C32885"/>
                    <sol:returnText>2</sol:returnText>
                  </sol:ReturnValue>
                </sol:hasReturnValue>
                <sol:before>
                  <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.proofVerified__false.L798*C32885">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.proofVerified__false.L798*C32885"/>
                    <sol:hasIfCondition>proofVerified==false</sol:hasIfCondition>
                  </sol:IfCondition>
                </sol:before>
              </sol:IfRight>
            </sol:hasIfRight>
            <sol:before>
              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.boolproofVerified.L797*C32765">
                <sol:before>
                  <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.1.L796*C32754">
                    <sol:before>
                      <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L796*C32692">
                        <sol:hasReturnValue rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.1.L796*C32754"/>
                        <sol:before>
                          <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.__proof_0_!_&quot;L&quot;_____proof_1_!_&quot;P&quot;_____proof_2_!_1_.L796*C32692">
                            <sol:before>
                              <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.__proof_0_!_&quot;L&quot;_____proof_1_!_&quot;P&quot;_____proof_2_!_1_.L796*C32692">
                                <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L796*C32692"/>
                                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_randomDS_proofVerify__returnCode.L794*C32496"/>
                                <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.__proof_0_!_&quot;L&quot;_____proof_1_!_&quot;P&quot;_____proof_2_!_1_.L796*C32692"/>
                              </sol:FunctionIf>
                            </sol:before>
                            <sol:hasIfCondition>(_proof[0]!="L")||(_proof[1]!="P")||(_proof[2]!=1)</sol:hasIfCondition>
                          </sol:IfCondition>
                        </sol:before>
                      </sol:IfRight>
                    </sol:before>
                    <sol:returnText>1</sol:returnText>
                  </sol:ReturnValue>
                </sol:before>
                <sol:valueIs>oraclize_randomDS_proofVerify__main(_proof,_queryId,bytes(_result),oraclize_getNetworkName())</sol:valueIs>
                <sol:nameIs>proofVerified</sol:nameIs>
                <sol:typeName>bool</sol:typeName>
              </sol:StateVar>
            </sol:before>
            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.proofVerified__false.L798*C32885"/>
          </sol:FunctionIf>
        </sol:hasIf>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._result.L794*C32565">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_result</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>oraclize_randomDS_proofVerify__returnCode</sol:nameIs>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L794*C32604">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.uint8.L794*C32613">
                <sol:typeName>uint8</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.boolproofVerified.L797*C32765"/>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.0.L799*C32924">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.2.L798*C32913"/>
            <sol:returnText>0</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._proof.L794*C32581">
            <sol:typeName>bytes</sol:typeName>
            <sol:nameIs>_proof</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._queryId.L794*C32547">
            <sol:typeName>bytes32</sol:typeName>
            <sol:nameIs>_queryId</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.__proof_0_!_&quot;L&quot;_____proof_1_!_&quot;P&quot;_____proof_2_!_1_.L796*C32692"/>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_cbAddress.L488*C22428">
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize.cbAddress__.L489*C22499">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_cbAddress.L488*C22428"/>
            <sol:returnText>oraclize.cbAddress()</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L488*C22479">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.address.L488*C22488">
                <sol:typeName>address</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:nameIs>oraclize_cbAddress</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L452*C21092">
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L454*C21237">
            <sol:before>
              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes__memorydynargs.L453*C21195">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L452*C21092"/>
                <sol:storageLocate>memory</sol:storageLocate>
                <sol:valueIs>newbytes[](5)</sol:valueIs>
                <sol:nameIs>dynargs</sol:nameIs>
                <sol:typeName>bytes[]</sol:typeName>
              </sol:StateVar>
            </sol:before>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>args[0]</sol:assignRight>
            <sol:assignLeft>dynargs[0]</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:nameIs>oraclize_query</sol:nameIs>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize_query_datasource_dynargs_.L459*C21352">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_4__args_4_.L458*C21329">
                <sol:before>
                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_3__args_3_.L457*C21306">
                    <sol:before>
                      <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_2__args_2_.L456*C21283">
                        <sol:before>
                          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_1__args_1_.L455*C21260">
                            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L454*C21237"/>
                            <sol:assignSymbol>=</sol:assignSymbol>
                            <sol:assignRight>args[1]</sol:assignRight>
                            <sol:assignLeft>dynargs[1]</sol:assignLeft>
                          </sol:Assignment>
                        </sol:before>
                        <sol:assignSymbol>=</sol:assignSymbol>
                        <sol:assignRight>args[2]</sol:assignRight>
                        <sol:assignLeft>dynargs[2]</sol:assignLeft>
                      </sol:Assignment>
                    </sol:before>
                    <sol:assignSymbol>=</sol:assignSymbol>
                    <sol:assignRight>args[3]</sol:assignRight>
                    <sol:assignLeft>dynargs[3]</sol:assignLeft>
                  </sol:Assignment>
                </sol:before>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>args[4]</sol:assignRight>
                <sol:assignLeft>dynargs[4]</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:returnText>oraclize_query(datasource,dynargs)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L452*C21116">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L452*C21171">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.id.L452*C21180">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_3__args_3_.L457*C21306"/>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_1__args_1_.L455*C21260"/>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_4__args_4_.L458*C21329"/>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_2__args_2_.L456*C21283"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes__memorydynargs.L453*C21195"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.args.L452*C21135">
            <sol:typeName>bytes[5]</sol:typeName>
            <sol:nameIs>args</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasModifier>internal</sol:hasModifier>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L436*C20445">
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.timestamp.L436*C20469">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>timestamp</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes__memorydynargs.L437*C20579">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L436*C20445"/>
            <sol:storageLocate>memory</sol:storageLocate>
            <sol:valueIs>newbytes[](4)</sol:valueIs>
            <sol:nameIs>dynargs</sol:nameIs>
            <sol:typeName>bytes[]</sol:typeName>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_1__args_1_.L439*C20644">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L438*C20621">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes__memorydynargs.L437*C20579"/>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>args[0]</sol:assignRight>
                <sol:assignLeft>dynargs[0]</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>args[1]</sol:assignRight>
            <sol:assignLeft>dynargs[1]</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_2__args_2_.L440*C20667">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_1__args_1_.L439*C20644"/>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>args[2]</sol:assignRight>
            <sol:assignLeft>dynargs[2]</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L436*C20485">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>oraclize_query</sol:nameIs>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.gaslimit.L436*C20519">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>gaslimit</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.args.L436*C20504">
            <sol:typeName>bytes[4]</sol:typeName>
            <sol:nameIs>args</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize_query_timestamp_datasource_dynargs_gaslimit_.L442*C20713">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_3__args_3_.L441*C20690">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_2__args_2_.L440*C20667"/>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>args[3]</sol:assignRight>
                <sol:assignLeft>dynargs[3]</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:returnText>oraclize_query(timestamp,datasource,dynargs,gaslimit)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_3__args_3_.L441*C20690"/>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L438*C20621"/>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L436*C20555">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.id.L436*C20564">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_getPrice.L114*C5015">
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize.getPrice_datasource_.L115*C5099">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_getPrice.L114*C5015"/>
            <sol:returnText>oraclize.getPrice(datasource)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L114*C5082">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.uint.L114*C5091">
                <sol:typeName>uint</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L114*C5042">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>oraclize_getPrice</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.networkID_mainnet.L53*C2774">
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:valueIs>1</sol:valueIs>
        <sol:typeName>uint8</sol:typeName>
        <sol:nameIs>networkID_mainnet</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_setNetwork.L71*C3296">
        <sol:hasIf>
          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.getCodeSize_0xc03A2615D5efaf5F49F60B7BB6583eaec212fdf1__0.L77*C3574">
            <sol:hasIfRight>
              <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L77*C3574">
                <sol:hasReturnValue>
                  <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.true.L80*C3773">
                    <sol:before>
                      <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.oraclize_setNetworkName.L79*C3731">
                        <sol:before>
                          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.OAR_OraclizeAddrResolverI_0xc03A2615D5efaf5F49F60B7BB6583eaec212fdf1_.L78*C3657">
                            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L77*C3574"/>
                            <sol:assignSymbol>=</sol:assignSymbol>
                            <sol:assignRight>OraclizeAddrResolverI(0xc03A2615D5efaf5F49F60B7BB6583eaec212fdf1)</sol:assignRight>
                            <sol:assignLeft>OAR</sol:assignLeft>
                          </sol:Assignment>
                        </sol:before>
                        <sol:callFunctionArgument>"eth_ropsten3"</sol:callFunctionArgument>
                        <sol:callFunctionName>oraclize_setNetworkName</sol:callFunctionName>
                      </sol:FunctionCall>
                    </sol:before>
                    <sol:returnText>true</sol:returnText>
                  </sol:ReturnValue>
                </sol:hasReturnValue>
                <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.oraclize_setNetworkName.L79*C3731"/>
                <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.OAR_OraclizeAddrResolverI_0xc03A2615D5efaf5F49F60B7BB6583eaec212fdf1_.L78*C3657"/>
                <sol:before>
                  <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.getCodeSize_0xc03A2615D5efaf5F49F60B7BB6583eaec212fdf1__0.L77*C3574">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.getCodeSize_0xc03A2615D5efaf5F49F60B7BB6583eaec212fdf1__0.L77*C3574"/>
                    <sol:hasIfCondition>getCodeSize(0xc03A2615D5efaf5F49F60B7BB6583eaec212fdf1)&gt;0</sol:hasIfCondition>
                  </sol:IfCondition>
                </sol:before>
              </sol:IfRight>
            </sol:hasIfRight>
            <sol:before>
              <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.true.L75*C3557">
                <sol:before>
                  <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.oraclize_setNetworkName.L74*C3516">
                    <sol:before>
                      <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.OAR_OraclizeAddrResolverI_0x1d3B2638a7cC9f2CB3D298A3DA7a90B67E5506ed_.L73*C3442">
                        <sol:before>
                          <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L72*C3367">
                            <sol:hasReturnValue rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.true.L75*C3557"/>
                            <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.oraclize_setNetworkName.L74*C3516"/>
                            <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.OAR_OraclizeAddrResolverI_0x1d3B2638a7cC9f2CB3D298A3DA7a90B67E5506ed_.L73*C3442"/>
                            <sol:before>
                              <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.getCodeSize_0x1d3B2638a7cC9f2CB3D298A3DA7a90B67E5506ed__0.L72*C3367">
                                <sol:before>
                                  <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.getCodeSize_0x1d3B2638a7cC9f2CB3D298A3DA7a90B67E5506ed__0.L72*C3367">
                                    <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L72*C3367"/>
                                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_setNetwork.L71*C3296"/>
                                    <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.getCodeSize_0x1d3B2638a7cC9f2CB3D298A3DA7a90B67E5506ed__0.L72*C3367"/>
                                  </sol:FunctionIf>
                                </sol:before>
                                <sol:hasIfCondition>getCodeSize(0x1d3B2638a7cC9f2CB3D298A3DA7a90B67E5506ed)&gt;0</sol:hasIfCondition>
                              </sol:IfCondition>
                            </sol:before>
                          </sol:IfRight>
                        </sol:before>
                        <sol:assignSymbol>=</sol:assignSymbol>
                        <sol:assignRight>OraclizeAddrResolverI(0x1d3B2638a7cC9f2CB3D298A3DA7a90B67E5506ed)</sol:assignRight>
                        <sol:assignLeft>OAR</sol:assignLeft>
                      </sol:Assignment>
                    </sol:before>
                    <sol:callFunctionArgument>"eth_mainnet"</sol:callFunctionArgument>
                    <sol:callFunctionName>oraclize_setNetworkName</sol:callFunctionName>
                  </sol:FunctionCall>
                </sol:before>
                <sol:returnText>true</sol:returnText>
              </sol:ReturnValue>
            </sol:before>
            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.getCodeSize_0xc03A2615D5efaf5F49F60B7BB6583eaec212fdf1__0.L77*C3574"/>
          </sol:FunctionIf>
        </sol:hasIf>
        <sol:hasIf>
          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.getCodeSize_0x6f485C8BF6fc43eA212E93BBF8ce046C7f1cb475__0.L92*C4216">
            <sol:hasIfRight>
              <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L92*C4216">
                <sol:hasReturnValue>
                  <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.true.L94*C4373">
                    <sol:before>
                      <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.OAR_OraclizeAddrResolverI_0x6f485C8BF6fc43eA212E93BBF8ce046C7f1cb475_.L93*C4299">
                        <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L92*C4216"/>
                        <sol:assignSymbol>=</sol:assignSymbol>
                        <sol:assignRight>OraclizeAddrResolverI(0x6f485C8BF6fc43eA212E93BBF8ce046C7f1cb475)</sol:assignRight>
                        <sol:assignLeft>OAR</sol:assignLeft>
                      </sol:Assignment>
                    </sol:before>
                    <sol:returnText>true</sol:returnText>
                  </sol:ReturnValue>
                </sol:hasReturnValue>
                <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.OAR_OraclizeAddrResolverI_0x6f485C8BF6fc43eA212E93BBF8ce046C7f1cb475_.L93*C4299"/>
                <sol:before>
                  <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.getCodeSize_0x6f485C8BF6fc43eA212E93BBF8ce046C7f1cb475__0.L92*C4216">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.getCodeSize_0x6f485C8BF6fc43eA212E93BBF8ce046C7f1cb475__0.L92*C4216"/>
                    <sol:hasIfCondition>getCodeSize(0x6f485C8BF6fc43eA212E93BBF8ce046C7f1cb475)&gt;0</sol:hasIfCondition>
                  </sol:IfCondition>
                </sol:before>
              </sol:IfRight>
            </sol:hasIfRight>
            <sol:before>
              <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.true.L90*C4199">
                <sol:before>
                  <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.oraclize_setNetworkName.L89*C4158">
                    <sol:before>
                      <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.OAR_OraclizeAddrResolverI_0x146500cfd35B22E4A392Fe0aDc06De1a1368Ed48_.L88*C4084">
                        <sol:before>
                          <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L87*C4001">
                            <sol:hasReturnValue rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.true.L90*C4199"/>
                            <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.oraclize_setNetworkName.L89*C4158"/>
                            <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.OAR_OraclizeAddrResolverI_0x146500cfd35B22E4A392Fe0aDc06De1a1368Ed48_.L88*C4084"/>
                            <sol:before>
                              <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.getCodeSize_0x146500cfd35B22E4A392Fe0aDc06De1a1368Ed48__0.L87*C4001">
                                <sol:before>
                                  <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.getCodeSize_0x146500cfd35B22E4A392Fe0aDc06De1a1368Ed48__0.L87*C4001">
                                    <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L87*C4001"/>
                                    <sol:before>
                                      <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.true.L85*C3984">
                                        <sol:before>
                                          <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.oraclize_setNetworkName.L84*C3945">
                                            <sol:before>
                                              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.OAR_OraclizeAddrResolverI_0xB7A07BcF2Ba2f2703b24C0691b5278999C59AC7e_.L83*C3871">
                                                <sol:before>
                                                  <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L82*C3790">
                                                    <sol:hasReturnValue rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.true.L85*C3984"/>
                                                    <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.oraclize_setNetworkName.L84*C3945"/>
                                                    <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.OAR_OraclizeAddrResolverI_0xB7A07BcF2Ba2f2703b24C0691b5278999C59AC7e_.L83*C3871"/>
                                                    <sol:before>
                                                      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.getCodeSize_0xB7A07BcF2Ba2f2703b24C0691b5278999C59AC7e__0.L82*C3790">
                                                        <sol:before>
                                                          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.getCodeSize_0xB7A07BcF2Ba2f2703b24C0691b5278999C59AC7e__0.L82*C3790">
                                                            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L82*C3790"/>
                                                            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.true.L80*C3773"/>
                                                            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.getCodeSize_0xB7A07BcF2Ba2f2703b24C0691b5278999C59AC7e__0.L82*C3790"/>
                                                          </sol:FunctionIf>
                                                        </sol:before>
                                                        <sol:hasIfCondition
                                                        >getCodeSize(0xB7A07BcF2Ba2f2703b24C0691b5278999C59AC7e)&gt;0</sol:hasIfCondition>
                                                      </sol:IfCondition>
                                                    </sol:before>
                                                  </sol:IfRight>
                                                </sol:before>
                                                <sol:assignSymbol
                                                >=</sol:assignSymbol>
                                                <sol:assignRight
                                                >OraclizeAddrResolverI(0xB7A07BcF2Ba2f2703b24C0691b5278999C59AC7e)</sol:assignRight>
                                                <sol:assignLeft
                                                >OAR</sol:assignLeft>
                                              </sol:Assignment>
                                            </sol:before>
                                            <sol:callFunctionArgument
                                            >"eth_kovan"</sol:callFunctionArgument>
                                            <sol:callFunctionName
                                            >oraclize_setNetworkName</sol:callFunctionName>
                                          </sol:FunctionCall>
                                        </sol:before>
                                        <sol:returnText>true</sol:returnText>
                                      </sol:ReturnValue>
                                    </sol:before>
                                    <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.getCodeSize_0x146500cfd35B22E4A392Fe0aDc06De1a1368Ed48__0.L87*C4001"/>
                                  </sol:FunctionIf>
                                </sol:before>
                                <sol:hasIfCondition>getCodeSize(0x146500cfd35B22E4A392Fe0aDc06De1a1368Ed48)&gt;0</sol:hasIfCondition>
                              </sol:IfCondition>
                            </sol:before>
                          </sol:IfRight>
                        </sol:before>
                        <sol:assignSymbol>=</sol:assignSymbol>
                        <sol:assignRight>OraclizeAddrResolverI(0x146500cfd35B22E4A392Fe0aDc06De1a1368Ed48)</sol:assignRight>
                        <sol:assignLeft>OAR</sol:assignLeft>
                      </sol:Assignment>
                    </sol:before>
                    <sol:callFunctionArgument>"eth_rinkeby"</sol:callFunctionArgument>
                    <sol:callFunctionName>oraclize_setNetworkName</sol:callFunctionName>
                  </sol:FunctionCall>
                </sol:before>
                <sol:returnText>true</sol:returnText>
              </sol:ReturnValue>
            </sol:before>
            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.getCodeSize_0x6f485C8BF6fc43eA212E93BBF8ce046C7f1cb475__0.L92*C4216"/>
          </sol:FunctionIf>
        </sol:hasIf>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.getCodeSize_0x1d3B2638a7cC9f2CB3D298A3DA7a90B67E5506ed__0.L72*C3367"/>
        <sol:hasIf>
          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.getCodeSize_0x51efaF4c8B3C9AfBD5aB9F4bbC82784Ab6ef8fAA__0.L100*C4563">
            <sol:hasIfRight>
              <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L100*C4563">
                <sol:hasReturnValue>
                  <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.true.L102*C4721">
                    <sol:before>
                      <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.OAR_OraclizeAddrResolverI_0x51efaF4c8B3C9AfBD5aB9F4bbC82784Ab6ef8fAA_.L101*C4647">
                        <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L100*C4563"/>
                        <sol:assignSymbol>=</sol:assignSymbol>
                        <sol:assignRight>OraclizeAddrResolverI(0x51efaF4c8B3C9AfBD5aB9F4bbC82784Ab6ef8fAA)</sol:assignRight>
                        <sol:assignLeft>OAR</sol:assignLeft>
                      </sol:Assignment>
                    </sol:before>
                    <sol:returnText>true</sol:returnText>
                  </sol:ReturnValue>
                </sol:hasReturnValue>
                <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.OAR_OraclizeAddrResolverI_0x51efaF4c8B3C9AfBD5aB9F4bbC82784Ab6ef8fAA_.L101*C4647"/>
                <sol:before>
                  <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.getCodeSize_0x51efaF4c8B3C9AfBD5aB9F4bbC82784Ab6ef8fAA__0.L100*C4563">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.getCodeSize_0x51efaF4c8B3C9AfBD5aB9F4bbC82784Ab6ef8fAA__0.L100*C4563"/>
                    <sol:hasIfCondition>getCodeSize(0x51efaF4c8B3C9AfBD5aB9F4bbC82784Ab6ef8fAA)&gt;0</sol:hasIfCondition>
                  </sol:IfCondition>
                </sol:before>
              </sol:IfRight>
            </sol:hasIfRight>
            <sol:before>
              <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.true.L98*C4546">
                <sol:before>
                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.OAR_OraclizeAddrResolverI_0x20e12A1F859B3FeaE5Fb2A0A32C18F5a65555bBF_.L97*C4472">
                    <sol:before>
                      <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L96*C4390">
                        <sol:hasReturnValue rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.true.L98*C4546"/>
                        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.OAR_OraclizeAddrResolverI_0x20e12A1F859B3FeaE5Fb2A0A32C18F5a65555bBF_.L97*C4472"/>
                        <sol:before>
                          <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.getCodeSize_0x20e12A1F859B3FeaE5Fb2A0A32C18F5a65555bBF__0.L96*C4390">
                            <sol:before>
                              <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.getCodeSize_0x20e12A1F859B3FeaE5Fb2A0A32C18F5a65555bBF__0.L96*C4390">
                                <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L96*C4390"/>
                                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.true.L94*C4373"/>
                                <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.getCodeSize_0x20e12A1F859B3FeaE5Fb2A0A32C18F5a65555bBF__0.L96*C4390"/>
                              </sol:FunctionIf>
                            </sol:before>
                            <sol:hasIfCondition>getCodeSize(0x20e12A1F859B3FeaE5Fb2A0A32C18F5a65555bBF)&gt;0</sol:hasIfCondition>
                          </sol:IfCondition>
                        </sol:before>
                      </sol:IfRight>
                    </sol:before>
                    <sol:assignSymbol>=</sol:assignSymbol>
                    <sol:assignRight>OraclizeAddrResolverI(0x20e12A1F859B3FeaE5Fb2A0A32C18F5a65555bBF)</sol:assignRight>
                    <sol:assignLeft>OAR</sol:assignLeft>
                  </sol:Assignment>
                </sol:before>
                <sol:returnText>true</sol:returnText>
              </sol:ReturnValue>
            </sol:before>
            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.getCodeSize_0x51efaF4c8B3C9AfBD5aB9F4bbC82784Ab6ef8fAA__0.L100*C4563"/>
          </sol:FunctionIf>
        </sol:hasIf>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:nameIs>oraclize_setNetwork</sol:nameIs>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.getCodeSize_0x146500cfd35B22E4A392Fe0aDc06De1a1368Ed48__0.L87*C4001"/>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.getCodeSize_0xB7A07BcF2Ba2f2703b24C0691b5278999C59AC7e__0.L82*C3790"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.networkID.L71*C3325">
            <sol:typeName>uint8</sol:typeName>
            <sol:nameIs>networkID</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L71*C3351">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.bool.L71*C3359">
                <sol:typeName>bool</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.false.L104*C4738">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.true.L102*C4721"/>
            <sol:returnText>false</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.getCodeSize_0x20e12A1F859B3FeaE5Fb2A0A32C18F5a65555bBF__0.L96*C4390"/>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L272*C13223">
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.gaslimit.L272*C13298">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>gaslimit</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.string__memorydynargs.L273*C13358">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L272*C13223"/>
            <sol:storageLocate>memory</sol:storageLocate>
            <sol:valueIs>newstring[](4)</sol:valueIs>
            <sol:nameIs>dynargs</sol:nameIs>
            <sol:typeName>string[]</sol:typeName>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L272*C13334">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.id.L272*C13343">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.timestamp.L272*C13247">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>timestamp</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize_query_timestamp_datasource_dynargs_gaslimit_.L278*C13494">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_3__args_3_.L277*C13471">
                <sol:before>
                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_2__args_2_.L276*C13448">
                    <sol:before>
                      <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_1__args_1_.L275*C13425">
                        <sol:before>
                          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L274*C13402">
                            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.string__memorydynargs.L273*C13358"/>
                            <sol:assignSymbol>=</sol:assignSymbol>
                            <sol:assignRight>args[0]</sol:assignRight>
                            <sol:assignLeft>dynargs[0]</sol:assignLeft>
                          </sol:Assignment>
                        </sol:before>
                        <sol:assignSymbol>=</sol:assignSymbol>
                        <sol:assignRight>args[1]</sol:assignRight>
                        <sol:assignLeft>dynargs[1]</sol:assignLeft>
                      </sol:Assignment>
                    </sol:before>
                    <sol:assignSymbol>=</sol:assignSymbol>
                    <sol:assignRight>args[2]</sol:assignRight>
                    <sol:assignLeft>dynargs[2]</sol:assignLeft>
                  </sol:Assignment>
                </sol:before>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>args[3]</sol:assignRight>
                <sol:assignLeft>dynargs[3]</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:returnText>oraclize_query(timestamp,datasource,dynargs,gaslimit)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_3__args_3_.L277*C13471"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L272*C13263">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_1__args_1_.L275*C13425"/>
        <sol:nameIs>oraclize_query</sol:nameIs>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.args.L272*C13282">
            <sol:typeName>string[4]</sol:typeName>
            <sol:nameIs>args</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L274*C13402"/>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_2__args_2_.L276*C13448"/>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L264*C12908">
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.args.L264*C12967">
            <sol:typeName>string[4]</sol:typeName>
            <sol:nameIs>args</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_3__args_3_.L269*C13141">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_2__args_2_.L268*C13118">
                <sol:before>
                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_1__args_1_.L267*C13095">
                    <sol:before>
                      <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L266*C13072">
                        <sol:before>
                          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.string__memorydynargs.L265*C13028">
                            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L264*C12908"/>
                            <sol:storageLocate>memory</sol:storageLocate>
                            <sol:valueIs>newstring[](4)</sol:valueIs>
                            <sol:nameIs>dynargs</sol:nameIs>
                            <sol:typeName>string[]</sol:typeName>
                          </sol:StateVar>
                        </sol:before>
                        <sol:assignSymbol>=</sol:assignSymbol>
                        <sol:assignRight>args[0]</sol:assignRight>
                        <sol:assignLeft>dynargs[0]</sol:assignLeft>
                      </sol:Assignment>
                    </sol:before>
                    <sol:assignSymbol>=</sol:assignSymbol>
                    <sol:assignRight>args[1]</sol:assignRight>
                    <sol:assignLeft>dynargs[1]</sol:assignLeft>
                  </sol:Assignment>
                </sol:before>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>args[2]</sol:assignRight>
                <sol:assignLeft>dynargs[2]</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>args[3]</sol:assignRight>
            <sol:assignLeft>dynargs[3]</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize_query_timestamp_datasource_dynargs_.L270*C13164">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_3__args_3_.L269*C13141"/>
            <sol:returnText>oraclize_query(timestamp,datasource,dynargs)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L264*C13004">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.id.L264*C13013">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.timestamp.L264*C12932">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>timestamp</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_2__args_2_.L268*C13118"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.string__memorydynargs.L265*C13028"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L264*C12948">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:nameIs>oraclize_query</sol:nameIs>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_1__args_1_.L267*C13095"/>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L266*C13072"/>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L235*C11721">
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.string__memorydynargs.L236*C11841">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L235*C11721"/>
            <sol:storageLocate>memory</sol:storageLocate>
            <sol:valueIs>newstring[](3)</sol:valueIs>
            <sol:nameIs>dynargs</sol:nameIs>
            <sol:typeName>string[]</sol:typeName>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.args.L235*C11780">
            <sol:typeName>string[3]</sol:typeName>
            <sol:nameIs>args</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L237*C11885">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.string__memorydynargs.L236*C11841"/>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>args[0]</sol:assignRight>
            <sol:assignLeft>dynargs[0]</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L235*C11817">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.id.L235*C11826">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_2__args_2_.L239*C11931">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_1__args_1_.L238*C11908">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L237*C11885"/>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>args[1]</sol:assignRight>
                <sol:assignLeft>dynargs[1]</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>args[2]</sol:assignRight>
            <sol:assignLeft>dynargs[2]</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.timestamp.L235*C11745">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>timestamp</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize_query_timestamp_datasource_dynargs_.L240*C11954">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_2__args_2_.L239*C11931"/>
            <sol:returnText>oraclize_query(timestamp,datasource,dynargs)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L235*C11761">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>oraclize_query</sol:nameIs>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_1__args_1_.L238*C11908"/>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.oraclize_randomDS_args.L739*C29951">
        <sol:elementTypeName2>bytes32</sol:elementTypeName2>
        <sol:elementTypeName1>bytes32</sol:elementTypeName1>
        <sol:typeName>mapping</sol:typeName>
        <sol:nameIs>oraclize_randomDS_args</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L420*C19848">
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L420*C19872">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes__memorydynargs.L421*C19951">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L420*C19848"/>
            <sol:storageLocate>memory</sol:storageLocate>
            <sol:valueIs>newbytes[](4)</sol:valueIs>
            <sol:nameIs>dynargs</sol:nameIs>
            <sol:typeName>bytes[]</sol:typeName>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_3__args_3_.L425*C20062">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_2__args_2_.L424*C20039">
                <sol:before>
                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_1__args_1_.L423*C20016">
                    <sol:before>
                      <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L422*C19993">
                        <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes__memorydynargs.L421*C19951"/>
                        <sol:assignSymbol>=</sol:assignSymbol>
                        <sol:assignRight>args[0]</sol:assignRight>
                        <sol:assignLeft>dynargs[0]</sol:assignLeft>
                      </sol:Assignment>
                    </sol:before>
                    <sol:assignSymbol>=</sol:assignSymbol>
                    <sol:assignRight>args[1]</sol:assignRight>
                    <sol:assignLeft>dynargs[1]</sol:assignLeft>
                  </sol:Assignment>
                </sol:before>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>args[2]</sol:assignRight>
                <sol:assignLeft>dynargs[2]</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>args[3]</sol:assignRight>
            <sol:assignLeft>dynargs[3]</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_2__args_2_.L424*C20039"/>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L420*C19927">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.id.L420*C19936">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_1__args_1_.L423*C20016"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.args.L420*C19891">
            <sol:typeName>bytes[4]</sol:typeName>
            <sol:nameIs>args</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize_query_datasource_dynargs_.L426*C20085">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_3__args_3_.L425*C20062"/>
            <sol:returnText>oraclize_query(datasource,dynargs)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L422*C19993"/>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:nameIs>oraclize_query</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L155*C7592">
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.gaslimit.L155*C7661">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>gaslimit</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.arg1.L155*C7635">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>arg1</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize.query2_withGasLimit.value_price__0_datasource_arg1_arg2_gaslimit_.L158*C7857">
            <sol:before>
              <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.0.L157*C7819">
                <sol:before>
                  <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L157*C7775">
                    <sol:hasReturnValue rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.0.L157*C7819"/>
                    <sol:before>
                      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.price_1ether_tx.gasprice_gaslimit.L157*C7775">
                        <sol:before>
                          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.price_1ether_tx.gasprice_gaslimit.L157*C7775">
                            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L157*C7775"/>
                            <sol:before>
                              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintprice.L156*C7720">
                                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L155*C7592"/>
                                <sol:valueIs>oraclize.getPrice(datasource,gaslimit)</sol:valueIs>
                                <sol:nameIs>price</sol:nameIs>
                                <sol:typeName>uint</sol:typeName>
                              </sol:StateVar>
                            </sol:before>
                            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.price_1ether_tx.gasprice_gaslimit.L157*C7775"/>
                          </sol:FunctionIf>
                        </sol:before>
                        <sol:hasIfCondition>price&gt;1ether+tx.gasprice*gaslimit</sol:hasIfCondition>
                      </sol:IfCondition>
                    </sol:before>
                  </sol:IfRight>
                </sol:before>
                <sol:returnText>0</sol:returnText>
              </sol:ReturnValue>
            </sol:before>
            <sol:returnText>oraclize.query2_withGasLimit.value(price)(0,datasource,arg1,arg2,gaslimit)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L155*C7697">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.id.L155*C7706">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:nameIs>oraclize_query</sol:nameIs>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintprice.L156*C7720"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L155*C7616">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.price_1ether_tx.gasprice_gaslimit.L157*C7775"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.arg2.L155*C7648">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>arg2</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.verifySig.L741*C30069">
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.sigr__copyBytes_dersig_offset_32_sigr__0_.L748*C30299">
            <sol:before>
              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintoffset.L747*C30256">
                <sol:before>
                  <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemorysigr_.L746*C30219">
                    <sol:before>
                      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes32sigs.L745*C30204">
                        <sol:before>
                          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes32sigr.L744*C30189">
                            <sol:before>
                              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.addresssigner.L743*C30172">
                                <sol:before>
                                  <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.boolsigok.L742*C30159">
                                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.verifySig.L741*C30069"/>
                                    <sol:valueIs>null</sol:valueIs>
                                    <sol:nameIs>sigok</sol:nameIs>
                                    <sol:typeName>bool</sol:typeName>
                                  </sol:StateVar>
                                </sol:before>
                                <sol:valueIs>null</sol:valueIs>
                                <sol:nameIs>signer</sol:nameIs>
                                <sol:typeName>address</sol:typeName>
                              </sol:StateVar>
                            </sol:before>
                            <sol:valueIs>null</sol:valueIs>
                            <sol:nameIs>sigr</sol:nameIs>
                            <sol:typeName>bytes32</sol:typeName>
                          </sol:StateVar>
                        </sol:before>
                        <sol:valueIs>null</sol:valueIs>
                        <sol:nameIs>sigs</sol:nameIs>
                        <sol:typeName>bytes32</sol:typeName>
                      </sol:StateVar>
                    </sol:before>
                    <sol:storageLocate>memory</sol:storageLocate>
                    <sol:valueIs>newbytes(32)</sol:valueIs>
                    <sol:nameIs>sigr_</sol:nameIs>
                    <sol:typeName>bytes</sol:typeName>
                  </sol:StateVar>
                </sol:before>
                <sol:valueIs>4+(uint(dersig[3])-0x20)</sol:valueIs>
                <sol:nameIs>offset</sol:nameIs>
                <sol:typeName>uint</sol:typeName>
              </sol:StateVar>
            </sol:before>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>copyBytes(dersig,offset,32,sigr_,0)</sol:assignRight>
            <sol:assignLeft>sigr_</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.addresssigner.L743*C30172"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.boolsigok.L742*C30159"/>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L741*C30142">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.bool.L741*C30151">
                <sol:typeName>bool</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemorysigr_.L746*C30219"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.tosignh.L741*C30088">
            <sol:typeName>bytes32</sol:typeName>
            <sol:nameIs>tosignh</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.sigs__copyBytes_dersig_offset__uint_dersig_offset-1__-0x20__32_sigs__0_.L751*C30405">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.offset__32_2.L750*C30386">
                <sol:before>
                  <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemorysigs_.L749*C30349">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.sigr__copyBytes_dersig_offset_32_sigr__0_.L748*C30299"/>
                    <sol:storageLocate>memory</sol:storageLocate>
                    <sol:valueIs>newbytes(32)</sol:valueIs>
                    <sol:nameIs>sigs_</sol:nameIs>
                    <sol:typeName>bytes</sol:typeName>
                  </sol:StateVar>
                </sol:before>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>offset+32+2</sol:assignRight>
                <sol:assignLeft>offset</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>copyBytes(dersig,offset+(uint(dersig[offset-1])-0x20),32,sigs_,0)</sol:assignRight>
            <sol:assignLeft>sigs_</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.offset__32_2.L750*C30386"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemorysigs_.L749*C30349"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes32sigs.L745*C30204"/>
        <sol:hasIf>
          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.address_sha3_pubkey____signer.L757*C30625">
            <sol:hasIfWrong>
              <sol:IfWrong rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifWrong._.L757*C30625">
                <sol:hasReturnValue>
                  <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifWrong_return._address_sha3_pubkey____signer_.L760*C30745">
                    <sol:before>
                      <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign._sigok_signer__safer_ecrecover_tosignh_28_sigr_sigs_.L759*C30684">
                        <sol:before>
                          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.true.L757*C30662">
                            <sol:before>
                              <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L757*C30625">
                                <sol:hasReturnValue rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.true.L757*C30662"/>
                                <sol:before>
                                  <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.address_sha3_pubkey____signer.L757*C30625">
                                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.address_sha3_pubkey____signer.L757*C30625"/>
                                    <sol:hasIfCondition>address(sha3(pubkey))==signer</sol:hasIfCondition>
                                  </sol:IfCondition>
                                </sol:before>
                              </sol:IfRight>
                            </sol:before>
                            <sol:returnText>true</sol:returnText>
                          </sol:ReturnValue>
                        </sol:before>
                        <sol:assignSymbol>=</sol:assignSymbol>
                        <sol:assignRight>safer_ecrecover(tosignh,28,sigr,sigs)</sol:assignRight>
                        <sol:assignLeft>(sigok,signer)</sol:assignLeft>
                      </sol:Assignment>
                    </sol:before>
                    <sol:returnText>(address(sha3(pubkey))==signer)</sol:returnText>
                  </sol:ReturnValue>
                </sol:hasReturnValue>
                <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign._sigok_signer__safer_ecrecover_tosignh_28_sigr_sigs_.L759*C30684"/>
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.address_sha3_pubkey____signer.L757*C30625"/>
              </sol:IfWrong>
            </sol:hasIfWrong>
            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L757*C30625"/>
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign._sigok_signer__safer_ecrecover_tosignh_27_sigr_sigs_.L756*C30564">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.sigs__copyBytes_dersig_offset__uint_dersig_offset-1__-0x20__32_sigs__0_.L751*C30405"/>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>safer_ecrecover(tosignh,27,sigr,sigs)</sol:assignRight>
                <sol:assignLeft>(sigok,signer)</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.address_sha3_pubkey____signer.L757*C30625"/>
          </sol:FunctionIf>
        </sol:hasIf>
        <sol:nameIs>verifySig</sol:nameIs>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.pubkey.L741*C30119">
            <sol:typeName>bytes</sol:typeName>
            <sol:nameIs>pubkey</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintoffset.L747*C30256"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.dersig.L741*C30105">
            <sol:typeName>bytes</sol:typeName>
            <sol:nameIs>dersig</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes32sigr.L744*C30189"/>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign._sigok_signer__safer_ecrecover_tosignh_27_sigr_sigs_.L756*C30564"/>
        <sol:hasModifier>internal</sol:hasModifier>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L380*C18141">
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.timestamp.L380*C18165">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>timestamp</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>oraclize_query</sol:nameIs>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L380*C18251">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.id.L380*C18260">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L380*C18181">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes__memorydynargs.L381*C18275">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L380*C18141"/>
            <sol:storageLocate>memory</sol:storageLocate>
            <sol:valueIs>newbytes[](2)</sol:valueIs>
            <sol:nameIs>dynargs</sol:nameIs>
            <sol:typeName>bytes[]</sol:typeName>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L382*C18317">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes__memorydynargs.L381*C18275"/>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>args[0]</sol:assignRight>
            <sol:assignLeft>dynargs[0]</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.gaslimit.L380*C18215">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>gaslimit</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize_query_timestamp_datasource_dynargs_gaslimit_.L384*C18363">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_1__args_1_.L383*C18340">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L382*C18317"/>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>args[1]</sol:assignRight>
                <sol:assignLeft>dynargs[1]</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:returnText>oraclize_query(timestamp,datasource,dynargs,gaslimit)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_1__args_1_.L383*C18340"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.args.L380*C18200">
            <sol:typeName>bytes[2]</sol:typeName>
            <sol:nameIs>args</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.proofType_Android.L48*C2576">
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:valueIs>0x20</sol:valueIs>
        <sol:typeName>byte</sol:typeName>
        <sol:nameIs>proofType_Android</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L315*C14888">
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_1__args_1_.L318*C15074">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L317*C15051">
                <sol:before>
                  <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.string__memorydynargs.L316*C15007">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L315*C14888"/>
                    <sol:storageLocate>memory</sol:storageLocate>
                    <sol:valueIs>newstring[](5)</sol:valueIs>
                    <sol:nameIs>dynargs</sol:nameIs>
                    <sol:typeName>string[]</sol:typeName>
                  </sol:StateVar>
                </sol:before>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>args[0]</sol:assignRight>
                <sol:assignLeft>dynargs[0]</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>args[1]</sol:assignRight>
            <sol:assignLeft>dynargs[1]</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_4__args_4_.L321*C15143">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_3__args_3_.L320*C15120">
                <sol:before>
                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_2__args_2_.L319*C15097">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_1__args_1_.L318*C15074"/>
                    <sol:assignSymbol>=</sol:assignSymbol>
                    <sol:assignRight>args[2]</sol:assignRight>
                    <sol:assignLeft>dynargs[2]</sol:assignLeft>
                  </sol:Assignment>
                </sol:before>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>args[3]</sol:assignRight>
                <sol:assignLeft>dynargs[3]</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>args[4]</sol:assignRight>
            <sol:assignLeft>dynargs[4]</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L315*C14912">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_3__args_3_.L320*C15120"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.gaslimit.L315*C14947">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>gaslimit</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L317*C15051"/>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_2__args_2_.L319*C15097"/>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize_query_datasource_dynargs_gaslimit_.L322*C15166">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_4__args_4_.L321*C15143"/>
            <sol:returnText>oraclize_query(datasource,dynargs,gaslimit)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L315*C14983">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.id.L315*C14992">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.args.L315*C14931">
            <sol:typeName>string[5]</sol:typeName>
            <sol:nameIs>args</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.string__memorydynargs.L316*C15007"/>
        <sol:nameIs>oraclize_query</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.proofType_Native.L50*C2657">
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:valueIs>0xF0</sol:valueIs>
        <sol:typeName>byte</sol:typeName>
        <sol:nameIs>proofType_Native</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.oraclize_randomDS_sessionKeysHashVerified.L740*C30002">
        <sol:elementTypeName2>bool</sol:elementTypeName2>
        <sol:elementTypeName1>bytes32</sol:elementTypeName1>
        <sol:typeName>mapping</sol:typeName>
        <sol:nameIs>oraclize_randomDS_sessionKeysHashVerified</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.proofStorage_IPFS.L51*C2697">
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:valueIs>0x01</sol:valueIs>
        <sol:typeName>byte</sol:typeName>
        <sol:nameIs>proofStorage_IPFS</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_randomDS_getSessionPubKeyHash.L500*C22869">
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize.randomDS_getSessionPubKeyHash__.L501*C22960">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_randomDS_getSessionPubKeyHash.L500*C22869"/>
            <sol:returnText>oraclize.randomDS_getSessionPubKeyHash()</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L500*C22940">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.bytes32.L500*C22949">
                <sol:typeName>bytes32</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:nameIs>oraclize_randomDS_getSessionPubKeyHash</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L336*C15896">
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemoryargs.L339*C16165">
            <sol:before>
              <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.0.L338*C16127">
                <sol:before>
                  <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L338*C16083">
                    <sol:hasReturnValue rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.0.L338*C16127"/>
                    <sol:before>
                      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.price_1ether_tx.gasprice_gaslimit.L338*C16083">
                        <sol:before>
                          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.price_1ether_tx.gasprice_gaslimit.L338*C16083">
                            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L338*C16083"/>
                            <sol:before>
                              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintprice.L337*C16028">
                                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L336*C15896"/>
                                <sol:valueIs>oraclize.getPrice(datasource,gaslimit)</sol:valueIs>
                                <sol:nameIs>price</sol:nameIs>
                                <sol:typeName>uint</sol:typeName>
                              </sol:StateVar>
                            </sol:before>
                            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.price_1ether_tx.gasprice_gaslimit.L338*C16083"/>
                          </sol:FunctionIf>
                        </sol:before>
                        <sol:hasIfCondition>price&gt;1ether+tx.gasprice*gaslimit</sol:hasIfCondition>
                      </sol:IfCondition>
                    </sol:before>
                  </sol:IfRight>
                </sol:before>
                <sol:returnText>0</sol:returnText>
              </sol:ReturnValue>
            </sol:before>
            <sol:storageLocate>memory</sol:storageLocate>
            <sol:valueIs>ba2cbor(argN)</sol:valueIs>
            <sol:nameIs>args</sol:nameIs>
            <sol:typeName>bytes</sol:typeName>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintprice.L337*C16028"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.timestamp.L336*C15920">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>timestamp</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.argN.L336*C15955">
            <sol:typeName>bytes[]</sol:typeName>
            <sol:nameIs>argN</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L336*C16005">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.id.L336*C16014">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.gaslimit.L336*C15969">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>gaslimit</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize.queryN_withGasLimit.value_price__timestamp_datasource_args_gaslimit_.L340*C16201">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemoryargs.L339*C16165"/>
            <sol:returnText>oraclize.queryN_withGasLimit.value(price)(timestamp,datasource,args,gaslimit)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L336*C15936">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.price_1ether_tx.gasprice_gaslimit.L338*C16083"/>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:nameIs>oraclize_query</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L428*C20133">
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize_query_timestamp_datasource_dynargs_.L434*C20386">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_3__args_3_.L433*C20363">
                <sol:before>
                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_2__args_2_.L432*C20340">
                    <sol:before>
                      <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_1__args_1_.L431*C20317">
                        <sol:before>
                          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L430*C20294">
                            <sol:before>
                              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes__memorydynargs.L429*C20252">
                                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L428*C20133"/>
                                <sol:storageLocate>memory</sol:storageLocate>
                                <sol:valueIs>newbytes[](4)</sol:valueIs>
                                <sol:nameIs>dynargs</sol:nameIs>
                                <sol:typeName>bytes[]</sol:typeName>
                              </sol:StateVar>
                            </sol:before>
                            <sol:assignSymbol>=</sol:assignSymbol>
                            <sol:assignRight>args[0]</sol:assignRight>
                            <sol:assignLeft>dynargs[0]</sol:assignLeft>
                          </sol:Assignment>
                        </sol:before>
                        <sol:assignSymbol>=</sol:assignSymbol>
                        <sol:assignRight>args[1]</sol:assignRight>
                        <sol:assignLeft>dynargs[1]</sol:assignLeft>
                      </sol:Assignment>
                    </sol:before>
                    <sol:assignSymbol>=</sol:assignSymbol>
                    <sol:assignRight>args[2]</sol:assignRight>
                    <sol:assignLeft>dynargs[2]</sol:assignLeft>
                  </sol:Assignment>
                </sol:before>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>args[3]</sol:assignRight>
                <sol:assignLeft>dynargs[3]</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:returnText>oraclize_query(timestamp,datasource,dynargs)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_2__args_2_.L432*C20340"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.timestamp.L428*C20157">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>timestamp</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L428*C20228">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.id.L428*C20237">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes__memorydynargs.L429*C20252"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.args.L428*C20192">
            <sol:typeName>bytes[4]</sol:typeName>
            <sol:nameIs>args</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_3__args_3_.L433*C20363"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L428*C20173">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:nameIs>oraclize_query</sol:nameIs>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L430*C20294"/>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_1__args_1_.L431*C20317"/>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.month.L45*C2459">
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:valueIs>60*60*24*30</sol:valueIs>
        <sol:typeName>uint</sol:typeName>
        <sol:nameIs>month</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.uint2str.L617*C26264">
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L617*C26299">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.string.L617*C26308">
                <sol:typeName>string</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintk.L626*C26442">
            <sol:before>
              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemorybstr.L625*C26405">
                <sol:before>
                  <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintlen.L620*C26356">
                    <sol:before>
                      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintj.L619*C26343">
                        <sol:before>
                          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.&quot;0&quot;.L618*C26330">
                            <sol:before>
                              <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L618*C26318">
                                <sol:hasReturnValue rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.&quot;0&quot;.L618*C26330"/>
                                <sol:before>
                                  <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.i__0.L618*C26318">
                                    <sol:before>
                                      <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.i__0.L618*C26318">
                                        <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L618*C26318"/>
                                        <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.uint2str.L617*C26264"/>
                                        <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.i__0.L618*C26318"/>
                                      </sol:FunctionIf>
                                    </sol:before>
                                    <sol:hasIfCondition>i==0</sol:hasIfCondition>
                                  </sol:IfCondition>
                                </sol:before>
                              </sol:IfRight>
                            </sol:before>
                            <sol:returnText>"0"</sol:returnText>
                          </sol:ReturnValue>
                        </sol:before>
                        <sol:valueIs>i</sol:valueIs>
                        <sol:nameIs>j</sol:nameIs>
                        <sol:typeName>uint</sol:typeName>
                      </sol:StateVar>
                    </sol:before>
                    <sol:valueIs>null</sol:valueIs>
                    <sol:nameIs>len</sol:nameIs>
                    <sol:typeName>uint</sol:typeName>
                  </sol:StateVar>
                </sol:before>
                <sol:storageLocate>memory</sol:storageLocate>
                <sol:valueIs>newbytes(len)</sol:valueIs>
                <sol:nameIs>bstr</sol:nameIs>
                <sol:typeName>bytes</sol:typeName>
              </sol:StateVar>
            </sol:before>
            <sol:valueIs>len-1</sol:valueIs>
            <sol:nameIs>k</sol:nameIs>
            <sol:typeName>uint</sol:typeName>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.string_bstr_.L631*C26523">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintk.L626*C26442"/>
            <sol:returnText>string(bstr)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:nameIs>uint2str</sol:nameIs>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintj.L619*C26343"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemorybstr.L625*C26405"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.i.L617*C26282">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>i</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.i__0.L618*C26318"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintlen.L620*C26356"/>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L228*C11456">
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_1__args_1_.L231*C11627">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L230*C11604">
                <sol:before>
                  <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.string__memorydynargs.L229*C11560">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L228*C11456"/>
                    <sol:storageLocate>memory</sol:storageLocate>
                    <sol:valueIs>newstring[](3)</sol:valueIs>
                    <sol:nameIs>dynargs</sol:nameIs>
                    <sol:typeName>string[]</sol:typeName>
                  </sol:StateVar>
                </sol:before>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>args[0]</sol:assignRight>
                <sol:assignLeft>dynargs[0]</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>args[1]</sol:assignRight>
            <sol:assignLeft>dynargs[1]</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L228*C11536">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.id.L228*C11545">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L228*C11480">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize_query_datasource_dynargs_.L233*C11673">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_2__args_2_.L232*C11650">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_1__args_1_.L231*C11627"/>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>args[2]</sol:assignRight>
                <sol:assignLeft>dynargs[2]</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:returnText>oraclize_query(datasource,dynargs)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.string__memorydynargs.L229*C11560"/>
        <sol:nameIs>oraclize_query</sol:nameIs>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L230*C11604"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.args.L228*C11499">
            <sol:typeName>string[3]</sol:typeName>
            <sol:nameIs>args</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_2__args_2_.L232*C11650"/>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L256*C12620">
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.string__memorydynargs.L257*C12724">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L256*C12620"/>
            <sol:storageLocate>memory</sol:storageLocate>
            <sol:valueIs>newstring[](4)</sol:valueIs>
            <sol:nameIs>dynargs</sol:nameIs>
            <sol:typeName>string[]</sol:typeName>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L256*C12644">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L258*C12768">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.string__memorydynargs.L257*C12724"/>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>args[0]</sol:assignRight>
            <sol:assignLeft>dynargs[0]</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:nameIs>oraclize_query</sol:nameIs>
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_2__args_2_.L260*C12814">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_1__args_1_.L259*C12791">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L258*C12768"/>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>args[1]</sol:assignRight>
                <sol:assignLeft>dynargs[1]</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>args[2]</sol:assignRight>
            <sol:assignLeft>dynargs[2]</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.args.L256*C12663">
            <sol:typeName>string[4]</sol:typeName>
            <sol:nameIs>args</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L256*C12700">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.id.L256*C12709">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize_query_datasource_dynargs_.L262*C12860">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_3__args_3_.L261*C12837">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_2__args_2_.L260*C12814"/>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>args[3]</sol:assignRight>
                <sol:assignLeft>dynargs[3]</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:returnText>oraclize_query(datasource,dynargs)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_1__args_1_.L259*C12791"/>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_3__args_3_.L261*C12837"/>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.oraclize_network_name.L711*C28725">
        <sol:typeName>string</sol:typeName>
        <sol:nameIs>oraclize_network_name</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L199*C10140">
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.gaslimit.L199*C10199">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>gaslimit</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize_query_datasource_dynargs_gaslimit_.L202*C10326">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L201*C10303">
                <sol:before>
                  <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.string__memorydynargs.L200*C10259">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L199*C10140"/>
                    <sol:storageLocate>memory</sol:storageLocate>
                    <sol:valueIs>newstring[](1)</sol:valueIs>
                    <sol:nameIs>dynargs</sol:nameIs>
                    <sol:typeName>string[]</sol:typeName>
                  </sol:StateVar>
                </sol:before>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>args[0]</sol:assignRight>
                <sol:assignLeft>dynargs[0]</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:returnText>oraclize_query(datasource,dynargs,gaslimit)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L199*C10164">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L201*C10303"/>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L199*C10235">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.id.L199*C10244">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:nameIs>oraclize_query</sol:nameIs>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.args.L199*C10183">
            <sol:typeName>string[1]</sol:typeName>
            <sol:nameIs>args</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.string__memorydynargs.L200*C10259"/>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L297*C14187">
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_2__args_2_.L301*C14397">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_1__args_1_.L300*C14374">
                <sol:before>
                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L299*C14351">
                    <sol:before>
                      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.string__memorydynargs.L298*C14307">
                        <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L297*C14187"/>
                        <sol:storageLocate>memory</sol:storageLocate>
                        <sol:valueIs>newstring[](5)</sol:valueIs>
                        <sol:nameIs>dynargs</sol:nameIs>
                        <sol:typeName>string[]</sol:typeName>
                      </sol:StateVar>
                    </sol:before>
                    <sol:assignSymbol>=</sol:assignSymbol>
                    <sol:assignRight>args[0]</sol:assignRight>
                    <sol:assignLeft>dynargs[0]</sol:assignLeft>
                  </sol:Assignment>
                </sol:before>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>args[1]</sol:assignRight>
                <sol:assignLeft>dynargs[1]</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>args[2]</sol:assignRight>
            <sol:assignLeft>dynargs[2]</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.string__memorydynargs.L298*C14307"/>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_1__args_1_.L300*C14374"/>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize_query_timestamp_datasource_dynargs_.L304*C14466">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_4__args_4_.L303*C14443">
                <sol:before>
                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_3__args_3_.L302*C14420">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_2__args_2_.L301*C14397"/>
                    <sol:assignSymbol>=</sol:assignSymbol>
                    <sol:assignRight>args[3]</sol:assignRight>
                    <sol:assignLeft>dynargs[3]</sol:assignLeft>
                  </sol:Assignment>
                </sol:before>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>args[4]</sol:assignRight>
                <sol:assignLeft>dynargs[4]</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:returnText>oraclize_query(timestamp,datasource,dynargs)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_4__args_4_.L303*C14443"/>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_3__args_3_.L302*C14420"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L297*C14227">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L297*C14283">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.id.L297*C14292">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:nameIs>oraclize_query</sol:nameIs>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.timestamp.L297*C14211">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>timestamp</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L299*C14351"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.args.L297*C14246">
            <sol:typeName>string[5]</sol:typeName>
            <sol:nameIs>args</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.networkID_morden.L55*C2852">
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:valueIs>2</sol:valueIs>
        <sol:typeName>uint8</sol:typeName>
        <sol:nameIs>networkID_morden</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L249*C12330">
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.string__memorydynargs.L250*C12449">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L249*C12330"/>
            <sol:storageLocate>memory</sol:storageLocate>
            <sol:valueIs>newstring[](3)</sol:valueIs>
            <sol:nameIs>dynargs</sol:nameIs>
            <sol:typeName>string[]</sol:typeName>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:nameIs>oraclize_query</sol:nameIs>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize_query_datasource_dynargs_gaslimit_.L254*C12562">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_2__args_2_.L253*C12539">
                <sol:before>
                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_1__args_1_.L252*C12516">
                    <sol:before>
                      <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L251*C12493">
                        <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.string__memorydynargs.L250*C12449"/>
                        <sol:assignSymbol>=</sol:assignSymbol>
                        <sol:assignRight>args[0]</sol:assignRight>
                        <sol:assignLeft>dynargs[0]</sol:assignLeft>
                      </sol:Assignment>
                    </sol:before>
                    <sol:assignSymbol>=</sol:assignSymbol>
                    <sol:assignRight>args[1]</sol:assignRight>
                    <sol:assignLeft>dynargs[1]</sol:assignLeft>
                  </sol:Assignment>
                </sol:before>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>args[2]</sol:assignRight>
                <sol:assignLeft>dynargs[2]</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:returnText>oraclize_query(datasource,dynargs,gaslimit)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_2__args_2_.L253*C12539"/>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L251*C12493"/>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L249*C12425">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.id.L249*C12434">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.gaslimit.L249*C12389">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>gaslimit</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L249*C12354">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_1__args_1_.L252*C12516"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.args.L249*C12373">
            <sol:typeName>string[3]</sol:typeName>
            <sol:nameIs>args</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L210*C10626">
        <sol:nameIs>oraclize_query</sol:nameIs>
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L212*C10790">
            <sol:before>
              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.string__memorydynargs.L211*C10746">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L210*C10626"/>
                <sol:storageLocate>memory</sol:storageLocate>
                <sol:valueIs>newstring[](2)</sol:valueIs>
                <sol:nameIs>dynargs</sol:nameIs>
                <sol:typeName>string[]</sol:typeName>
              </sol:StateVar>
            </sol:before>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>args[0]</sol:assignRight>
            <sol:assignLeft>dynargs[0]</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L210*C10666">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.timestamp.L210*C10650">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>timestamp</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.string__memorydynargs.L211*C10746"/>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L210*C10722">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.id.L210*C10731">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize_query_timestamp_datasource_dynargs_.L214*C10836">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_1__args_1_.L213*C10813">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L212*C10790"/>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>args[1]</sol:assignRight>
                <sol:assignLeft>dynargs[1]</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:returnText>oraclize_query(timestamp,datasource,dynargs)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_1__args_1_.L213*C10813"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.args.L210*C10685">
            <sol:typeName>string[2]</sol:typeName>
            <sol:nameIs>args</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.proofType_TLSNotary.L47*C2533">
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:valueIs>0x10</sol:valueIs>
        <sol:typeName>byte</sol:typeName>
        <sol:nameIs>proofType_TLSNotary</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L363*C17395">
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L363*C17419">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.args.L363*C17438">
            <sol:typeName>bytes[1]</sol:typeName>
            <sol:nameIs>args</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>oraclize_query</sol:nameIs>
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L365*C17555">
            <sol:before>
              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes__memorydynargs.L364*C17513">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L363*C17395"/>
                <sol:storageLocate>memory</sol:storageLocate>
                <sol:valueIs>newbytes[](1)</sol:valueIs>
                <sol:nameIs>dynargs</sol:nameIs>
                <sol:typeName>bytes[]</sol:typeName>
              </sol:StateVar>
            </sol:before>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>args[0]</sol:assignRight>
            <sol:assignLeft>dynargs[0]</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.gaslimit.L363*C17453">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>gaslimit</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize_query_datasource_dynargs_gaslimit_.L366*C17578">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L365*C17555"/>
            <sol:returnText>oraclize_query(datasource,dynargs,gaslimit)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes__memorydynargs.L364*C17513"/>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L363*C17489">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.id.L363*C17498">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L145*C6882">
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintprice.L146*C7011">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L145*C6882"/>
            <sol:valueIs>oraclize.getPrice(datasource)</sol:valueIs>
            <sol:nameIs>price</sol:nameIs>
            <sol:typeName>uint</sol:typeName>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L145*C6988">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.id.L145*C6997">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.arg1.L145*C6941">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>arg1</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize.query2.value_price__timestamp_datasource_arg1_arg2_.L148*C7136">
            <sol:before>
              <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.0.L147*C7098">
                <sol:before>
                  <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L147*C7056">
                    <sol:hasReturnValue rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.0.L147*C7098"/>
                    <sol:before>
                      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.price_1ether_tx.gasprice_200000.L147*C7056">
                        <sol:before>
                          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.price_1ether_tx.gasprice_200000.L147*C7056">
                            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L147*C7056"/>
                            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintprice.L146*C7011"/>
                            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.price_1ether_tx.gasprice_200000.L147*C7056"/>
                          </sol:FunctionIf>
                        </sol:before>
                        <sol:hasIfCondition>price&gt;1ether+tx.gasprice*200000</sol:hasIfCondition>
                      </sol:IfCondition>
                    </sol:before>
                  </sol:IfRight>
                </sol:before>
                <sol:returnText>0</sol:returnText>
              </sol:ReturnValue>
            </sol:before>
            <sol:returnText>oraclize.query2.value(price)(timestamp,datasource,arg1,arg2)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.arg2.L145*C6954">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>arg2</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.timestamp.L145*C6906">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>timestamp</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.price_1ether_tx.gasprice_200000.L147*C7056"/>
        <sol:nameIs>oraclize_query</sol:nameIs>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L145*C6922">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.networkID_consensys.L56*C2890">
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:valueIs>161</sol:valueIs>
        <sol:typeName>uint8</sol:typeName>
        <sol:nameIs>networkID_consensys</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.ba2cbor.L672*C27638">
        <sol:nameIs>ba2cbor</sol:nameIs>
        <sol:hasFor>
          <sol:FunctionFor rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for.for_i_0i_arrleni____res_ctr__0x5Fctr__for_uintx_0x_elemArray_i_.lengthx____if_x_23__0__uintelemcborlen_elemArray_i_.length-x__24?23:elemArray_i_.length-xelemcborlen__0x40uintlctr_ctrwhile_byte_elemcborlen_.length_ctr-lctr__res_ctr__byte_elemcborlen__ctr-lctr_ctr____res_ctr__elemArray_i__x_ctr___res_ctr__0xFFctr___.L689*C28218">
            <sol:operateVarible>
              <sol:VariableOperation rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprVaribleOp.ctr__.L707*C28698">
                <sol:before>
                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.res_ctr__0xFF.L706*C28680">
                    <sol:before>
                      <sol:VariableOperation rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprVaribleOp.ctr__.L704*C28669">
                        <sol:before>
                          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.res_ctr__elemArray_i__x_.L703*C28640">
                            <sol:before>
                              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_for_for_if_ifRight_varDeclare.uintlctr.L697*C28516">
                                <sol:before>
                                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.elemcborlen__0x40.L696*C28494">
                                    <sol:before>
                                      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_for_for_if_ifRight_varDeclare.uintelemcborlen.L695*C28412">
                                        <sol:before>
                                          <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_for_for_if_ifRight._.L694*C28392">
                                            <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_for_for_if_ifRight_varDeclare.uintlctr.L697*C28516"/>
                                            <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.elemcborlen__0x40.L696*C28494"/>
                                            <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_for_for_if_ifRight_varDeclare.uintelemcborlen.L695*C28412"/>
                                            <sol:before>
                                              <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_for_for_if.x_23__0.L694*C28392">
                                                <sol:before>
                                                  <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_for_if.x_23__0.L694*C28392">
                                                    <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_for_for_if_ifRight._.L694*C28392"/>
                                                    <sol:before>
                                                      <sol:FunctionFor rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_for_for.for_uintx_0x_elemArray_i_.lengthx____if_x_23__0__uintelemcborlen_elemArray_i_.length-x__24?23:elemArray_i_.length-xelemcborlen__0x40uintlctr_ctrwhile_byte_elemcborlen_.length_ctr-lctr__res_ctr__byte_elemcborlen__ctr-lctr_ctr____res_ctr__elemArray_i__x_ctr___.L692*C28276">
                                                        <sol:conditionStep
                                                        >x++</sol:conditionStep>
                                                        <sol:hasForCondition>
                                                          <sol:ForCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.x_elemArray_i_.length.L692*C28276">
                                                            <sol:conditionValue
                                                            >elemArray[i].length</sol:conditionValue>
                                                            <sol:conditionSymbol
                                                            >&lt;</sol:conditionSymbol>
                                                          </sol:ForCondition>
                                                        </sol:hasForCondition>
                                                        <sol:conditionVar
                                                        >x</sol:conditionVar>
                                                        <sol:hasStateVar>
                                                          <sol:stateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.uintx.L692*C28276">
                                                            <sol:valueIs
                                                            >0</sol:valueIs>
                                                            <sol:nameIs
                                                            >x</sol:nameIs>
                                                            <sol:typeName
                                                            >uint</sol:typeName>
                                                          </sol:stateVar>
                                                        </sol:hasStateVar>
                                                        <sol:operateVarible rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprVaribleOp.ctr__.L704*C28669"/>
                                                        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.res_ctr__elemArray_i__x_.L703*C28640"/>
                                                        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_for_if.x_23__0.L694*C28392"/>
                                                        <sol:before>
                                                          <sol:VariableOperation rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprVaribleOp.ctr__.L691*C28268">
                                                            <sol:before>
                                                              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.res_ctr__0x5F.L690*C28250">
    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for.for_i_0i_arrleni____res_ctr__0x5Fctr__for_uintx_0x_elemArray_i_.lengthx____if_x_23__0__uintelemcborlen_elemArray_i_.length-x__24?23:elemArray_i_.length-xelemcborlen__0x40uintlctr_ctrwhile_byte_elemcborlen_.length_ctr-lctr__res_ctr__byte_elemcborlen__ctr-lctr_ctr____res_ctr__elemArray_i__x_ctr___res_ctr__0xFFctr___.L689*C28218"/>
    <sol:assignSymbol>=</sol:assignSymbol>
    <sol:assignRight>0x5F</sol:assignRight>
    <sol:assignLeft>res[ctr]</sol:assignLeft>                 </sol:Assignment>
                                                            </sol:before>
                                                            <sol:opSymbol
                                                            >++</sol:opSymbol>
                                                            <sol:opVarible
                                                            >ctr</sol:opVarible>
                                                          </sol:VariableOperation>
                                                        </sol:before>
                                                      </sol:FunctionFor>
                                                    </sol:before>
                                                    <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_for_for_if.x_23__0.L694*C28392"/>
                                                  </sol:FunctionIf>
                                                </sol:before>
                                                <sol:hasIfCondition
                                                >x%23==0</sol:hasIfCondition>
                                              </sol:IfCondition>
                                            </sol:before>
                                          </sol:IfRight>
                                        </sol:before>
                                        <sol:valueIs>elemArray[i].length-x&gt;=24?23:elemArray[i].length-x</sol:valueIs>
                                        <sol:nameIs>elemcborlen</sol:nameIs>
                                        <sol:typeName>uint</sol:typeName>
                                      </sol:StateVar>
                                    </sol:before>
                                    <sol:assignSymbol>=</sol:assignSymbol>
                                    <sol:assignRight>elemcborlen+0x40</sol:assignRight>
                                    <sol:assignLeft>elemcborlen</sol:assignLeft>
                                  </sol:Assignment>
                                </sol:before>
                                <sol:valueIs>ctr</sol:valueIs>
                                <sol:nameIs>lctr</sol:nameIs>
                                <sol:typeName>uint</sol:typeName>
                              </sol:StateVar>
                            </sol:before>
                            <sol:assignSymbol>=</sol:assignSymbol>
                            <sol:assignRight>elemArray[i][x]</sol:assignRight>
                            <sol:assignLeft>res[ctr]</sol:assignLeft>
                          </sol:Assignment>
                        </sol:before>
                        <sol:opSymbol>++</sol:opSymbol>
                        <sol:opVarible>ctr</sol:opVarible>
                      </sol:VariableOperation>
                    </sol:before>
                    <sol:assignSymbol>=</sol:assignSymbol>
                    <sol:assignRight>0xFF</sol:assignRight>
                    <sol:assignLeft>res[ctr]</sol:assignLeft>
                  </sol:Assignment>
                </sol:before>
                <sol:opSymbol>++</sol:opSymbol>
                <sol:opVarible>ctr</sol:opVarible>
              </sol:VariableOperation>
            </sol:operateVarible>
            <sol:hasForCondition>
              <sol:ForCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.i_arrlen.L689*C28218">
                <sol:conditionValue>arrlen</sol:conditionValue>
                <sol:conditionSymbol>&lt;</sol:conditionSymbol>
              </sol:ForCondition>
            </sol:hasForCondition>
            <sol:conditionVar>i</sol:conditionVar>
            <sol:hasStateVar>
              <sol:stateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.i_0;.L689*C28218">
                <sol:valueIs>0</sol:valueIs>
                <sol:nameIs>i</sol:nameIs>
                <sol:typeName>null</sol:typeName>
              </sol:stateVar>
            </sol:hasStateVar>
            <sol:conditionVar>noDeclaration</sol:conditionVar>
            <sol:condition>noDecelaration</sol:condition>
            <sol:hasFor rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_for_for.for_uintx_0x_elemArray_i_.lengthx____if_x_23__0__uintelemcborlen_elemArray_i_.length-x__24?23:elemArray_i_.length-xelemcborlen__0x40uintlctr_ctrwhile_byte_elemcborlen_.length_ctr-lctr__res_ctr__byte_elemcborlen__ctr-lctr_ctr____res_ctr__elemArray_i__x_ctr___.L692*C28276"/>
            <sol:before>
              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemoryres.L684*C28095">
                <sol:before>
                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.outputlen__byte_cborlen_.length.L683*C28059">
                    <sol:before>
                      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintcborlen.L682*C28028">
                        <sol:before>
                          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintctr.L681*C28013">
                            <sol:before>
                              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.outputlen__elemArray_i_.length__elemArray_i_.length-1__23_3.L679*C27898">
                                <sol:before>
                                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.elemArray_i___bytes_arr_i___.L678*C27865">
                                    <sol:before>
                                      <sol:FunctionFor rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for.for_uinti_0i_arrleni____elemArray_i___bytes_arr_i___outputlen__elemArray_i_.length__elemArray_i_.length-1__23_3_.L677*C27828">
                                        <sol:conditionStep>i++</sol:conditionStep>
                                        <sol:hasForCondition>
                                          <sol:ForCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.i_arrlen.L677*C27828">
                                            <sol:conditionValue
                                            >arrlen</sol:conditionValue>
                                            <sol:conditionSymbol
                                            >&lt;</sol:conditionSymbol>
                                          </sol:ForCondition>
                                        </sol:hasForCondition>
                                        <sol:conditionVar>i</sol:conditionVar>
                                        <sol:hasStateVar>
                                          <sol:stateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.uinti.L677*C27828">
                                            <sol:valueIs>0</sol:valueIs>
                                            <sol:nameIs>i</sol:nameIs>
                                            <sol:typeName>uint</sol:typeName>
                                          </sol:stateVar>
                                        </sol:hasStateVar>
                                        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.outputlen__elemArray_i_.length__elemArray_i_.length-1__23_3.L679*C27898"/>
                                        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.elemArray_i___bytes_arr_i___.L678*C27865"/>
                                        <sol:before>
                                          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes__memoryelemArray.L676*C27779">
                                            <sol:before>
                                              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintoutputlen.L675*C27758">
                                                <sol:before>
                                                  <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintarrlen.L673*C27696">
                                                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.ba2cbor.L672*C27638"/>
                                                    <sol:valueIs
                                                    >arr.length</sol:valueIs>
                                                    <sol:nameIs
                                                    >arrlen</sol:nameIs>
                                                    <sol:typeName
                                                    >uint</sol:typeName>
                                                  </sol:StateVar>
                                                </sol:before>
                                                <sol:valueIs>0</sol:valueIs>
                                                <sol:nameIs>outputlen</sol:nameIs>
                                                <sol:typeName
                                                >uint</sol:typeName>
                                              </sol:StateVar>
                                            </sol:before>
                                            <sol:storageLocate
                                            >memory</sol:storageLocate>
                                            <sol:valueIs>newbytes[](arrlen)</sol:valueIs>
                                            <sol:nameIs>elemArray</sol:nameIs>
                                            <sol:typeName>bytes[]</sol:typeName>
                                          </sol:StateVar>
                                        </sol:before>
                                      </sol:FunctionFor>
                                    </sol:before>
                                    <sol:assignSymbol>=</sol:assignSymbol>
                                    <sol:assignRight>(bytes(arr[i]))</sol:assignRight>
                                    <sol:assignLeft>elemArray[i]</sol:assignLeft>
                                  </sol:Assignment>
                                </sol:before>
                                <sol:assignSymbol>=</sol:assignSymbol>
                                <sol:assignRight>outputlen+elemArray[i].length+(elemArray[i].length-1)/23+3</sol:assignRight>
                                <sol:assignLeft>outputlen</sol:assignLeft>
                              </sol:Assignment>
                            </sol:before>
                            <sol:valueIs>0</sol:valueIs>
                            <sol:nameIs>ctr</sol:nameIs>
                            <sol:typeName>uint</sol:typeName>
                          </sol:StateVar>
                        </sol:before>
                        <sol:valueIs>arrlen+0x80</sol:valueIs>
                        <sol:nameIs>cborlen</sol:nameIs>
                        <sol:typeName>uint</sol:typeName>
                      </sol:StateVar>
                    </sol:before>
                    <sol:assignSymbol>=</sol:assignSymbol>
                    <sol:assignRight>outputlen+byte(cborlen).length</sol:assignRight>
                    <sol:assignLeft>outputlen</sol:assignLeft>
                  </sol:Assignment>
                </sol:before>
                <sol:storageLocate>memory</sol:storageLocate>
                <sol:valueIs>newbytes(outputlen)</sol:valueIs>
                <sol:nameIs>res</sol:nameIs>
                <sol:typeName>bytes</sol:typeName>
              </sol:StateVar>
            </sol:before>
            <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.res_ctr__0x5F.L690*C28250"/>
            <sol:conditionStep>noDecelaration</sol:conditionStep>
            <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.res_ctr__0xFF.L706*C28680"/>
            <sol:operateVarible rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprVaribleOp.ctr__.L691*C28268"/>
            <sol:conditionStep>i++</sol:conditionStep>
          </sol:FunctionFor>
        </sol:hasFor>
        <sol:hasFor rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for.for_uinti_0i_arrleni____elemArray_i___bytes_arr_i___outputlen__elemArray_i_.length__elemArray_i_.length-1__23_3_.L677*C27828"/>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.res.L709*C28709">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprVaribleOp.ctr__.L707*C28698"/>
            <sol:returnText>res</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.outputlen__byte_cborlen_.length.L683*C28059"/>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L672*C27677">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.bytes.L672*C27686">
                <sol:typeName>bytes</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes__memoryelemArray.L676*C27779"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.arr.L672*C27655">
            <sol:typeName>bytes[]</sol:typeName>
            <sol:nameIs>arr</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintcborlen.L682*C28028"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintarrlen.L673*C27696"/>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintctr.L681*C28013"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintoutputlen.L675*C27758"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemoryres.L684*C28095"/>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L172*C8626">
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.argN.L172*C8685">
            <sol:typeName>string[]</sol:typeName>
            <sol:nameIs>argN</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>oraclize_query</sol:nameIs>
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintprice.L173*C8759">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L172*C8626"/>
            <sol:valueIs>oraclize.getPrice(datasource,gaslimit)</sol:valueIs>
            <sol:nameIs>price</sol:nameIs>
            <sol:typeName>uint</sol:typeName>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L172*C8666">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize.queryN_withGasLimit.value_price__timestamp_datasource_args_gaslimit_.L176*C8934">
            <sol:before>
              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemoryargs.L175*C8896">
                <sol:before>
                  <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.0.L174*C8858">
                    <sol:before>
                      <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L174*C8814">
                        <sol:hasReturnValue rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.0.L174*C8858"/>
                        <sol:before>
                          <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.price_1ether_tx.gasprice_gaslimit.L174*C8814">
                            <sol:before>
                              <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.price_1ether_tx.gasprice_gaslimit.L174*C8814">
                                <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L174*C8814"/>
                                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintprice.L173*C8759"/>
                                <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.price_1ether_tx.gasprice_gaslimit.L174*C8814"/>
                              </sol:FunctionIf>
                            </sol:before>
                            <sol:hasIfCondition>price&gt;1ether+tx.gasprice*gaslimit</sol:hasIfCondition>
                          </sol:IfCondition>
                        </sol:before>
                      </sol:IfRight>
                    </sol:before>
                    <sol:returnText>0</sol:returnText>
                  </sol:ReturnValue>
                </sol:before>
                <sol:storageLocate>memory</sol:storageLocate>
                <sol:valueIs>stra2cbor(argN)</sol:valueIs>
                <sol:nameIs>args</sol:nameIs>
                <sol:typeName>bytes</sol:typeName>
              </sol:StateVar>
            </sol:before>
            <sol:returnText>oraclize.queryN_withGasLimit.value(price)(timestamp,datasource,args,gaslimit)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.price_1ether_tx.gasprice_gaslimit.L174*C8814"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemoryargs.L175*C8896"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.gaslimit.L172*C8700">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>gaslimit</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L172*C8736">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.id.L172*C8745">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.timestamp.L172*C8650">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>timestamp</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_setCustomGasPrice.L494*C22638">
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize.setCustomGasPrice_gasPrice_.L495*C22713">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_setCustomGasPrice.L494*C22638"/>
            <sol:returnText>oraclize.setCustomGasPrice(gasPrice)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.gasPrice.L494*C22674">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>gasPrice</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>oraclize_setCustomGasPrice</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_randomDS_proofVerify__sessionKeyValidity.L763*C30794">
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemoryLEDGERKEY.L778*C31669">
            <sol:before>
              <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.false.L776*C31585">
                <sol:before>
                  <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L776*C31565">
                    <sol:hasReturnValue rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.false.L776*C31585"/>
                    <sol:before>
                      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.sigok__false.L776*C31565">
                        <sol:before>
                          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.sigok__false.L776*C31565">
                            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L776*C31565"/>
                            <sol:before>
                              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.sigok_verifySig_sha256_tosign2__sig2_appkey1_pubkey_.L775*C31506">
                                <sol:before>
                                  <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.copyBytes.L774*C31462">
                                    <sol:before>
                                      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemoryCODEHASH.L773*C31366">
                                        <sol:before>
                                          <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.copyBytes.L772*C31316">
                                            <sol:before>
                                              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.tosign2_0__1.L771*C31292">
                                                <sol:before>
                                                  <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemorytosign2.L770*C31248">
                                                    <sol:before>
                                                      <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.copyBytes.L769*C31201">
                                                        <sol:before>
                                                          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemoryappkey1_pubkey.L768*C31155">
                                                            <sol:before>
                                                              <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.copyBytes.L767*C31102">
    <sol:before>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemorysig2.L766*C31041">
        <sol:before>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.boolsigok.L764*C30910">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_randomDS_proofVerify__sessionKeyValidity.L763*C30794"/>
            <sol:valueIs>null</sol:valueIs>
            <sol:nameIs>sigok</sol:nameIs>
            <sol:typeName>bool</sol:typeName>
          </sol:StateVar>
        </sol:before>
        <sol:storageLocate>memory</sol:storageLocate>
        <sol:valueIs>newbytes(uint(proof[sig2offset+1])+2)</sol:valueIs>
        <sol:nameIs>sig2</sol:nameIs>
        <sol:typeName>bytes</sol:typeName>
      </sol:StateVar>
    </sol:before>
    <sol:callFunctionArgument>proof,sig2offset,sig2.length,sig2,0</sol:callFunctionArgument>
    <sol:callFunctionName>copyBytes</sol:callFunctionName>    </sol:FunctionCall>
                                                            </sol:before>
                                                            <sol:storageLocate
                                                            >memory</sol:storageLocate>
                                                            <sol:valueIs
                                                            >newbytes(64)</sol:valueIs>
                                                            <sol:nameIs
                                                            >appkey1_pubkey</sol:nameIs>
                                                            <sol:typeName
                                                            >bytes</sol:typeName>
                                                          </sol:StateVar>
                                                        </sol:before>
                                                        <sol:callFunctionArgument
                                                        >proof,3+1,64,appkey1_pubkey,0</sol:callFunctionArgument>
                                                        <sol:callFunctionName
                                                        >copyBytes</sol:callFunctionName>
                                                      </sol:FunctionCall>
                                                    </sol:before>
                                                    <sol:storageLocate
                                                    >memory</sol:storageLocate>
                                                    <sol:valueIs
                                                    >newbytes(1+65+32)</sol:valueIs>
                                                    <sol:nameIs
                                                    >tosign2</sol:nameIs>
                                                    <sol:typeName
                                                    >bytes</sol:typeName>
                                                  </sol:StateVar>
                                                </sol:before>
                                                <sol:assignSymbol
                                                >=</sol:assignSymbol>
                                                <sol:assignRight
                                                >1</sol:assignRight>
                                                <sol:assignLeft
                                                >tosign2[0]</sol:assignLeft>
                                              </sol:Assignment>
                                            </sol:before>
                                            <sol:callFunctionArgument
                                            >proof,sig2offset-65,65,tosign2,1</sol:callFunctionArgument>
                                            <sol:callFunctionName
                                            >copyBytes</sol:callFunctionName>
                                          </sol:FunctionCall>
                                        </sol:before>
                                        <sol:storageLocate>memory</sol:storageLocate>
                                        <sol:valueIs>hex"fd94fa71bc0ba10d39d464d0d8f465efeef0a2764e3887fcc9df41ded20f505c"</sol:valueIs>
                                        <sol:nameIs>CODEHASH</sol:nameIs>
                                        <sol:typeName>bytes</sol:typeName>
                                      </sol:StateVar>
                                    </sol:before>
                                    <sol:callFunctionArgument
                                    >CODEHASH,0,32,tosign2,1+65</sol:callFunctionArgument>
                                    <sol:callFunctionName>copyBytes</sol:callFunctionName>
                                  </sol:FunctionCall>
                                </sol:before>
                                <sol:assignSymbol>=</sol:assignSymbol>
                                <sol:assignRight>verifySig(sha256(tosign2),sig2,appkey1_pubkey)</sol:assignRight>
                                <sol:assignLeft>sigok</sol:assignLeft>
                              </sol:Assignment>
                            </sol:before>
                            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.sigok__false.L776*C31565"/>
                          </sol:FunctionIf>
                        </sol:before>
                        <sol:hasIfCondition>sigok==false</sol:hasIfCondition>
                      </sol:IfCondition>
                    </sol:before>
                  </sol:IfRight>
                </sol:before>
                <sol:returnText>false</sol:returnText>
              </sol:ReturnValue>
            </sol:before>
            <sol:storageLocate>memory</sol:storageLocate>
            <sol:valueIs>hex"7fb956469c5c9b89840d55b43537e66a98dd4811ea0a27224272c2e5622911e8537a2f8e86a46baec82864e98dd01e9ccc2f8bc5dfc9cbe5a91a290498dd96e4"</sol:valueIs>
            <sol:nameIs>LEDGERKEY</sol:nameIs>
            <sol:typeName>bytes</sol:typeName>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.sigok_verifySig_sha256_tosign2__sig2_appkey1_pubkey_.L775*C31506"/>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.sigok.L785*C32085">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.sigok_verifySig_sha256_tosign3__sig3_LEDGERKEY_.L784*C32031">
                <sol:before>
                  <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.copyBytes.L783*C31984">
                    <sol:before>
                      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemorysig3.L782*C31929">
                        <sol:before>
                          <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.copyBytes.L781*C31891">
                            <sol:before>
                              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.tosign3_0__0xFE.L780*C31871">
                                <sol:before>
                                  <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemorytosign3.L779*C31830">
                                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemoryLEDGERKEY.L778*C31669"/>
                                    <sol:storageLocate>memory</sol:storageLocate>
                                    <sol:valueIs>newbytes(1+65)</sol:valueIs>
                                    <sol:nameIs>tosign3</sol:nameIs>
                                    <sol:typeName>bytes</sol:typeName>
                                  </sol:StateVar>
                                </sol:before>
                                <sol:assignSymbol>=</sol:assignSymbol>
                                <sol:assignRight>0xFE</sol:assignRight>
                                <sol:assignLeft>tosign3[0]</sol:assignLeft>
                              </sol:Assignment>
                            </sol:before>
                            <sol:callFunctionArgument>proof,3,65,tosign3,1</sol:callFunctionArgument>
                            <sol:callFunctionName>copyBytes</sol:callFunctionName>
                          </sol:FunctionCall>
                        </sol:before>
                        <sol:storageLocate>memory</sol:storageLocate>
                        <sol:valueIs>newbytes(uint(proof[3+65+1])+2)</sol:valueIs>
                        <sol:nameIs>sig3</sol:nameIs>
                        <sol:typeName>bytes</sol:typeName>
                      </sol:StateVar>
                    </sol:before>
                    <sol:callFunctionArgument>proof,3+65,sig3.length,sig3,0</sol:callFunctionArgument>
                    <sol:callFunctionName>copyBytes</sol:callFunctionName>
                  </sol:FunctionCall>
                </sol:before>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>verifySig(sha256(tosign3),sig3,LEDGERKEY)</sol:assignRight>
                <sol:assignLeft>sigok</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:returnText>sigok</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.sigok_verifySig_sha256_tosign3__sig3_LEDGERKEY_.L784*C32031"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.proof.L763*C30853">
            <sol:typeName>bytes</sol:typeName>
            <sol:nameIs>proof</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.copyBytes.L767*C31102"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemorysig3.L782*C31929"/>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L763*C30892">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.bool.L763*C30901">
                <sol:typeName>bool</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.copyBytes.L781*C31891"/>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.copyBytes.L769*C31201"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemorytosign3.L779*C31830"/>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.sigok__false.L776*C31565"/>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.tosign3_0__0xFE.L780*C31871"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.boolsigok.L764*C30910"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemorysig2.L766*C31041"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.sig2offset.L763*C30866">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>sig2offset</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.copyBytes.L774*C31462"/>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.tosign2_0__1.L771*C31292"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemoryappkey1_pubkey.L768*C31155"/>
        <sol:nameIs>oraclize_randomDS_proofVerify__sessionKeyValidity</sol:nameIs>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemoryCODEHASH.L773*C31366"/>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.copyBytes.L772*C31316"/>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.copyBytes.L783*C31984"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemorytosign2.L770*C31248"/>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L399*C18958">
        <sol:nameIs>oraclize_query</sol:nameIs>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L399*C19053">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.id.L399*C19062">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L401*C19119">
            <sol:before>
              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes__memorydynargs.L400*C19077">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L399*C18958"/>
                <sol:storageLocate>memory</sol:storageLocate>
                <sol:valueIs>newbytes[](3)</sol:valueIs>
                <sol:nameIs>dynargs</sol:nameIs>
                <sol:typeName>bytes[]</sol:typeName>
              </sol:StateVar>
            </sol:before>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>args[0]</sol:assignRight>
            <sol:assignLeft>dynargs[0]</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.args.L399*C19017">
            <sol:typeName>bytes[3]</sol:typeName>
            <sol:nameIs>args</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_1__args_1_.L402*C19142">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L401*C19119"/>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>args[1]</sol:assignRight>
            <sol:assignLeft>dynargs[1]</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L399*C18998">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_2__args_2_.L403*C19165">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_1__args_1_.L402*C19142"/>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>args[2]</sol:assignRight>
            <sol:assignLeft>dynargs[2]</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.timestamp.L399*C18982">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>timestamp</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes__memorydynargs.L400*C19077"/>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize_query_timestamp_datasource_dynargs_.L404*C19188">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_2__args_2_.L403*C19165"/>
            <sol:returnText>oraclize_query(timestamp,datasource,dynargs)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
      </sol:Function>
    </sol:hasFunction>
    <sol:defineModifier>
      <sol:Modifier rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_modifier.oraclize_randomDS_proofVerify.L787*C32103">
        <sol:hasIf>
          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_modifier_if.proofVerified__false.L791*C32453">
            <sol:hasIfRight>
              <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_modifier_if_ifRight._.L791*C32453">
                <sol:hasThrow>
                  <sol:Throw rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_modifier_if_ifRight_throw.throw;.L791*C32481">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_modifier_if_ifRight._.L791*C32453"/>
                    <sol:throwText>throw;</sol:throwText>
                  </sol:Throw>
                </sol:hasThrow>
                <sol:before>
                  <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_modifier_if.proofVerified__false.L791*C32453">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_modifier_if.proofVerified__false.L791*C32453"/>
                    <sol:hasIfCondition>proofVerified==false</sol:hasIfCondition>
                  </sol:IfCondition>
                </sol:before>
              </sol:IfRight>
            </sol:hasIfRight>
            <sol:before>
              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_modifier_varDeclare.boolproofVerified.L790*C32333">
                <sol:before>
                  <sol:Throw rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_modifier_if_ifRight_throw.throw;.L789*C32325">
                    <sol:before>
                      <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_modifier_if_ifRight._.L789*C32263">
                        <sol:hasThrow rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_modifier_if_ifRight_throw.throw;.L789*C32325"/>
                        <sol:before>
                          <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_modifier_if.__proof_0_!_&quot;L&quot;_____proof_1_!_&quot;P&quot;_____proof_2_!_1_.L789*C32263">
                            <sol:before>
                              <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_modifier_if.__proof_0_!_&quot;L&quot;_____proof_1_!_&quot;P&quot;_____proof_2_!_1_.L789*C32263">
                                <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_modifier_if_ifRight._.L789*C32263"/>
                                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_modifier.oraclize_randomDS_proofVerify.L787*C32103"/>
                                <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_modifier_if.__proof_0_!_&quot;L&quot;_____proof_1_!_&quot;P&quot;_____proof_2_!_1_.L789*C32263"/>
                              </sol:FunctionIf>
                            </sol:before>
                            <sol:hasIfCondition>(_proof[0]!="L")||(_proof[1]!="P")||(_proof[2]!=1)</sol:hasIfCondition>
                          </sol:IfCondition>
                        </sol:before>
                      </sol:IfRight>
                    </sol:before>
                    <sol:throwText>throw;</sol:throwText>
                  </sol:Throw>
                </sol:before>
                <sol:valueIs>oraclize_randomDS_proofVerify__main(_proof,_queryId,bytes(_result),oraclize_getNetworkName())</sol:valueIs>
                <sol:nameIs>proofVerified</sol:nameIs>
                <sol:typeName>bool</sol:typeName>
              </sol:StateVar>
            </sol:before>
            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_modifier_if.proofVerified__false.L791*C32453"/>
          </sol:FunctionIf>
        </sol:hasIf>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_modifier_varDeclare.boolproofVerified.L790*C32333"/>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_modifier_if.__proof_0_!_&quot;L&quot;_____proof_1_!_&quot;P&quot;_____proof_2_!_1_.L789*C32263"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_modifier_param._proof.L787*C32176">
            <sol:typeName>bytes</sol:typeName>
            <sol:nameIs>_proof</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_modifier_param._result.L787*C32160">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_result</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_modifier_param._queryId.L787*C32142">
            <sol:typeName>bytes32</sol:typeName>
            <sol:nameIs>_queryId</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>oraclize_randomDS_proofVerify</sol:nameIs>
      </sol:Modifier>
    </sol:defineModifier>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.parseAddr.L508*C23137">
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._a.L508*C23156">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_a</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasFor>
          <sol:FunctionFor rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for.for_uinti_2i_2_2_20i__2__iaddr__256b1_uint160_tmp_i__b2_uint160_tmp_i_1__if__b1__97_&amp;&amp;_b1__102__b1-_87elseif__b1__65_&amp;&amp;_b1__70__b1-_55elseif__b1__48_&amp;&amp;_b1__57__b1-_48if__b2__97_&amp;&amp;_b2__102__b2-_87elseif__b2__65_&amp;&amp;_b2__70__b2-_55elseif__b2__48_&amp;&amp;_b2__57__b2-_48iaddr___b1_16_b2__.L513*C23273">
            <sol:hasIf>
              <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_for_if._b1__97_&amp;&amp;_b1__102_.L517*C23369">
                <sol:hasIfWrong>
                  <sol:IfWrong rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if_ifWrong._.L517*C23369">
                    <sol:hasIf>
                      <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_for_if_ifWrong_if._b1__65_&amp;&amp;_b1__70_.L518*C23414">
                        <sol:hasIfWrong>
                          <sol:IfWrong rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_for_if_ifWrong_if_ifWrong._.L518*C23414">
                            <sol:hasIf>
                              <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#7_con_fun_for_if_ifWrong_if_ifWrong_if._b1__48_&amp;&amp;_b1__57_.L519*C23458">
                                <sol:hasIfRight>
                                  <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#8_con_fun_for_if_ifWrong_if_ifWrong_if_ifRight._.L519*C23458">
                                    <sol:containAssignment>
                                      <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.b1-_48.L519*C23486">
                                        <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#8_con_fun_for_if_ifWrong_if_ifWrong_if_ifRight._.L519*C23458"/>
                                        <sol:assignSymbol>=</sol:assignSymbol>
                                        <sol:assignRight>b1-48</sol:assignRight>
                                        <sol:assignLeft>b1</sol:assignLeft>
                                      </sol:Assignment>
                                    </sol:containAssignment>
                                    <sol:before>
                                      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#8_con_fun_for_if_ifWrong_if_ifWrong_if._b1__48_&amp;&amp;_b1__57_.L519*C23458">
                                        <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#7_con_fun_for_if_ifWrong_if_ifWrong_if._b1__48_&amp;&amp;_b1__57_.L519*C23458"/>
                                        <sol:hasIfCondition>(b1&gt;=48)&amp;&amp;(b1&lt;=57)</sol:hasIfCondition>
                                      </sol:IfCondition>
                                    </sol:before>
                                  </sol:IfRight>
                                </sol:hasIfRight>
                                <sol:before>
                                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.b1-_55.L518*C23442">
                                    <sol:before>
                                      <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_for_if_ifWrong_if_ifRight._.L518*C23414">
                                        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.b1-_55.L518*C23442"/>
                                        <sol:before>
                                          <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_for_if_ifWrong_if._b1__65_&amp;&amp;_b1__70_.L518*C23414">
                                            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_for_if_ifWrong_if._b1__65_&amp;&amp;_b1__70_.L518*C23414"/>
                                            <sol:hasIfCondition
                                            >(b1&gt;=65)&amp;&amp;(b1&lt;=70)</sol:hasIfCondition>
                                          </sol:IfCondition>
                                        </sol:before>
                                      </sol:IfRight>
                                    </sol:before>
                                    <sol:assignSymbol>=</sol:assignSymbol>
                                    <sol:assignRight>b1-55</sol:assignRight>
                                    <sol:assignLeft>b1</sol:assignLeft>
                                  </sol:Assignment>
                                </sol:before>
                                <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#8_con_fun_for_if_ifWrong_if_ifWrong_if._b1__48_&amp;&amp;_b1__57_.L519*C23458"/>
                              </sol:FunctionIf>
                            </sol:hasIf>
                            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_for_if_ifWrong_if._b1__65_&amp;&amp;_b1__70_.L518*C23414"/>
                          </sol:IfWrong>
                        </sol:hasIfWrong>
                        <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_for_if_ifWrong_if_ifRight._.L518*C23414"/>
                        <sol:before>
                          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.b1-_87.L517*C23398">
                            <sol:before>
                              <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if_ifRight._.L517*C23369">
                                <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.b1-_87.L517*C23398"/>
                                <sol:before>
                                  <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if._b1__97_&amp;&amp;_b1__102_.L517*C23369">
                                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_for_if._b1__97_&amp;&amp;_b1__102_.L517*C23369"/>
                                    <sol:hasIfCondition>(b1&gt;=97)&amp;&amp;(b1&lt;=102)</sol:hasIfCondition>
                                  </sol:IfCondition>
                                </sol:before>
                              </sol:IfRight>
                            </sol:before>
                            <sol:assignSymbol>=</sol:assignSymbol>
                            <sol:assignRight>b1-87</sol:assignRight>
                            <sol:assignLeft>b1</sol:assignLeft>
                          </sol:Assignment>
                        </sol:before>
                        <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_for_if_ifWrong_if._b1__65_&amp;&amp;_b1__70_.L518*C23414"/>
                      </sol:FunctionIf>
                    </sol:hasIf>
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if._b1__97_&amp;&amp;_b1__102_.L517*C23369"/>
                  </sol:IfWrong>
                </sol:hasIfWrong>
                <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if_ifRight._.L517*C23369"/>
                <sol:before>
                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.b2_uint160_tmp_i_1__.L516*C23344">
                    <sol:before>
                      <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.b1_uint160_tmp_i__.L515*C23321">
                        <sol:before>
                          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.iaddr__256.L514*C23306">
                            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for.for_uinti_2i_2_2_20i__2__iaddr__256b1_uint160_tmp_i__b2_uint160_tmp_i_1__if__b1__97_&amp;&amp;_b1__102__b1-_87elseif__b1__65_&amp;&amp;_b1__70__b1-_55elseif__b1__48_&amp;&amp;_b1__57__b1-_48if__b2__97_&amp;&amp;_b2__102__b2-_87elseif__b2__65_&amp;&amp;_b2__70__b2-_55elseif__b2__48_&amp;&amp;_b2__57__b2-_48iaddr___b1_16_b2__.L513*C23273"/>
                            <sol:assignSymbol>=</sol:assignSymbol>
                            <sol:assignRight>iaddr*256</sol:assignRight>
                            <sol:assignLeft>iaddr</sol:assignLeft>
                          </sol:Assignment>
                        </sol:before>
                        <sol:assignSymbol>=</sol:assignSymbol>
                        <sol:assignRight>uint160(tmp[i])</sol:assignRight>
                        <sol:assignLeft>b1</sol:assignLeft>
                      </sol:Assignment>
                    </sol:before>
                    <sol:assignSymbol>=</sol:assignSymbol>
                    <sol:assignRight>uint160(tmp[i+1])</sol:assignRight>
                    <sol:assignLeft>b2</sol:assignLeft>
                  </sol:Assignment>
                </sol:before>
                <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if._b1__97_&amp;&amp;_b1__102_.L517*C23369"/>
              </sol:FunctionIf>
            </sol:hasIf>
            <sol:conditionVar>i</sol:conditionVar>
            <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.iaddr__256.L514*C23306"/>
            <sol:hasForCondition>
              <sol:ForCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.i_2_2_20.L513*C23273">
                <sol:conditionValue>2+2*20</sol:conditionValue>
                <sol:conditionSymbol>&lt;</sol:conditionSymbol>
              </sol:ForCondition>
            </sol:hasForCondition>
            <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.b1_uint160_tmp_i__.L515*C23321"/>
            <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.b2_uint160_tmp_i_1__.L516*C23344"/>
            <sol:before>
              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uint160b2.L512*C23260">
                <sol:before>
                  <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uint160b1.L511*C23247">
                    <sol:before>
                      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uint160iaddr.L510*C23227">
                        <sol:before>
                          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemorytmp.L509*C23196">
                            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.parseAddr.L508*C23137"/>
                            <sol:storageLocate>memory</sol:storageLocate>
                            <sol:valueIs>bytes(_a)</sol:valueIs>
                            <sol:nameIs>tmp</sol:nameIs>
                            <sol:typeName>bytes</sol:typeName>
                          </sol:StateVar>
                        </sol:before>
                        <sol:valueIs>0</sol:valueIs>
                        <sol:nameIs>iaddr</sol:nameIs>
                        <sol:typeName>uint160</sol:typeName>
                      </sol:StateVar>
                    </sol:before>
                    <sol:valueIs>null</sol:valueIs>
                    <sol:nameIs>b1</sol:nameIs>
                    <sol:typeName>uint160</sol:typeName>
                  </sol:StateVar>
                </sol:before>
                <sol:valueIs>null</sol:valueIs>
                <sol:nameIs>b2</sol:nameIs>
                <sol:typeName>uint160</sol:typeName>
              </sol:StateVar>
            </sol:before>
            <sol:containAssignment>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.iaddr___b1_16_b2_.L523*C23625">
                <sol:before>
                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.b2-_48.L522*C23614">
                    <sol:before>
                      <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#8_con_fun_for_if_ifWrong_if_ifWrong_if_ifRight._.L522*C23586">
                        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.b2-_48.L522*C23614"/>
                        <sol:before>
                          <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#8_con_fun_for_if_ifWrong_if_ifWrong_if._b2__48_&amp;&amp;_b2__57_.L522*C23586">
                            <sol:before>
                              <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#7_con_fun_for_if_ifWrong_if_ifWrong_if._b2__48_&amp;&amp;_b2__57_.L522*C23586">
                                <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#8_con_fun_for_if_ifWrong_if_ifWrong_if_ifRight._.L522*C23586"/>
                                <sol:before>
                                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.b2-_55.L521*C23570">
                                    <sol:before>
                                      <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_for_if_ifWrong_if_ifRight._.L521*C23542">
                                        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.b2-_55.L521*C23570"/>
                                        <sol:before>
                                          <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_for_if_ifWrong_if._b2__65_&amp;&amp;_b2__70_.L521*C23542">
                                            <sol:before>
                                              <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_for_if_ifWrong_if._b2__65_&amp;&amp;_b2__70_.L521*C23542">
                                                <sol:hasIfWrong>
                                                  <sol:IfWrong rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_for_if_ifWrong_if_ifWrong._.L521*C23542">
                                                    <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#7_con_fun_for_if_ifWrong_if_ifWrong_if._b2__48_&amp;&amp;_b2__57_.L522*C23586"/>
                                                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_for_if_ifWrong_if._b2__65_&amp;&amp;_b2__70_.L521*C23542"/>
                                                  </sol:IfWrong>
                                                </sol:hasIfWrong>
                                                <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_for_if_ifWrong_if_ifRight._.L521*C23542"/>
                                                <sol:before>
                                                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.b2-_87.L520*C23526">
                                                    <sol:before>
                                                      <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if_ifRight._.L520*C23497">
                                                        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.b2-_87.L520*C23526"/>
                                                        <sol:before>
                                                          <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if._b2__97_&amp;&amp;_b2__102_.L520*C23497">
                                                            <sol:before>
                                                              <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_for_if._b2__97_&amp;&amp;_b2__102_.L520*C23497">
    <sol:hasIfWrong>
      <sol:IfWrong rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if_ifWrong._.L520*C23497">
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_for_if_ifWrong_if._b2__65_&amp;&amp;_b2__70_.L521*C23542"/>
        <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if._b2__97_&amp;&amp;_b2__102_.L520*C23497"/>
      </sol:IfWrong>
    </sol:hasIfWrong>
    <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if_ifRight._.L520*C23497"/>
    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.b1-_48.L519*C23486"/>
    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.b1-_55.L518*C23442"/>
    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.b1-_87.L517*C23398"/>
    <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if._b2__97_&amp;&amp;_b2__102_.L520*C23497"/>
                                                              </sol:FunctionIf>
                                                            </sol:before>
                                                            <sol:hasIfCondition
                                                            >(b2&gt;=97)&amp;&amp;(b2&lt;=102)</sol:hasIfCondition>
                                                          </sol:IfCondition>
                                                        </sol:before>
                                                      </sol:IfRight>
                                                    </sol:before>
                                                    <sol:assignSymbol
                                                    >=</sol:assignSymbol>
                                                    <sol:assignRight
                                                    >b2-87</sol:assignRight>
                                                    <sol:assignLeft
                                                    >b2</sol:assignLeft>
                                                  </sol:Assignment>
                                                </sol:before>
                                                <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_for_if_ifWrong_if._b2__65_&amp;&amp;_b2__70_.L521*C23542"/>
                                              </sol:FunctionIf>
                                            </sol:before>
                                            <sol:hasIfCondition
                                            >(b2&gt;=65)&amp;&amp;(b2&lt;=70)</sol:hasIfCondition>
                                          </sol:IfCondition>
                                        </sol:before>
                                      </sol:IfRight>
                                    </sol:before>
                                    <sol:assignSymbol>=</sol:assignSymbol>
                                    <sol:assignRight>b2-55</sol:assignRight>
                                    <sol:assignLeft>b2</sol:assignLeft>
                                  </sol:Assignment>
                                </sol:before>
                                <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#8_con_fun_for_if_ifWrong_if_ifWrong_if._b2__48_&amp;&amp;_b2__57_.L522*C23586"/>
                              </sol:FunctionIf>
                            </sol:before>
                            <sol:hasIfCondition>(b2&gt;=48)&amp;&amp;(b2&lt;=57)</sol:hasIfCondition>
                          </sol:IfCondition>
                        </sol:before>
                      </sol:IfRight>
                    </sol:before>
                    <sol:assignSymbol>=</sol:assignSymbol>
                    <sol:assignRight>b2-48</sol:assignRight>
                    <sol:assignLeft>b2</sol:assignLeft>
                  </sol:Assignment>
                </sol:before>
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.b2-_55.L521*C23570"/>
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.b2-_87.L520*C23526"/>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>iaddr+(b1*16+b2)</sol:assignRight>
                <sol:assignLeft>iaddr</sol:assignLeft>
              </sol:Assignment>
            </sol:containAssignment>
            <sol:hasStateVar>
              <sol:stateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.uinti.L513*C23273">
                <sol:valueIs>2</sol:valueIs>
                <sol:nameIs>i</sol:nameIs>
                <sol:typeName>uint</sol:typeName>
              </sol:stateVar>
            </sol:hasStateVar>
            <sol:conditionStep>i+=2</sol:conditionStep>
            <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_for_if._b2__97_&amp;&amp;_b2__102_.L520*C23497"/>
          </sol:FunctionFor>
        </sol:hasFor>
        <sol:nameIs>parseAddr</sol:nameIs>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uint160b1.L511*C23247"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uint160iaddr.L510*C23227"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uint160b2.L512*C23260"/>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L508*C23176">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.address.L508*C23185">
                <sol:typeName>address</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemorytmp.L509*C23196"/>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.address_iaddr_.L525*C23650">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.iaddr___b1_16_b2_.L523*C23625"/>
            <sol:returnText>address(iaddr)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L392*C18696">
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L394*C18841">
            <sol:before>
              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes__memorydynargs.L393*C18799">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L392*C18696"/>
                <sol:storageLocate>memory</sol:storageLocate>
                <sol:valueIs>newbytes[](3)</sol:valueIs>
                <sol:nameIs>dynargs</sol:nameIs>
                <sol:typeName>bytes[]</sol:typeName>
              </sol:StateVar>
            </sol:before>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>args[0]</sol:assignRight>
            <sol:assignLeft>dynargs[0]</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.args.L392*C18739">
            <sol:typeName>bytes[3]</sol:typeName>
            <sol:nameIs>args</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes__memorydynargs.L393*C18799"/>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L392*C18720">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_1__args_1_.L395*C18864">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L394*C18841"/>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>args[1]</sol:assignRight>
            <sol:assignLeft>dynargs[1]</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:nameIs>oraclize_query</sol:nameIs>
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_2__args_2_.L396*C18887">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_1__args_1_.L395*C18864"/>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>args[2]</sol:assignRight>
            <sol:assignLeft>dynargs[2]</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize_query_datasource_dynargs_.L397*C18910">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_2__args_2_.L396*C18887"/>
            <sol:returnText>oraclize_query(datasource,dynargs)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L392*C18775">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.id.L392*C18784">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L358*C17127">
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize_query_timestamp_datasource_dynargs_gaslimit_.L361*C17326">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L360*C17303">
                <sol:before>
                  <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes__memorydynargs.L359*C17261">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L358*C17127"/>
                    <sol:storageLocate>memory</sol:storageLocate>
                    <sol:valueIs>newbytes[](1)</sol:valueIs>
                    <sol:nameIs>dynargs</sol:nameIs>
                    <sol:typeName>bytes[]</sol:typeName>
                  </sol:StateVar>
                </sol:before>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>args[0]</sol:assignRight>
                <sol:assignLeft>dynargs[0]</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:returnText>oraclize_query(timestamp,datasource,dynargs,gaslimit)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.timestamp.L358*C17151">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>timestamp</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:nameIs>oraclize_query</sol:nameIs>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L360*C17303"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.gaslimit.L358*C17201">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>gaslimit</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes__memorydynargs.L359*C17261"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L358*C17167">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L358*C17237">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.id.L358*C17246">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.args.L358*C17186">
            <sol:typeName>bytes[1]</sol:typeName>
            <sol:nameIs>args</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasModifier>internal</sol:hasModifier>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.proofType_Ledger.L49*C2617">
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:valueIs>0x30</sol:valueIs>
        <sol:typeName>byte</sol:typeName>
        <sol:nameIs>proofType_Ledger</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.networkID_auto.L52*C2738">
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:valueIs>0</sol:valueIs>
        <sol:typeName>uint8</sol:typeName>
        <sol:nameIs>networkID_auto</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.parseInt.L600*C25845">
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintmint.L602*C25945">
            <sol:before>
              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemorybresult.L601*C25910">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.parseInt.L600*C25845"/>
                <sol:storageLocate>memory</sol:storageLocate>
                <sol:valueIs>bytes(_a)</sol:valueIs>
                <sol:nameIs>bresult</sol:nameIs>
                <sol:typeName>bytes</sol:typeName>
              </sol:StateVar>
            </sol:before>
            <sol:valueIs>0</sol:valueIs>
            <sol:nameIs>mint</sol:nameIs>
            <sol:typeName>uint</sol:typeName>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.mint.L615*C26247">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.mint__10___b.L614*C26230">
                <sol:before>
                  <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L614*C26218">
                    <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.mint__10___b.L614*C26230"/>
                    <sol:before>
                      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if._b_0.L614*C26218">
                        <sol:before>
                          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if._b_0.L614*C26218">
                            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L614*C26218"/>
                            <sol:before>
                              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.decimals_true.L612*C26197">
                                <sol:before>
                                  <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_for_if_ifRight_if_ifRight_if_ifWrong_if_ifRight._.L612*C26175">
                                    <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.decimals_true.L612*C26197"/>
                                    <sol:before>
                                      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_for_if_ifRight_if_ifRight_if_ifWrong_if.bresult_i___46.L612*C26175">
                                        <sol:before>
                                          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_for_if_ifRight_if_ifRight_if_ifWrong_if.bresult_i___46.L612*C26175">
                                            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_for_if_ifRight_if_ifRight_if_ifWrong_if_ifRight._.L612*C26175"/>
                                            <sol:before>
                                              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.mint__uint_bresult_i__-48.L611*C26136">
                                                <sol:before>
                                                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.mint__10.L610*C26123">
                                                    <sol:before>
                                                      <sol:VariableOperation rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprVaribleOp._b--.L608*C26113">
                                                        <sol:before>
                                                          <sol:IfWrong rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#8_con_fun_for_if_ifRight_if_ifRight_if_ifWrong._.L607*C26087">
                                                            <sol:operateVarible rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprVaribleOp._b--.L608*C26113"/>
                                                            <sol:before>
                                                              <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#8_con_fun_for_if_ifRight_if_ifRight_if._b__0.L607*C26087">
    <sol:before>
      <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#7_con_fun_for_if_ifRight_if_ifRight_if._b__0.L607*C26087">
        <sol:hasIfWrong rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#8_con_fun_for_if_ifRight_if_ifRight_if_ifWrong._.L607*C26087"/>
        <sol:hasIfRight>
          <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#8_con_fun_for_if_ifRight_if_ifRight_if_ifRight._.L607*C26087">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#8_con_fun_for_if_ifRight_if_ifRight_if._b__0.L607*C26087"/>
          </sol:IfRight>
        </sol:hasIfRight>
        <sol:before>
          <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_for_if_ifRight_if_ifRight._.L606*C26071">
            <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#7_con_fun_for_if_ifRight_if_ifRight_if._b__0.L607*C26087"/>
            <sol:before>
              <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_for_if_ifRight_if.decimals.L606*C26071">
                <sol:before>
                  <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_for_if_ifRight_if.decimals.L606*C26071">
                    <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_for_if_ifRight_if_ifRight._.L606*C26071"/>
                    <sol:before>
                      <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if_ifRight._.L605*C26025">
                        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.mint__uint_bresult_i__-48.L611*C26136"/>
                        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.mint__10.L610*C26123"/>
                        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_for_if_ifRight_if.decimals.L606*C26071"/>
                        <sol:before>
                          <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if._bresult_i___48_&amp;&amp;_bresult_i___57_.L605*C26025">
                            <sol:before>
                              <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_for_if._bresult_i___48_&amp;&amp;_bresult_i___57_.L605*C26025">
                                <sol:hasIfWrong>
                                  <sol:IfWrong rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#8_con_fun_for_if_ifRight_if_ifRight_if_ifWrong._.L605*C26025">
                                    <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#5_con_fun_for_if_ifRight_if_ifRight_if_ifWrong_if.bresult_i___46.L612*C26175"/>
                                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if._bresult_i___48_&amp;&amp;_bresult_i___57_.L605*C26025"/>
                                  </sol:IfWrong>
                                </sol:hasIfWrong>
                                <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if_ifRight._.L605*C26025"/>
                                <sol:before>
                                  <sol:FunctionFor rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for.for_uinti_0i_bresult.lengthi____if__bresult_i___48_&amp;&amp;_bresult_i___57___if_decimals__if__b__0_breakelse_b--_mint__10mint__uint_bresult_i__-48_elseif_bresult_i___46_decimals_true_.L604*C25985">
                                    <sol:conditionStep>i++</sol:conditionStep>
                                    <sol:hasForCondition>
                                      <sol:ForCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.i_bresult.length.L604*C25985">
                                        <sol:conditionValue>bresult.length</sol:conditionValue>
                                        <sol:conditionSymbol>&lt;</sol:conditionSymbol>
                                      </sol:ForCondition>
                                    </sol:hasForCondition>
                                    <sol:conditionVar>i</sol:conditionVar>
                                    <sol:hasStateVar>
                                      <sol:stateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.uinti.L604*C25985">
                                        <sol:valueIs>0</sol:valueIs>
                                        <sol:nameIs>i</sol:nameIs>
                                        <sol:typeName>uint</sol:typeName>
                                      </sol:stateVar>
                                    </sol:hasStateVar>
                                    <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_for_if._bresult_i___48_&amp;&amp;_bresult_i___57_.L605*C26025"/>
                                    <sol:before>
                                      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.booldecimals.L603*C25961">
                                        <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintmint.L602*C25945"/>
                                        <sol:valueIs>false</sol:valueIs>
                                        <sol:nameIs>decimals</sol:nameIs>
                                        <sol:typeName>bool</sol:typeName>
                                      </sol:StateVar>
                                    </sol:before>
                                  </sol:FunctionFor>
                                </sol:before>
                                <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if._bresult_i___48_&amp;&amp;_bresult_i___57_.L605*C26025"/>
                              </sol:FunctionIf>
                            </sol:before>
                            <sol:hasIfCondition>(bresult[i]&gt;=48)&amp;&amp;(bresult[i]&lt;=57)</sol:hasIfCondition>
                          </sol:IfCondition>
                        </sol:before>
                      </sol:IfRight>
                    </sol:before>
                    <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_for_if_ifRight_if.decimals.L606*C26071"/>
                  </sol:FunctionIf>
                </sol:before>
                <sol:hasIfCondition>decimals</sol:hasIfCondition>
              </sol:IfCondition>
            </sol:before>
          </sol:IfRight>
        </sol:before>
        <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#8_con_fun_for_if_ifRight_if_ifRight_if._b__0.L607*C26087"/>
      </sol:FunctionIf>
    </sol:before>
    <sol:hasIfCondition>_b==0</sol:hasIfCondition>            </sol:IfCondition>
                                                            </sol:before>
                                                          </sol:IfWrong>
                                                        </sol:before>
                                                        <sol:opSymbol
                                                        >--</sol:opSymbol>
                                                        <sol:opVarible
                                                        >_b</sol:opVarible>
                                                      </sol:VariableOperation>
                                                    </sol:before>
                                                    <sol:assignSymbol
                                                    >=</sol:assignSymbol>
                                                    <sol:assignRight
                                                    >mint*10</sol:assignRight>
                                                    <sol:assignLeft
                                                    >mint</sol:assignLeft>
                                                  </sol:Assignment>
                                                </sol:before>
                                                <sol:assignSymbol
                                                >=</sol:assignSymbol>
                                                <sol:assignRight
                                                >mint+uint(bresult[i])-48</sol:assignRight>
                                                <sol:assignLeft
                                                >mint</sol:assignLeft>
                                              </sol:Assignment>
                                            </sol:before>
                                            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#6_con_fun_for_if_ifRight_if_ifRight_if_ifWrong_if.bresult_i___46.L612*C26175"/>
                                          </sol:FunctionIf>
                                        </sol:before>
                                        <sol:hasIfCondition>bresult[i]==46</sol:hasIfCondition>
                                      </sol:IfCondition>
                                    </sol:before>
                                  </sol:IfRight>
                                </sol:before>
                                <sol:assignSymbol>=</sol:assignSymbol>
                                <sol:assignRight>true</sol:assignRight>
                                <sol:assignLeft>decimals</sol:assignLeft>
                              </sol:Assignment>
                            </sol:before>
                            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.mint__uint_bresult_i__-48.L611*C26136"/>
                            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if._b_0.L614*C26218"/>
                          </sol:FunctionIf>
                        </sol:before>
                        <sol:hasIfCondition>_b&gt;0</sol:hasIfCondition>
                      </sol:IfCondition>
                    </sol:before>
                  </sol:IfRight>
                </sol:before>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>mint*10**_b</sol:assignRight>
                <sol:assignLeft>mint</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:returnText>mint</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:nameIs>parseInt</sol:nameIs>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemorybresult.L601*C25910"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.booldecimals.L603*C25961"/>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L600*C25892">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.uint.L600*C25901">
                <sol:typeName>uint</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasFor rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for.for_uinti_0i_bresult.lengthi____if__bresult_i___48_&amp;&amp;_bresult_i___57___if_decimals__if__b__0_breakelse_b--_mint__10mint__uint_bresult_i__-48_elseif_bresult_i___46_decimals_true_.L604*C25985"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._b.L600*C25874">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>_b</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if._b_0.L614*C26218"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._a.L600*C25863">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_a</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L204*C10384">
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.args.L204*C10427">
            <sol:typeName>string[2]</sol:typeName>
            <sol:nameIs>args</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L204*C10408">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize_query_datasource_dynargs_.L208*C10578">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_1__args_1_.L207*C10555">
                <sol:before>
                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L206*C10532">
                    <sol:before>
                      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.string__memorydynargs.L205*C10488">
                        <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L204*C10384"/>
                        <sol:storageLocate>memory</sol:storageLocate>
                        <sol:valueIs>newstring[](2)</sol:valueIs>
                        <sol:nameIs>dynargs</sol:nameIs>
                        <sol:typeName>string[]</sol:typeName>
                      </sol:StateVar>
                    </sol:before>
                    <sol:assignSymbol>=</sol:assignSymbol>
                    <sol:assignRight>args[0]</sol:assignRight>
                    <sol:assignLeft>dynargs[0]</sol:assignLeft>
                  </sol:Assignment>
                </sol:before>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>args[1]</sol:assignRight>
                <sol:assignLeft>dynargs[1]</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:returnText>oraclize_query(datasource,dynargs)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_1__args_1_.L207*C10555"/>
        <sol:nameIs>oraclize_query</sol:nameIs>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L204*C10464">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.id.L204*C10473">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.string__memorydynargs.L205*C10488"/>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L206*C10532"/>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L160*C7948">
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L160*C7972">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.argN.L160*C7991">
            <sol:typeName>string[]</sol:typeName>
            <sol:nameIs>argN</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemoryargs.L163*C8175">
            <sol:before>
              <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.0.L162*C8137">
                <sol:before>
                  <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L162*C8095">
                    <sol:hasReturnValue rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.0.L162*C8137"/>
                    <sol:before>
                      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.price_1ether_tx.gasprice_200000.L162*C8095">
                        <sol:before>
                          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.price_1ether_tx.gasprice_200000.L162*C8095">
                            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L162*C8095"/>
                            <sol:before>
                              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintprice.L161*C8050">
                                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L160*C7948"/>
                                <sol:valueIs>oraclize.getPrice(datasource)</sol:valueIs>
                                <sol:nameIs>price</sol:nameIs>
                                <sol:typeName>uint</sol:typeName>
                              </sol:StateVar>
                            </sol:before>
                            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.price_1ether_tx.gasprice_200000.L162*C8095"/>
                          </sol:FunctionIf>
                        </sol:before>
                        <sol:hasIfCondition>price&gt;1ether+tx.gasprice*200000</sol:hasIfCondition>
                      </sol:IfCondition>
                    </sol:before>
                  </sol:IfRight>
                </sol:before>
                <sol:returnText>0</sol:returnText>
              </sol:ReturnValue>
            </sol:before>
            <sol:storageLocate>memory</sol:storageLocate>
            <sol:valueIs>stra2cbor(argN)</sol:valueIs>
            <sol:nameIs>args</sol:nameIs>
            <sol:typeName>bytes</sol:typeName>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.price_1ether_tx.gasprice_200000.L162*C8095"/>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize.queryN.value_price__0_datasource_args_.L164*C8213">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemoryargs.L163*C8175"/>
            <sol:returnText>oraclize.queryN.value(price)(0,datasource,args)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:nameIs>oraclize_query</sol:nameIs>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintprice.L161*C8050"/>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L160*C8027">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.id.L160*C8036">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_randomDS_setCommitment.L736*C29811">
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.oraclize_randomDS_args_queryId__commitment.L737*C29901">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_randomDS_setCommitment.L736*C29811"/>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>commitment</sol:assignRight>
            <sol:assignLeft>oraclize_randomDS_args[queryId]</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.commitment.L736*C29869">
            <sol:typeName>bytes32</sol:typeName>
            <sol:nameIs>commitment</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.queryId.L736*C29852">
            <sol:typeName>bytes32</sol:typeName>
            <sol:nameIs>queryId</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>oraclize_randomDS_setCommitment</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L342*C16294">
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintprice.L343*C16410">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L342*C16294"/>
            <sol:valueIs>oraclize.getPrice(datasource,gaslimit)</sol:valueIs>
            <sol:nameIs>price</sol:nameIs>
            <sol:typeName>uint</sol:typeName>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L342*C16387">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.id.L342*C16396">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.argN.L342*C16337">
            <sol:typeName>bytes[]</sol:typeName>
            <sol:nameIs>argN</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.gaslimit.L342*C16351">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>gaslimit</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize.queryN_withGasLimit.value_price__0_datasource_args_gaslimit_.L346*C16583">
            <sol:before>
              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemoryargs.L345*C16547">
                <sol:before>
                  <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.0.L344*C16509">
                    <sol:before>
                      <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L344*C16465">
                        <sol:hasReturnValue rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.0.L344*C16509"/>
                        <sol:before>
                          <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.price_1ether_tx.gasprice_gaslimit.L344*C16465">
                            <sol:before>
                              <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.price_1ether_tx.gasprice_gaslimit.L344*C16465">
                                <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L344*C16465"/>
                                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintprice.L343*C16410"/>
                                <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.price_1ether_tx.gasprice_gaslimit.L344*C16465"/>
                              </sol:FunctionIf>
                            </sol:before>
                            <sol:hasIfCondition>price&gt;1ether+tx.gasprice*gaslimit</sol:hasIfCondition>
                          </sol:IfCondition>
                        </sol:before>
                      </sol:IfRight>
                    </sol:before>
                    <sol:returnText>0</sol:returnText>
                  </sol:ReturnValue>
                </sol:before>
                <sol:storageLocate>memory</sol:storageLocate>
                <sol:valueIs>ba2cbor(argN)</sol:valueIs>
                <sol:nameIs>args</sol:nameIs>
                <sol:typeName>bytes</sol:typeName>
              </sol:StateVar>
            </sol:before>
            <sol:returnText>oraclize.queryN_withGasLimit.value(price)(0,datasource,args,gaslimit)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemoryargs.L345*C16547"/>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.price_1ether_tx.gasprice_gaslimit.L344*C16465"/>
        <sol:nameIs>oraclize_query</sol:nameIs>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L342*C16318">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.strConcat.L592*C25605">
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.strConcat__a__b_&quot;&quot;_&quot;&quot;_&quot;&quot;_.L593*C25675">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.strConcat.L592*C25605"/>
            <sol:returnText>strConcat(_a,_b,"","","")</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L592*C25655">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.string.L592*C25664">
                <sol:typeName>string</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._b.L592*C25635">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_b</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._a.L592*C25624">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_a</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>strConcat</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_setConfig.L497*C22762">
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize.setConfig_config_.L498*C22830">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_setConfig.L497*C22762"/>
            <sol:returnText>oraclize.setConfig(config)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.config.L497*C22790">
            <sol:typeName>bytes32</sol:typeName>
            <sol:nameIs>config</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>oraclize_setConfig</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.matchBytes32Prefix.L801*C32938">
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.boolmatch_.L802*C33044">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.matchBytes32Prefix.L801*C32938"/>
            <sol:valueIs>true</sol:valueIs>
            <sol:nameIs>match_</sol:nameIs>
            <sol:typeName>bool</sol:typeName>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:nameIs>matchBytes32Prefix</sol:nameIs>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.content.L801*C32966">
            <sol:typeName>bytes32</sol:typeName>
            <sol:nameIs>content</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.match_.L807*C33162">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.match__false.L805*C33142">
                <sol:before>
                  <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if_ifRight._.L805*C33113">
                    <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.match__false.L805*C33142"/>
                    <sol:before>
                      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if.content_i_!_prefix_i_.L805*C33113">
                        <sol:before>
                          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_for_if.content_i_!_prefix_i_.L805*C33113">
                            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if_ifRight._.L805*C33113"/>
                            <sol:before>
                              <sol:FunctionFor rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for.for_uint256i_0i_n_random_bytesi____if_content_i_!_prefix_i__match__false_.L804*C33068">
                                <sol:conditionStep>i++</sol:conditionStep>
                                <sol:hasForCondition>
                                  <sol:ForCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.i_n_random_bytes.L804*C33068">
                                    <sol:conditionValue>n_random_bytes</sol:conditionValue>
                                    <sol:conditionSymbol>&lt;</sol:conditionSymbol>
                                  </sol:ForCondition>
                                </sol:hasForCondition>
                                <sol:conditionVar>i</sol:conditionVar>
                                <sol:hasStateVar>
                                  <sol:stateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.uint256i.L804*C33068">
                                    <sol:valueIs>0</sol:valueIs>
                                    <sol:nameIs>i</sol:nameIs>
                                    <sol:typeName>uint256</sol:typeName>
                                  </sol:stateVar>
                                </sol:hasStateVar>
                                <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_for_if.content_i_!_prefix_i_.L805*C33113"/>
                                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.boolmatch_.L802*C33044"/>
                              </sol:FunctionFor>
                            </sol:before>
                            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_if.content_i_!_prefix_i_.L805*C33113"/>
                          </sol:FunctionIf>
                        </sol:before>
                        <sol:hasIfCondition>content[i]!=prefix[i]</sol:hasIfCondition>
                      </sol:IfCondition>
                    </sol:before>
                  </sol:IfRight>
                </sol:before>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>false</sol:assignRight>
                <sol:assignLeft>match_</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:returnText>match_</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.prefix.L801*C32983">
            <sol:typeName>bytes</sol:typeName>
            <sol:nameIs>prefix</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L801*C33027">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.bool.L801*C33036">
                <sol:typeName>bool</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.n_random_bytes.L801*C32997">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>n_random_bytes</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasFor rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for.for_uint256i_0i_n_random_bytesi____if_content_i_!_prefix_i__match__false_.L804*C33068"/>
      </sol:Function>
    </sol:hasFunction>
    <sol:defineModifier>
      <sol:Modifier rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_modifier.oraclizeAPI.L59*C2982">
        <sol:hasIf>
          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_modifier_if.address_oraclize_!_OAR.getAddress__.L62*C3099">
            <sol:hasIfRight>
              <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_modifier_if_ifRight._.L62*C3099">
                <sol:containAssignment>
                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.oraclize_OraclizeI_OAR.getAddress___.L63*C3142">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_modifier_if_ifRight._.L62*C3099"/>
                    <sol:assignSymbol>=</sol:assignSymbol>
                    <sol:assignRight>OraclizeI(OAR.getAddress())</sol:assignRight>
                    <sol:assignLeft>oraclize</sol:assignLeft>
                  </sol:Assignment>
                </sol:containAssignment>
                <sol:before>
                  <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_modifier_if.address_oraclize_!_OAR.getAddress__.L62*C3099">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_modifier_if.address_oraclize_!_OAR.getAddress__.L62*C3099"/>
                    <sol:hasIfCondition>address(oraclize)!=OAR.getAddress()</sol:hasIfCondition>
                  </sol:IfCondition>
                </sol:before>
              </sol:IfRight>
            </sol:hasIfRight>
            <sol:before>
              <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.oraclize_setNetwork.L61*C3061">
                <sol:before>
                  <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_modifier_if_ifRight._.L60*C3006">
                    <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.oraclize_setNetwork.L61*C3061"/>
                    <sol:before>
                      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_modifier_if._address_OAR___0____getCodeSize_address_OAR____0_.L60*C3006">
                        <sol:before>
                          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_modifier_if._address_OAR___0____getCodeSize_address_OAR____0_.L60*C3006">
                            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_modifier_if_ifRight._.L60*C3006"/>
                            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_modifier.oraclizeAPI.L59*C2982"/>
                            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_modifier_if._address_OAR___0____getCodeSize_address_OAR____0_.L60*C3006"/>
                          </sol:FunctionIf>
                        </sol:before>
                        <sol:hasIfCondition>(address(OAR)==0)||(getCodeSize(address(OAR))==0)</sol:hasIfCondition>
                      </sol:IfCondition>
                    </sol:before>
                  </sol:IfRight>
                </sol:before>
                <sol:callFunctionArgument>networkID_auto</sol:callFunctionArgument>
                <sol:callFunctionName>oraclize_setNetwork</sol:callFunctionName>
              </sol:FunctionCall>
            </sol:before>
            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_modifier_if.address_oraclize_!_OAR.getAddress__.L62*C3099"/>
          </sol:FunctionIf>
        </sol:hasIf>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_modifier_if._address_OAR___0____getCodeSize_address_OAR____0_.L60*C3006"/>
        <sol:nameIs>oraclizeAPI</sol:nameIs>
      </sol:Modifier>
    </sol:defineModifier>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L216*C10895">
        <sol:nameIs>oraclize_query</sol:nameIs>
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.string__memorydynargs.L217*C11030">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L216*C10895"/>
            <sol:storageLocate>memory</sol:storageLocate>
            <sol:valueIs>newstring[](2)</sol:valueIs>
            <sol:nameIs>dynargs</sol:nameIs>
            <sol:typeName>string[]</sol:typeName>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L216*C11006">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.id.L216*C11015">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize_query_timestamp_datasource_dynargs_gaslimit_.L220*C11120">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_1__args_1_.L219*C11097">
                <sol:before>
                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L218*C11074">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.string__memorydynargs.L217*C11030"/>
                    <sol:assignSymbol>=</sol:assignSymbol>
                    <sol:assignRight>args[0]</sol:assignRight>
                    <sol:assignLeft>dynargs[0]</sol:assignLeft>
                  </sol:Assignment>
                </sol:before>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>args[1]</sol:assignRight>
                <sol:assignLeft>dynargs[1]</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:returnText>oraclize_query(timestamp,datasource,dynargs,gaslimit)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_1__args_1_.L219*C11097"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L216*C10935">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.gaslimit.L216*C10970">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>gaslimit</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L218*C11074"/>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.args.L216*C10954">
            <sol:typeName>string[2]</sol:typeName>
            <sol:nameIs>args</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.timestamp.L216*C10919">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>timestamp</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L135*C6242">
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintprice.L136*C6356">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L135*C6242"/>
            <sol:valueIs>oraclize.getPrice(datasource,gaslimit)</sol:valueIs>
            <sol:nameIs>price</sol:nameIs>
            <sol:typeName>uint</sol:typeName>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasIf>
          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.price_1ether_tx.gasprice_gaslimit.L137*C6411">
            <sol:hasIfRight>
              <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L137*C6411">
                <sol:hasReturnValue>
                  <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.0.L137*C6455">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L137*C6411"/>
                    <sol:returnText>0</sol:returnText>
                  </sol:ReturnValue>
                </sol:hasReturnValue>
                <sol:before>
                  <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.price_1ether_tx.gasprice_gaslimit.L137*C6411">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.price_1ether_tx.gasprice_gaslimit.L137*C6411"/>
                    <sol:hasIfCondition>price&gt;1ether+tx.gasprice*gaslimit</sol:hasIfCondition>
                  </sol:IfCondition>
                </sol:before>
              </sol:IfRight>
            </sol:hasIfRight>
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintprice.L136*C6356"/>
            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.price_1ether_tx.gasprice_gaslimit.L137*C6411"/>
          </sol:FunctionIf>
        </sol:hasIf>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.gaslimit.L135*C6297">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>gaslimit</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L135*C6333">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.id.L135*C6342">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize.query_withGasLimit.value_price__0_datasource_arg_gaslimit_.L138*C6493">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.0.L137*C6455"/>
            <sol:returnText>oraclize.query_withGasLimit.value(price)(0,datasource,arg,gaslimit)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L135*C6266">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>oraclize_query</sol:nameIs>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.arg.L135*C6285">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>arg</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.getCodeSize.L503*C23013">
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L503*C23067">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param._size.L503*C23075">
                <sol:typeName>uint</sol:typeName>
                <sol:nameIs>_size</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._addr.L503*C23034">
            <sol:typeName>address</sol:typeName>
            <sol:nameIs>_addr</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>getCodeSize</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L194*C9869">
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L194*C9980">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.id.L194*C9989">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.args.L194*C9928">
            <sol:typeName>string[1]</sol:typeName>
            <sol:nameIs>args</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>oraclize_query</sol:nameIs>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L194*C9909">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.timestamp.L194*C9893">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>timestamp</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize_query_timestamp_datasource_dynargs_gaslimit_.L197*C10071">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L196*C10048">
                <sol:before>
                  <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.string__memorydynargs.L195*C10004">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L194*C9869"/>
                    <sol:storageLocate>memory</sol:storageLocate>
                    <sol:valueIs>newstring[](1)</sol:valueIs>
                    <sol:nameIs>dynargs</sol:nameIs>
                    <sol:typeName>string[]</sol:typeName>
                  </sol:StateVar>
                </sol:before>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>args[0]</sol:assignRight>
                <sol:assignLeft>dynargs[0]</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:returnText>oraclize_query(timestamp,datasource,dynargs,gaslimit)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.gaslimit.L194*C9944">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>gaslimit</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L196*C10048"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.string__memorydynargs.L195*C10004"/>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L348*C16668">
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes__memorydynargs.L349*C16771">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L348*C16668"/>
            <sol:storageLocate>memory</sol:storageLocate>
            <sol:valueIs>newbytes[](1)</sol:valueIs>
            <sol:nameIs>dynargs</sol:nameIs>
            <sol:typeName>bytes[]</sol:typeName>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:nameIs>oraclize_query</sol:nameIs>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L348*C16692">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.args.L348*C16711">
            <sol:typeName>bytes[1]</sol:typeName>
            <sol:nameIs>args</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L350*C16813">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes__memorydynargs.L349*C16771"/>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>args[0]</sol:assignRight>
            <sol:assignLeft>dynargs[0]</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L348*C16747">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.id.L348*C16756">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize_query_datasource_dynargs_.L351*C16836">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L350*C16813"/>
            <sol:returnText>oraclize_query(datasource,dynargs)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.__callback.L106*C4756">
        <sol:callFunction>
          <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.__callback.L107*C4808">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.__callback.L106*C4756"/>
            <sol:callFunctionArgument>myid,result,newbytes(0)</sol:callFunctionArgument>
            <sol:callFunctionName>__callback</sol:callFunctionName>
          </sol:FunctionCall>
        </sol:callFunction>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.result.L106*C4790">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>result</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.myid.L106*C4776">
            <sol:typeName>bytes32</sol:typeName>
            <sol:nameIs>myid</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>__callback</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L130*C5884">
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L130*C5991">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.id.L130*C6000">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L130*C5924">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.gaslimit.L130*C5955">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>gaslimit</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>oraclize_query</sol:nameIs>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.arg.L130*C5943">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>arg</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintprice.L131*C6014">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L130*C5884"/>
            <sol:valueIs>oraclize.getPrice(datasource,gaslimit)</sol:valueIs>
            <sol:nameIs>price</sol:nameIs>
            <sol:typeName>uint</sol:typeName>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize.query_withGasLimit.value_price__timestamp_datasource_arg_gaslimit_.L133*C6151">
            <sol:before>
              <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.0.L132*C6113">
                <sol:before>
                  <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L132*C6069">
                    <sol:hasReturnValue rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.0.L132*C6113"/>
                    <sol:before>
                      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.price_1ether_tx.gasprice_gaslimit.L132*C6069">
                        <sol:before>
                          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.price_1ether_tx.gasprice_gaslimit.L132*C6069">
                            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L132*C6069"/>
                            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintprice.L131*C6014"/>
                            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.price_1ether_tx.gasprice_gaslimit.L132*C6069"/>
                          </sol:FunctionIf>
                        </sol:before>
                        <sol:hasIfCondition>price&gt;1ether+tx.gasprice*gaslimit</sol:hasIfCondition>
                      </sol:IfCondition>
                    </sol:before>
                  </sol:IfRight>
                </sol:before>
                <sol:returnText>0</sol:returnText>
              </sol:ReturnValue>
            </sol:before>
            <sol:returnText>oraclize.query_withGasLimit.value(price)(timestamp,datasource,arg,gaslimit)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.price_1ether_tx.gasprice_gaslimit.L132*C6069"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.timestamp.L130*C5908">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>timestamp</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_getNetworkName.L715*C28866">
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize_network_name.L716*C28930">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_getNetworkName.L715*C28866"/>
            <sol:returnText>oraclize_network_name</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L715*C28910">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.string.L715*C28919">
                <sol:typeName>string</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:nameIs>oraclize_getNetworkName</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_randomDS_proofVerify__main.L809*C33181">
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemorykeyhash.L812*C33464">
            <sol:before>
              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintledgerProofLength.L811*C33405">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_randomDS_proofVerify__main.L809*C33181"/>
                <sol:valueIs>3+65+(uint(proof[3+65+1])+2)+32</sol:valueIs>
                <sol:nameIs>ledgerProofLength</sol:nameIs>
                <sol:typeName>uint</sol:typeName>
              </sol:StateVar>
            </sol:before>
            <sol:storageLocate>memory</sol:storageLocate>
            <sol:valueIs>newbytes(32)</sol:valueIs>
            <sol:nameIs>keyhash</sol:nameIs>
            <sol:typeName>bytes</sol:typeName>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasIf>
          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.!matchBytes32Prefix_sha256_sig1__result_uint_proof_ledgerProofLength_32_8___.L818*C33913">
            <sol:hasIfRight>
              <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L818*C33913">
                <sol:hasReturnValue>
                  <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.false.L818*C33997">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L818*C33913"/>
                    <sol:returnText>false</sol:returnText>
                  </sol:ReturnValue>
                </sol:hasReturnValue>
                <sol:before>
                  <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.!matchBytes32Prefix_sha256_sig1__result_uint_proof_ledgerProofLength_32_8___.L818*C33913">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.!matchBytes32Prefix_sha256_sig1__result_uint_proof_ledgerProofLength_32_8___.L818*C33913"/>
                    <sol:hasIfCondition>!matchBytes32Prefix(sha256(sig1),result,uint(proof[ledgerProofLength+32+8]))</sol:hasIfCondition>
                  </sol:IfCondition>
                </sol:before>
              </sol:IfRight>
            </sol:hasIfRight>
            <sol:before>
              <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.copyBytes.L816*C33713">
                <sol:before>
                  <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemorysig1.L815*C33633">
                    <sol:before>
                      <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.false.L814*C33618">
                        <sol:before>
                          <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L814*C33557">
                            <sol:hasReturnValue rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.false.L814*C33618"/>
                            <sol:before>
                              <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.!_sha3_keyhash___sha3_sha256_context_name_queryId___.L814*C33557">
                                <sol:before>
                                  <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.!_sha3_keyhash___sha3_sha256_context_name_queryId___.L814*C33557">
                                    <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L814*C33557"/>
                                    <sol:before>
                                      <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.copyBytes.L813*C33503">
                                        <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemorykeyhash.L812*C33464"/>
                                        <sol:callFunctionArgument
                                        >proof,ledgerProofLength,32,keyhash,0</sol:callFunctionArgument>
                                        <sol:callFunctionName
                                        >copyBytes</sol:callFunctionName>
                                      </sol:FunctionCall>
                                    </sol:before>
                                    <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.!_sha3_keyhash___sha3_sha256_context_name_queryId___.L814*C33557"/>
                                  </sol:FunctionIf>
                                </sol:before>
                                <sol:hasIfCondition>!(sha3(keyhash)==sha3(sha256(context_name,queryId)))</sol:hasIfCondition>
                              </sol:IfCondition>
                            </sol:before>
                          </sol:IfRight>
                        </sol:before>
                        <sol:returnText>false</sol:returnText>
                      </sol:ReturnValue>
                    </sol:before>
                    <sol:storageLocate>memory</sol:storageLocate>
                    <sol:valueIs>newbytes(uint(proof[ledgerProofLength+(32+8+1+32)+1])+2)</sol:valueIs>
                    <sol:nameIs>sig1</sol:nameIs>
                    <sol:typeName>bytes</sol:typeName>
                  </sol:StateVar>
                </sol:before>
                <sol:callFunctionArgument>proof,ledgerProofLength+(32+8+1+32),sig1.length,sig1,0</sol:callFunctionArgument>
                <sol:callFunctionName>copyBytes</sol:callFunctionName>
              </sol:FunctionCall>
            </sol:before>
            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.!matchBytes32Prefix_sha256_sig1__result_uint_proof_ledgerProofLength_32_8___.L818*C33913"/>
          </sol:FunctionIf>
        </sol:hasIf>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.result.L809*C33256">
            <sol:typeName>bytes</sol:typeName>
            <sol:nameIs>result</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.proof.L809*C33226">
            <sol:typeName>bytes</sol:typeName>
            <sol:nameIs>proof</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasIf>
          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.oraclize_randomDS_sessionKeysHashVerified_sessionPubkeyHash___false.L835*C35084">
            <sol:hasIfRight>
              <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L835*C35084">
                <sol:containAssignment>
                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.oraclize_randomDS_sessionKeysHashVerified_sessionPubkeyHash__oraclize_randomDS_proofVerify__sessionKeyValidity_proof_sig2offset_.L836*C35161">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L835*C35084"/>
                    <sol:assignSymbol>=</sol:assignSymbol>
                    <sol:assignRight>oraclize_randomDS_proofVerify__sessionKeyValidity(proof,sig2offset)</sol:assignRight>
                    <sol:assignLeft>oraclize_randomDS_sessionKeysHashVerified[sessionPubkeyHash]</sol:assignLeft>
                  </sol:Assignment>
                </sol:containAssignment>
                <sol:before>
                  <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.oraclize_randomDS_sessionKeysHashVerified_sessionPubkeyHash___false.L835*C35084">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.oraclize_randomDS_sessionKeysHashVerified_sessionPubkeyHash___false.L835*C35084"/>
                    <sol:hasIfCondition>oraclize_randomDS_sessionKeysHashVerified[sessionPubkeyHash]==false</sol:hasIfCondition>
                  </sol:IfCondition>
                </sol:before>
              </sol:IfRight>
            </sol:hasIfRight>
            <sol:before>
              <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.false.L833*C34993">
                <sol:before>
                  <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L833*C34939">
                    <sol:hasReturnValue rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.false.L833*C34993"/>
                    <sol:before>
                      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.!verifySig_sha256_tosign1__sig1_sessionPubkey_.L833*C34939">
                        <sol:before>
                          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.!verifySig_sha256_tosign1__sig1_sessionPubkey_.L833*C34939">
                            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L833*C34939"/>
                            <sol:before>
                              <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.copyBytes.L832*C34878">
                                <sol:before>
                                  <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemorytosign1.L831*C34832">
                                    <sol:before>
                                      <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifWrong_return.false.L829*C34728">
                                        <sol:before>
                                          <sol:VariableOperation rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprVaribleOp.deleteoraclize_randomDS_args_queryId_.L828*C34680">
                                            <sol:before>
                                              <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L827*C34554">
                                                <sol:operateVarible rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprVaribleOp.deleteoraclize_randomDS_args_queryId_.L828*C34680"/>
                                                <sol:before>
                                                  <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.oraclize_randomDS_args_queryId___sha3_commitmentSlice1_sessionPubkeyHash_.L827*C34554">
                                                    <sol:before>
                                                      <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.oraclize_randomDS_args_queryId___sha3_commitmentSlice1_sessionPubkeyHash_.L827*C34554">
                                                        <sol:hasIfWrong>
                                                          <sol:IfWrong rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifWrong._.L827*C34554">
                                                            <sol:hasReturnValue rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifWrong_return.false.L829*C34728"/>
                                                            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.oraclize_randomDS_args_queryId___sha3_commitmentSlice1_sessionPubkeyHash_.L827*C34554"/>
                                                          </sol:IfWrong>
                                                        </sol:hasIfWrong>
                                                        <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L827*C34554"/>
                                                        <sol:before>
                                                          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes32sessionPubkeyHash.L826*C34502">
                                                            <sol:before>
                                                              <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.copyBytes.L825*C34446">
    <sol:before>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintsig2offset.L824*C34381">
        <sol:before>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemorysessionPubkey.L823*C34336">
            <sol:before>
              <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.copyBytes.L822*C34266">
                <sol:before>
                  <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemorycommitmentSlice1.L821*C34214">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.false.L818*C33997"/>
                    <sol:storageLocate>memory</sol:storageLocate>
                    <sol:valueIs>newbytes(8+1+32)</sol:valueIs>
                    <sol:nameIs>commitmentSlice1</sol:nameIs>
                    <sol:typeName>bytes</sol:typeName>
                  </sol:StateVar>
                </sol:before>
                <sol:callFunctionArgument>proof,ledgerProofLength+32,8+1+32,commitmentSlice1,0</sol:callFunctionArgument>
                <sol:callFunctionName>copyBytes</sol:callFunctionName>
              </sol:FunctionCall>
            </sol:before>
            <sol:storageLocate>memory</sol:storageLocate>
            <sol:valueIs>newbytes(64)</sol:valueIs>
            <sol:nameIs>sessionPubkey</sol:nameIs>
            <sol:typeName>bytes</sol:typeName>
          </sol:StateVar>
        </sol:before>
        <sol:valueIs>ledgerProofLength+32+(8+1+32)+sig1.length+65</sol:valueIs>
        <sol:nameIs>sig2offset</sol:nameIs>
        <sol:typeName>uint</sol:typeName>
      </sol:StateVar>
    </sol:before>
    <sol:callFunctionArgument>proof,sig2offset-64,64,sessionPubkey,0</sol:callFunctionArgument>
    <sol:callFunctionName>copyBytes</sol:callFunctionName>    </sol:FunctionCall>
                                                            </sol:before>
                                                            <sol:valueIs
                                                            >sha256(sessionPubkey)</sol:valueIs>
                                                            <sol:nameIs
                                                            >sessionPubkeyHash</sol:nameIs>
                                                            <sol:typeName
                                                            >bytes32</sol:typeName>
                                                          </sol:StateVar>
                                                        </sol:before>
                                                        <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.oraclize_randomDS_args_queryId___sha3_commitmentSlice1_sessionPubkeyHash_.L827*C34554"/>
                                                      </sol:FunctionIf>
                                                    </sol:before>
                                                    <sol:hasIfCondition
                                                    >oraclize_randomDS_args[queryId]==sha3(commitmentSlice1,sessionPubkeyHash)</sol:hasIfCondition>
                                                  </sol:IfCondition>
                                                </sol:before>
                                              </sol:IfRight>
                                            </sol:before>
                                            <sol:opSymbol>oraclize_randomDS_args[queryId]</sol:opSymbol>
                                            <sol:opVarible>delete</sol:opVarible>
                                          </sol:VariableOperation>
                                        </sol:before>
                                        <sol:returnText>false</sol:returnText>
                                      </sol:ReturnValue>
                                    </sol:before>
                                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprVaribleOp.deleteoraclize_randomDS_args_queryId_.L828*C34680"/>
                                    <sol:storageLocate>memory</sol:storageLocate>
                                    <sol:valueIs>newbytes(32+8+1+32)</sol:valueIs>
                                    <sol:nameIs>tosign1</sol:nameIs>
                                    <sol:typeName>bytes</sol:typeName>
                                  </sol:StateVar>
                                </sol:before>
                                <sol:callFunctionArgument>proof,ledgerProofLength,32+8+1+32,tosign1,0</sol:callFunctionArgument>
                                <sol:callFunctionName>copyBytes</sol:callFunctionName>
                              </sol:FunctionCall>
                            </sol:before>
                            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.!verifySig_sha256_tosign1__sig1_sessionPubkey_.L833*C34939"/>
                          </sol:FunctionIf>
                        </sol:before>
                        <sol:hasIfCondition>!verifySig(sha256(tosign1),sig1,sessionPubkey)</sol:hasIfCondition>
                      </sol:IfCondition>
                    </sol:before>
                  </sol:IfRight>
                </sol:before>
                <sol:returnText>false</sol:returnText>
              </sol:ReturnValue>
            </sol:before>
            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.oraclize_randomDS_sessionKeysHashVerified_sessionPubkeyHash___false.L835*C35084"/>
          </sol:FunctionIf>
        </sol:hasIf>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.!_sha3_keyhash___sha3_sha256_context_name_queryId___.L814*C33557"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintledgerProofLength.L811*C33405"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.queryId.L809*C33239">
            <sol:typeName>bytes32</sol:typeName>
            <sol:nameIs>queryId</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.copyBytes.L832*C34878"/>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.copyBytes.L825*C34446"/>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.copyBytes.L816*C33713"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes32sessionPubkeyHash.L826*C34502"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintsig2offset.L824*C34381"/>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize_randomDS_sessionKeysHashVerified_sessionPubkeyHash_.L838*C35298">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.oraclize_randomDS_sessionKeysHashVerified_sessionPubkeyHash__oraclize_randomDS_proofVerify__sessionKeyValidity_proof_sig2offset_.L836*C35161"/>
            <sol:returnText>oraclize_randomDS_sessionKeysHashVerified[sessionPubkeyHash]</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemorycommitmentSlice1.L821*C34214"/>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.copyBytes.L822*C34266"/>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L809*C33300">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.bool.L809*C33309">
                <sol:typeName>bool</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemorytosign1.L831*C34832"/>
        <sol:nameIs>oraclize_randomDS_proofVerify__main</sol:nameIs>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemorysessionPubkey.L823*C34336"/>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.oraclize_randomDS_args_queryId___sha3_commitmentSlice1_sessionPubkeyHash_.L827*C34554"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.context_name.L809*C33270">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>context_name</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.copyBytes.L813*C33503"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemorysig1.L815*C33633"/>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.!verifySig_sha256_tosign1__sig1_sessionPubkey_.L833*C34939"/>
      </sol:Function>
    </sol:hasFunction>
    <sol:defineModifier>
      <sol:Modifier rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_modifier.coupon.L66*C3190">
        <sol:callFunction>
          <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.oraclize.useCoupon.L68*C3262">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.oraclize_OraclizeI_OAR.getAddress___.L67*C3221">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_modifier.coupon.L66*C3190"/>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>OraclizeI(OAR.getAddress())</sol:assignRight>
                <sol:assignLeft>oraclize</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:callFunctionArgument>code</sol:callFunctionArgument>
            <sol:callFunctionName>useCoupon</sol:callFunctionName>
            <sol:callFunctionObject>oraclize</sol:callFunctionObject>
          </sol:FunctionCall>
        </sol:callFunction>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.oraclize_OraclizeI_OAR.getAddress___.L67*C3221"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_modifier_param.code.L66*C3206">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>code</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>coupon</sol:nameIs>
      </sol:Modifier>
    </sol:defineModifier>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_newRandomDSQuery.L718*C28964">
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L718*C29057">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.bytes32.L718*C29066">
                <sol:typeName>bytes32</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.queryId.L734*C29791">
            <sol:before>
              <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.oraclize_randomDS_setCommitment.L733*C29691">
                <sol:before>
                  <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes32queryId.L732*C29615">
                    <sol:before>
                      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes_3_memoryargs.L731*C29557">
                        <sol:before>
                          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes32sessionKeyHash_bytes32.L724*C29270">
                            <sol:before>
                              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemorysessionKeyHash.L723*C29224">
                                <sol:before>
                                  <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemoryunonce.L722*C29186">
                                    <sol:before>
                                      <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.nbytes_0__byte__nbytes_.L721*C29158">
                                        <sol:before>
                                          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemorynbytes.L720*C29121">
                                            <sol:before>
                                              <sol:Throw rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_throw.throw;.L719*C29113">
                                                <sol:before>
                                                  <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L719*C29077">
                                                    <sol:hasThrow rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_throw.throw;.L719*C29113"/>
                                                    <sol:before>
                                                      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.__nbytes__0_____nbytes_32_.L719*C29077">
                                                        <sol:before>
                                                          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.__nbytes__0_____nbytes_32_.L719*C29077">
                                                            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L719*C29077"/>
                                                            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_newRandomDSQuery.L718*C28964"/>
                                                            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.__nbytes__0_____nbytes_32_.L719*C29077"/>
                                                          </sol:FunctionIf>
                                                        </sol:before>
                                                        <sol:hasIfCondition
                                                        >(_nbytes==0)||(_nbytes&gt;32)</sol:hasIfCondition>
                                                      </sol:IfCondition>
                                                    </sol:before>
                                                  </sol:IfRight>
                                                </sol:before>
                                                <sol:throwText
                                                >throw;</sol:throwText>
                                              </sol:Throw>
                                            </sol:before>
                                            <sol:storageLocate
                                            >memory</sol:storageLocate>
                                            <sol:valueIs>newbytes(1)</sol:valueIs>
                                            <sol:nameIs>nbytes</sol:nameIs>
                                            <sol:typeName>bytes</sol:typeName>
                                          </sol:StateVar>
                                        </sol:before>
                                        <sol:assignSymbol>=</sol:assignSymbol>
                                        <sol:assignRight>byte(_nbytes)</sol:assignRight>
                                        <sol:assignLeft>nbytes[0]</sol:assignLeft>
                                      </sol:Assignment>
                                    </sol:before>
                                    <sol:storageLocate>memory</sol:storageLocate>
                                    <sol:valueIs>newbytes(32)</sol:valueIs>
                                    <sol:nameIs>unonce</sol:nameIs>
                                    <sol:typeName>bytes</sol:typeName>
                                  </sol:StateVar>
                                </sol:before>
                                <sol:storageLocate>memory</sol:storageLocate>
                                <sol:valueIs>newbytes(32)</sol:valueIs>
                                <sol:nameIs>sessionKeyHash</sol:nameIs>
                                <sol:typeName>bytes</sol:typeName>
                              </sol:StateVar>
                            </sol:before>
                            <sol:valueIs>oraclize_randomDS_getSessionPubKeyHash()</sol:valueIs>
                            <sol:nameIs>sessionKeyHash_bytes32</sol:nameIs>
                            <sol:typeName>bytes32</sol:typeName>
                          </sol:StateVar>
                        </sol:before>
                        <sol:storageLocate>memory</sol:storageLocate>
                        <sol:valueIs>[unonce,nbytes,sessionKeyHash]</sol:valueIs>
                        <sol:nameIs>args</sol:nameIs>
                        <sol:typeName>bytes[3]</sol:typeName>
                      </sol:StateVar>
                    </sol:before>
                    <sol:valueIs>oraclize_query(_delay,"random",args,_customGasLimit)</sol:valueIs>
                    <sol:nameIs>queryId</sol:nameIs>
                    <sol:typeName>bytes32</sol:typeName>
                  </sol:StateVar>
                </sol:before>
                <sol:callFunctionArgument>queryId,sha3(bytes8(_delay),args[1],sha256(args[0]),args[2])</sol:callFunctionArgument>
                <sol:callFunctionName>oraclize_randomDS_setCommitment</sol:callFunctionName>
              </sol:FunctionCall>
            </sol:before>
            <sol:returnText>queryId</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes_3_memoryargs.L731*C29557"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemorynbytes.L720*C29121"/>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes32sessionKeyHash_bytes32.L724*C29270"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._nbytes.L718*C29012">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>_nbytes</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.oraclize_randomDS_setCommitment.L733*C29691"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._customGasLimit.L718*C29026">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>_customGasLimit</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemoryunonce.L722*C29186"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemorysessionKeyHash.L723*C29224"/>
        <sol:nameIs>oraclize_newRandomDSQuery</sol:nameIs>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.__nbytes__0_____nbytes_32_.L719*C29077"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._delay.L718*C28999">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>_delay</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes32queryId.L732*C29615"/>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.nbytes_0__byte__nbytes_.L721*C29158"/>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L280*C13563">
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L282*C13726">
            <sol:before>
              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.string__memorydynargs.L281*C13682">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L280*C13563"/>
                <sol:storageLocate>memory</sol:storageLocate>
                <sol:valueIs>newstring[](4)</sol:valueIs>
                <sol:nameIs>dynargs</sol:nameIs>
                <sol:typeName>string[]</sol:typeName>
              </sol:StateVar>
            </sol:before>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>args[0]</sol:assignRight>
            <sol:assignLeft>dynargs[0]</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.args.L280*C13606">
            <sol:typeName>string[4]</sol:typeName>
            <sol:nameIs>args</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.gaslimit.L280*C13622">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>gaslimit</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L280*C13658">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.id.L280*C13667">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_2__args_2_.L284*C13772">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_1__args_1_.L283*C13749">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L282*C13726"/>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>args[1]</sol:assignRight>
                <sol:assignLeft>dynargs[1]</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>args[2]</sol:assignRight>
            <sol:assignLeft>dynargs[2]</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L280*C13587">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.string__memorydynargs.L281*C13682"/>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize_query_datasource_dynargs_gaslimit_.L286*C13818">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_3__args_3_.L285*C13795">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_2__args_2_.L284*C13772"/>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>args[3]</sol:assignRight>
                <sol:assignLeft>dynargs[3]</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:returnText>oraclize_query(datasource,dynargs,gaslimit)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_1__args_1_.L283*C13749"/>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_3__args_3_.L285*C13795"/>
        <sol:nameIs>oraclize_query</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L444*C20782">
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L446*C20942">
            <sol:before>
              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes__memorydynargs.L445*C20900">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L444*C20782"/>
                <sol:storageLocate>memory</sol:storageLocate>
                <sol:valueIs>newbytes[](4)</sol:valueIs>
                <sol:nameIs>dynargs</sol:nameIs>
                <sol:typeName>bytes[]</sol:typeName>
              </sol:StateVar>
            </sol:before>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>args[0]</sol:assignRight>
            <sol:assignLeft>dynargs[0]</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.args.L444*C20825">
            <sol:typeName>bytes[4]</sol:typeName>
            <sol:nameIs>args</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes__memorydynargs.L445*C20900"/>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize_query_datasource_dynargs_gaslimit_.L450*C21034">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_3__args_3_.L449*C21011">
                <sol:before>
                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_2__args_2_.L448*C20988">
                    <sol:before>
                      <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_1__args_1_.L447*C20965">
                        <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L446*C20942"/>
                        <sol:assignSymbol>=</sol:assignSymbol>
                        <sol:assignRight>args[1]</sol:assignRight>
                        <sol:assignLeft>dynargs[1]</sol:assignLeft>
                      </sol:Assignment>
                    </sol:before>
                    <sol:assignSymbol>=</sol:assignSymbol>
                    <sol:assignRight>args[2]</sol:assignRight>
                    <sol:assignLeft>dynargs[2]</sol:assignLeft>
                  </sol:Assignment>
                </sol:before>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>args[3]</sol:assignRight>
                <sol:assignLeft>dynargs[3]</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:returnText>oraclize_query(datasource,dynargs,gaslimit)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.gaslimit.L444*C20840">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>gaslimit</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_3__args_3_.L449*C21011"/>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_2__args_2_.L448*C20988"/>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L444*C20876">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.id.L444*C20885">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_1__args_1_.L447*C20965"/>
        <sol:nameIs>oraclize_query</sol:nameIs>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L444*C20806">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.proofType_NONE.L46*C2495">
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:valueIs>0x00</sol:valueIs>
        <sol:typeName>byte</sol:typeName>
        <sol:nameIs>proofType_NONE</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L189*C9623">
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L189*C9719">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.id.L189*C9728">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L191*C9787">
            <sol:before>
              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.string__memorydynargs.L190*C9743">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L189*C9623"/>
                <sol:storageLocate>memory</sol:storageLocate>
                <sol:valueIs>newstring[](1)</sol:valueIs>
                <sol:nameIs>dynargs</sol:nameIs>
                <sol:typeName>string[]</sol:typeName>
              </sol:StateVar>
            </sol:before>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>args[0]</sol:assignRight>
            <sol:assignLeft>dynargs[0]</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.timestamp.L189*C9647">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>timestamp</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:nameIs>oraclize_query</sol:nameIs>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.string__memorydynargs.L190*C9743"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.args.L189*C9682">
            <sol:typeName>string[1]</sol:typeName>
            <sol:nameIs>args</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize_query_timestamp_datasource_dynargs_.L192*C9810">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L191*C9787"/>
            <sol:returnText>oraclize_query(timestamp,datasource,dynargs)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L189*C9663">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L330*C15548">
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L330*C15642">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.id.L330*C15651">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemoryargs.L333*C15790">
            <sol:before>
              <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.0.L332*C15752">
                <sol:before>
                  <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L332*C15710">
                    <sol:hasReturnValue rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.0.L332*C15752"/>
                    <sol:before>
                      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.price_1ether_tx.gasprice_200000.L332*C15710">
                        <sol:before>
                          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.price_1ether_tx.gasprice_200000.L332*C15710">
                            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L332*C15710"/>
                            <sol:before>
                              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintprice.L331*C15665">
                                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L330*C15548"/>
                                <sol:valueIs>oraclize.getPrice(datasource)</sol:valueIs>
                                <sol:nameIs>price</sol:nameIs>
                                <sol:typeName>uint</sol:typeName>
                              </sol:StateVar>
                            </sol:before>
                            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.price_1ether_tx.gasprice_200000.L332*C15710"/>
                          </sol:FunctionIf>
                        </sol:before>
                        <sol:hasIfCondition>price&gt;1ether+tx.gasprice*200000</sol:hasIfCondition>
                      </sol:IfCondition>
                    </sol:before>
                  </sol:IfRight>
                </sol:before>
                <sol:returnText>0</sol:returnText>
              </sol:ReturnValue>
            </sol:before>
            <sol:storageLocate>memory</sol:storageLocate>
            <sol:valueIs>ba2cbor(argN)</sol:valueIs>
            <sol:nameIs>args</sol:nameIs>
            <sol:typeName>bytes</sol:typeName>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.price_1ether_tx.gasprice_200000.L332*C15710"/>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize.queryN.value_price__timestamp_datasource_args_.L334*C15826">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemoryargs.L333*C15790"/>
            <sol:returnText>oraclize.queryN.value(price)(timestamp,datasource,args)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:nameIs>oraclize_query</sol:nameIs>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintprice.L331*C15665"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.argN.L330*C15607">
            <sol:typeName>bytes[]</sol:typeName>
            <sol:nameIs>argN</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L330*C15588">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.timestamp.L330*C15572">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>timestamp</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L120*C5292">
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize.query.value_price__0_datasource_arg_.L123*C5516">
            <sol:before>
              <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.0.L122*C5478">
                <sol:before>
                  <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L122*C5436">
                    <sol:hasReturnValue rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.0.L122*C5478"/>
                    <sol:before>
                      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.price_1ether_tx.gasprice_200000.L122*C5436">
                        <sol:before>
                          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.price_1ether_tx.gasprice_200000.L122*C5436">
                            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L122*C5436"/>
                            <sol:before>
                              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintprice.L121*C5391">
                                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L120*C5292"/>
                                <sol:valueIs>oraclize.getPrice(datasource)</sol:valueIs>
                                <sol:nameIs>price</sol:nameIs>
                                <sol:typeName>uint</sol:typeName>
                              </sol:StateVar>
                            </sol:before>
                            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.price_1ether_tx.gasprice_200000.L122*C5436"/>
                          </sol:FunctionIf>
                        </sol:before>
                        <sol:hasIfCondition>price&gt;1ether+tx.gasprice*200000</sol:hasIfCondition>
                      </sol:IfCondition>
                    </sol:before>
                  </sol:IfRight>
                </sol:before>
                <sol:returnText>0</sol:returnText>
              </sol:ReturnValue>
            </sol:before>
            <sol:returnText>oraclize.query.value(price)(0,datasource,arg)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:nameIs>oraclize_query</sol:nameIs>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintprice.L121*C5391"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.arg.L120*C5335">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>arg</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L120*C5316">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.price_1ether_tx.gasprice_200000.L122*C5436"/>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L120*C5368">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.id.L120*C5377">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_useCoupon.L111*C4920">
        <sol:callFunction>
          <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.oraclize.useCoupon.L112*C4985">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_useCoupon.L111*C4920"/>
            <sol:callFunctionArgument>code</sol:callFunctionArgument>
            <sol:callFunctionName>useCoupon</sol:callFunctionName>
            <sol:callFunctionObject>oraclize</sol:callFunctionObject>
          </sol:FunctionCall>
        </sol:callFunction>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.code.L111*C4948">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>code</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>oraclize_useCoupon</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_setNetworkName.L712*C28756">
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.oraclize_network_name__network_name.L713*C28823">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_setNetworkName.L712*C28756"/>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>_network_name</sol:assignRight>
            <sol:assignLeft>oraclize_network_name</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._network_name.L712*C28789">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_network_name</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>oraclize_setNetworkName</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L242*C12013">
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_1__args_1_.L245*C12215">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L244*C12192">
                <sol:before>
                  <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.string__memorydynargs.L243*C12148">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L242*C12013"/>
                    <sol:storageLocate>memory</sol:storageLocate>
                    <sol:valueIs>newstring[](3)</sol:valueIs>
                    <sol:nameIs>dynargs</sol:nameIs>
                    <sol:typeName>string[]</sol:typeName>
                  </sol:StateVar>
                </sol:before>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>args[0]</sol:assignRight>
                <sol:assignLeft>dynargs[0]</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>args[1]</sol:assignRight>
            <sol:assignLeft>dynargs[1]</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.string__memorydynargs.L243*C12148"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L242*C12053">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.args.L242*C12072">
            <sol:typeName>string[3]</sol:typeName>
            <sol:nameIs>args</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.gaslimit.L242*C12088">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>gaslimit</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L242*C12124">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.id.L242*C12133">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_2__args_2_.L246*C12238">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_1__args_1_.L245*C12215"/>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>args[2]</sol:assignRight>
            <sol:assignLeft>dynargs[2]</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.timestamp.L242*C12037">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>timestamp</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize_query_timestamp_datasource_dynargs_gaslimit_.L247*C12261">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_2__args_2_.L246*C12238"/>
            <sol:returnText>oraclize_query(timestamp,datasource,dynargs,gaslimit)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:nameIs>oraclize_query</sol:nameIs>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L244*C12192"/>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.networkID_testnet.L54*C2813">
        <sol:hasModifier>constant</sol:hasModifier>
        <sol:valueIs>2</sol:valueIs>
        <sol:typeName>uint8</sol:typeName>
        <sol:nameIs>networkID_testnet</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L461*C21400">
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_4__args_4_.L467*C21653">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_3__args_3_.L466*C21630">
                <sol:before>
                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_2__args_2_.L465*C21607">
                    <sol:before>
                      <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_1__args_1_.L464*C21584">
                        <sol:before>
                          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L463*C21561">
                            <sol:before>
                              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes__memorydynargs.L462*C21519">
                                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L461*C21400"/>
                                <sol:storageLocate>memory</sol:storageLocate>
                                <sol:valueIs>newbytes[](5)</sol:valueIs>
                                <sol:nameIs>dynargs</sol:nameIs>
                                <sol:typeName>bytes[]</sol:typeName>
                              </sol:StateVar>
                            </sol:before>
                            <sol:assignSymbol>=</sol:assignSymbol>
                            <sol:assignRight>args[0]</sol:assignRight>
                            <sol:assignLeft>dynargs[0]</sol:assignLeft>
                          </sol:Assignment>
                        </sol:before>
                        <sol:assignSymbol>=</sol:assignSymbol>
                        <sol:assignRight>args[1]</sol:assignRight>
                        <sol:assignLeft>dynargs[1]</sol:assignLeft>
                      </sol:Assignment>
                    </sol:before>
                    <sol:assignSymbol>=</sol:assignSymbol>
                    <sol:assignRight>args[2]</sol:assignRight>
                    <sol:assignLeft>dynargs[2]</sol:assignLeft>
                  </sol:Assignment>
                </sol:before>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>args[3]</sol:assignRight>
                <sol:assignLeft>dynargs[3]</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>args[4]</sol:assignRight>
            <sol:assignLeft>dynargs[4]</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L461*C21495">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.id.L461*C21504">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes__memorydynargs.L462*C21519"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.args.L461*C21459">
            <sol:typeName>bytes[5]</sol:typeName>
            <sol:nameIs>args</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>oraclize_query</sol:nameIs>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L463*C21561"/>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_1__args_1_.L464*C21584"/>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_3__args_3_.L466*C21630"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.timestamp.L461*C21424">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>timestamp</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L461*C21440">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize_query_timestamp_datasource_dynargs_.L468*C21676">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_4__args_4_.L467*C21653"/>
            <sol:returnText>oraclize_query(timestamp,datasource,dynargs)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_2__args_2_.L465*C21607"/>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.strConcat.L570*C24629">
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemory_be.L575*C24856">
            <sol:before>
              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemory_bd.L574*C24825">
                <sol:before>
                  <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemory_bc.L573*C24794">
                    <sol:before>
                      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemory_bb.L572*C24763">
                        <sol:before>
                          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemory_ba.L571*C24732">
                            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.strConcat.L570*C24629"/>
                            <sol:storageLocate>memory</sol:storageLocate>
                            <sol:valueIs>bytes(_a)</sol:valueIs>
                            <sol:nameIs>_ba</sol:nameIs>
                            <sol:typeName>bytes</sol:typeName>
                          </sol:StateVar>
                        </sol:before>
                        <sol:storageLocate>memory</sol:storageLocate>
                        <sol:valueIs>bytes(_b)</sol:valueIs>
                        <sol:nameIs>_bb</sol:nameIs>
                        <sol:typeName>bytes</sol:typeName>
                      </sol:StateVar>
                    </sol:before>
                    <sol:storageLocate>memory</sol:storageLocate>
                    <sol:valueIs>bytes(_c)</sol:valueIs>
                    <sol:nameIs>_bc</sol:nameIs>
                    <sol:typeName>bytes</sol:typeName>
                  </sol:StateVar>
                </sol:before>
                <sol:storageLocate>memory</sol:storageLocate>
                <sol:valueIs>bytes(_d)</sol:valueIs>
                <sol:nameIs>_bd</sol:nameIs>
                <sol:typeName>bytes</sol:typeName>
              </sol:StateVar>
            </sol:before>
            <sol:storageLocate>memory</sol:storageLocate>
            <sol:valueIs>bytes(_e)</sol:valueIs>
            <sol:nameIs>_be</sol:nameIs>
            <sol:typeName>bytes</sol:typeName>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._d.L570*C24681">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_d</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasFor>
          <sol:FunctionFor rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for.for_i_0i__bb.lengthi___babcde_k_____bb_i_.L580*C25097">
            <sol:conditionStep>i++</sol:conditionStep>
            <sol:hasForCondition>
              <sol:ForCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.i__bb.length.L580*C25097">
                <sol:conditionValue>_bb.length</sol:conditionValue>
                <sol:conditionSymbol>&lt;</sol:conditionSymbol>
              </sol:ForCondition>
            </sol:hasForCondition>
            <sol:conditionVar>i</sol:conditionVar>
            <sol:hasStateVar>
              <sol:stateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.i_0;.L580*C25097">
                <sol:valueIs>0</sol:valueIs>
                <sol:nameIs>i</sol:nameIs>
                <sol:typeName>null</sol:typeName>
              </sol:stateVar>
            </sol:hasStateVar>
            <sol:containAssignment>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.babcde_k_____bb_i_.L580*C25130">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for.for_i_0i__bb.lengthi___babcde_k_____bb_i_.L580*C25097"/>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>_bb[i]</sol:assignRight>
                <sol:assignLeft>babcde[k++]</sol:assignLeft>
              </sol:Assignment>
            </sol:containAssignment>
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.babcde_k_____ba_i_.L579*C25074">
                <sol:before>
                  <sol:FunctionFor rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for.for_uinti_0i__ba.lengthi___babcde_k_____ba_i_.L579*C25036">
                    <sol:conditionStep>i++</sol:conditionStep>
                    <sol:hasForCondition>
                      <sol:ForCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.i__ba.length.L579*C25036">
                        <sol:conditionValue>_ba.length</sol:conditionValue>
                        <sol:conditionSymbol>&lt;</sol:conditionSymbol>
                      </sol:ForCondition>
                    </sol:hasForCondition>
                    <sol:conditionVar>i</sol:conditionVar>
                    <sol:hasStateVar>
                      <sol:stateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.uinti.L579*C25036">
                        <sol:valueIs>0</sol:valueIs>
                        <sol:nameIs>i</sol:nameIs>
                        <sol:typeName>uint</sol:typeName>
                      </sol:stateVar>
                    </sol:hasStateVar>
                    <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.babcde_k_____ba_i_.L579*C25074"/>
                    <sol:before>
                      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintk.L578*C25023">
                        <sol:before>
                          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemorybabcde.L577*C24986">
                            <sol:before>
                              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.stringmemoryabcde.L576*C24887">
                                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemory_be.L575*C24856"/>
                                <sol:storageLocate>memory</sol:storageLocate>
                                <sol:valueIs>newstring(_ba.length+_bb.length+_bc.length+_bd.length+_be.length)</sol:valueIs>
                                <sol:nameIs>abcde</sol:nameIs>
                                <sol:typeName>string</sol:typeName>
                              </sol:StateVar>
                            </sol:before>
                            <sol:storageLocate>memory</sol:storageLocate>
                            <sol:valueIs>bytes(abcde)</sol:valueIs>
                            <sol:nameIs>babcde</sol:nameIs>
                            <sol:typeName>bytes</sol:typeName>
                          </sol:StateVar>
                        </sol:before>
                        <sol:valueIs>0</sol:valueIs>
                        <sol:nameIs>k</sol:nameIs>
                        <sol:typeName>uint</sol:typeName>
                      </sol:StateVar>
                    </sol:before>
                  </sol:FunctionFor>
                </sol:before>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>_ba[i]</sol:assignRight>
                <sol:assignLeft>babcde[k++]</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
          </sol:FunctionFor>
        </sol:hasFor>
        <sol:hasFor>
          <sol:FunctionFor rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for.for_i_0i__be.lengthi___babcde_k_____be_i_.L583*C25265">
            <sol:conditionStep>i++</sol:conditionStep>
            <sol:hasForCondition>
              <sol:ForCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.i__be.length.L583*C25265">
                <sol:conditionValue>_be.length</sol:conditionValue>
                <sol:conditionSymbol>&lt;</sol:conditionSymbol>
              </sol:ForCondition>
            </sol:hasForCondition>
            <sol:conditionVar>i</sol:conditionVar>
            <sol:hasStateVar>
              <sol:stateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.i_0;.L583*C25265">
                <sol:valueIs>0</sol:valueIs>
                <sol:nameIs>i</sol:nameIs>
                <sol:typeName>null</sol:typeName>
              </sol:stateVar>
            </sol:hasStateVar>
            <sol:containAssignment>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.babcde_k_____be_i_.L583*C25298">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for.for_i_0i__be.lengthi___babcde_k_____be_i_.L583*C25265"/>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>_be[i]</sol:assignRight>
                <sol:assignLeft>babcde[k++]</sol:assignLeft>
              </sol:Assignment>
            </sol:containAssignment>
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.babcde_k_____bd_i_.L582*C25242">
                <sol:before>
                  <sol:FunctionFor rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for.for_i_0i__bd.lengthi___babcde_k_____bd_i_.L582*C25209">
                    <sol:conditionStep>i++</sol:conditionStep>
                    <sol:hasForCondition>
                      <sol:ForCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.i__bd.length.L582*C25209">
                        <sol:conditionValue>_bd.length</sol:conditionValue>
                        <sol:conditionSymbol>&lt;</sol:conditionSymbol>
                      </sol:ForCondition>
                    </sol:hasForCondition>
                    <sol:conditionVar>i</sol:conditionVar>
                    <sol:hasStateVar>
                      <sol:stateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.i_0;.L582*C25209">
                        <sol:valueIs>0</sol:valueIs>
                        <sol:nameIs>i</sol:nameIs>
                        <sol:typeName>null</sol:typeName>
                      </sol:stateVar>
                    </sol:hasStateVar>
                    <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.babcde_k_____bd_i_.L582*C25242"/>
                    <sol:before>
                      <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.babcde_k_____bc_i_.L581*C25186">
                        <sol:before>
                          <sol:FunctionFor rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for.for_i_0i__bc.lengthi___babcde_k_____bc_i_.L581*C25153">
                            <sol:conditionStep>i++</sol:conditionStep>
                            <sol:hasForCondition>
                              <sol:ForCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.i__bc.length.L581*C25153">
                                <sol:conditionValue>_bc.length</sol:conditionValue>
                                <sol:conditionSymbol>&lt;</sol:conditionSymbol>
                              </sol:ForCondition>
                            </sol:hasForCondition>
                            <sol:conditionVar>i</sol:conditionVar>
                            <sol:hasStateVar>
                              <sol:stateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#4_con_fun_for_conditionExpr.i_0;.L581*C25153">
                                <sol:valueIs>0</sol:valueIs>
                                <sol:nameIs>i</sol:nameIs>
                                <sol:typeName>null</sol:typeName>
                              </sol:stateVar>
                            </sol:hasStateVar>
                            <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.babcde_k_____bc_i_.L581*C25186"/>
                            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.babcde_k_____bb_i_.L580*C25130"/>
                          </sol:FunctionFor>
                        </sol:before>
                        <sol:assignSymbol>=</sol:assignSymbol>
                        <sol:assignRight>_bc[i]</sol:assignRight>
                        <sol:assignLeft>babcde[k++]</sol:assignLeft>
                      </sol:Assignment>
                    </sol:before>
                  </sol:FunctionFor>
                </sol:before>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>_bd[i]</sol:assignRight>
                <sol:assignLeft>babcde[k++]</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
          </sol:FunctionFor>
        </sol:hasFor>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemory_bd.L574*C24825"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemory_bc.L573*C24794"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._c.L570*C24670">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_c</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L570*C24712">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.string.L570*C24721">
                <sol:typeName>string</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.stringmemoryabcde.L576*C24887"/>
        <sol:hasFor rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for.for_i_0i__bd.lengthi___babcde_k_____bd_i_.L582*C25209"/>
        <sol:hasFor rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for.for_i_0i__bc.lengthi___babcde_k_____bc_i_.L581*C25153"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintk.L578*C25023"/>
        <sol:nameIs>strConcat</sol:nameIs>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._e.L570*C24692">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_e</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemory_bb.L572*C24763"/>
        <sol:hasFor rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_for.for_uinti_0i__ba.lengthi___babcde_k_____ba_i_.L579*C25036"/>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.string_babcde_.L584*C25321">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.babcde_k_____be_i_.L583*C25298"/>
            <sol:returnText>string(babcde)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemorybabcde.L577*C24986"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._a.L570*C24648">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_a</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemory_ba.L571*C24732"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._b.L570*C24659">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_b</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.oraclize.L58*C2961">
        <sol:typeName>OraclizeI</sol:typeName>
        <sol:nameIs>oraclize</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L178*C9027">
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintprice.L179*C9144">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L178*C9027"/>
            <sol:valueIs>oraclize.getPrice(datasource,gaslimit)</sol:valueIs>
            <sol:nameIs>price</sol:nameIs>
            <sol:typeName>uint</sol:typeName>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.gaslimit.L178*C9085">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>gaslimit</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:nameIs>oraclize_query</sol:nameIs>
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemoryargs.L181*C9281">
            <sol:before>
              <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.0.L180*C9243">
                <sol:before>
                  <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L180*C9199">
                    <sol:hasReturnValue rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.0.L180*C9243"/>
                    <sol:before>
                      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.price_1ether_tx.gasprice_gaslimit.L180*C9199">
                        <sol:before>
                          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.price_1ether_tx.gasprice_gaslimit.L180*C9199">
                            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L180*C9199"/>
                            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintprice.L179*C9144"/>
                            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.price_1ether_tx.gasprice_gaslimit.L180*C9199"/>
                          </sol:FunctionIf>
                        </sol:before>
                        <sol:hasIfCondition>price&gt;1ether+tx.gasprice*gaslimit</sol:hasIfCondition>
                      </sol:IfCondition>
                    </sol:before>
                  </sol:IfRight>
                </sol:before>
                <sol:returnText>0</sol:returnText>
              </sol:ReturnValue>
            </sol:before>
            <sol:storageLocate>memory</sol:storageLocate>
            <sol:valueIs>stra2cbor(argN)</sol:valueIs>
            <sol:nameIs>args</sol:nameIs>
            <sol:typeName>bytes</sol:typeName>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L178*C9051">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L178*C9121">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.id.L178*C9130">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.price_1ether_tx.gasprice_gaslimit.L180*C9199"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.argN.L178*C9070">
            <sol:typeName>string[]</sol:typeName>
            <sol:nameIs>argN</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize.queryN_withGasLimit.value_price__0_datasource_args_gaslimit_.L182*C9319">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytesmemoryargs.L181*C9281"/>
            <sol:returnText>oraclize.queryN_withGasLimit.value(price)(0,datasource,args,gaslimit)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L150*C7212">
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintprice.L151*C7356">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L150*C7212"/>
            <sol:valueIs>oraclize.getPrice(datasource,gaslimit)</sol:valueIs>
            <sol:nameIs>price</sol:nameIs>
            <sol:typeName>uint</sol:typeName>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.gaslimit.L150*C7297">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>gaslimit</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L150*C7252">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasIf>
          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.price_1ether_tx.gasprice_gaslimit.L152*C7411">
            <sol:hasIfRight>
              <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L152*C7411">
                <sol:hasReturnValue>
                  <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.0.L152*C7455">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L152*C7411"/>
                    <sol:returnText>0</sol:returnText>
                  </sol:ReturnValue>
                </sol:hasReturnValue>
                <sol:before>
                  <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.price_1ether_tx.gasprice_gaslimit.L152*C7411">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.price_1ether_tx.gasprice_gaslimit.L152*C7411"/>
                    <sol:hasIfCondition>price&gt;1ether+tx.gasprice*gaslimit</sol:hasIfCondition>
                  </sol:IfCondition>
                </sol:before>
              </sol:IfRight>
            </sol:hasIfRight>
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintprice.L151*C7356"/>
            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.price_1ether_tx.gasprice_gaslimit.L152*C7411"/>
          </sol:FunctionIf>
        </sol:hasIf>
        <sol:nameIs>oraclize_query</sol:nameIs>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize.query2_withGasLimit.value_price__timestamp_datasource_arg1_arg2_gaslimit_.L153*C7493">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.0.L152*C7455"/>
            <sol:returnText>oraclize.query2_withGasLimit.value(price)(timestamp,datasource,arg1,arg2,gaslimit)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.timestamp.L150*C7236">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>timestamp</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.arg1.L150*C7271">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>arg1</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L150*C7333">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.id.L150*C7342">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.arg2.L150*C7284">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>arg2</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L353*C16884">
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes__memorydynargs.L354*C17003">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L353*C16884"/>
            <sol:storageLocate>memory</sol:storageLocate>
            <sol:valueIs>newbytes[](1)</sol:valueIs>
            <sol:nameIs>dynargs</sol:nameIs>
            <sol:typeName>bytes[]</sol:typeName>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:nameIs>oraclize_query</sol:nameIs>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L353*C16924">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize_query_timestamp_datasource_dynargs_.L356*C17068">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L355*C17045">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes__memorydynargs.L354*C17003"/>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>args[0]</sol:assignRight>
                <sol:assignLeft>dynargs[0]</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:returnText>oraclize_query(timestamp,datasource,dynargs)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L353*C16979">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.id.L353*C16988">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L355*C17045"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.args.L353*C16943">
            <sol:typeName>bytes[1]</sol:typeName>
            <sol:nameIs>args</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.timestamp.L353*C16908">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>timestamp</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L222*C11189">
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.gaslimit.L222*C11248">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>gaslimit</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_1__args_1_.L225*C11375">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L224*C11352">
                <sol:before>
                  <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.string__memorydynargs.L223*C11308">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L222*C11189"/>
                    <sol:storageLocate>memory</sol:storageLocate>
                    <sol:valueIs>newstring[](2)</sol:valueIs>
                    <sol:nameIs>dynargs</sol:nameIs>
                    <sol:typeName>string[]</sol:typeName>
                  </sol:StateVar>
                </sol:before>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>args[0]</sol:assignRight>
                <sol:assignLeft>dynargs[0]</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>args[1]</sol:assignRight>
            <sol:assignLeft>dynargs[1]</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize_query_datasource_dynargs_gaslimit_.L226*C11398">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_1__args_1_.L225*C11375"/>
            <sol:returnText>oraclize_query(datasource,dynargs,gaslimit)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L222*C11284">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.id.L222*C11293">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L224*C11352"/>
        <sol:nameIs>oraclize_query</sol:nameIs>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.args.L222*C11232">
            <sol:typeName>string[2]</sol:typeName>
            <sol:nameIs>args</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.string__memorydynargs.L223*C11308"/>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L222*C11213">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L288*C13876">
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L288*C13956">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.id.L288*C13965">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_4__args_4_.L294*C14116">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_3__args_3_.L293*C14093">
                <sol:before>
                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_2__args_2_.L292*C14070">
                    <sol:before>
                      <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_1__args_1_.L291*C14047">
                        <sol:before>
                          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L290*C14024">
                            <sol:before>
                              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.string__memorydynargs.L289*C13980">
                                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L288*C13876"/>
                                <sol:storageLocate>memory</sol:storageLocate>
                                <sol:valueIs>newstring[](5)</sol:valueIs>
                                <sol:nameIs>dynargs</sol:nameIs>
                                <sol:typeName>string[]</sol:typeName>
                              </sol:StateVar>
                            </sol:before>
                            <sol:assignSymbol>=</sol:assignSymbol>
                            <sol:assignRight>args[0]</sol:assignRight>
                            <sol:assignLeft>dynargs[0]</sol:assignLeft>
                          </sol:Assignment>
                        </sol:before>
                        <sol:assignSymbol>=</sol:assignSymbol>
                        <sol:assignRight>args[1]</sol:assignRight>
                        <sol:assignLeft>dynargs[1]</sol:assignLeft>
                      </sol:Assignment>
                    </sol:before>
                    <sol:assignSymbol>=</sol:assignSymbol>
                    <sol:assignRight>args[2]</sol:assignRight>
                    <sol:assignLeft>dynargs[2]</sol:assignLeft>
                  </sol:Assignment>
                </sol:before>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>args[3]</sol:assignRight>
                <sol:assignLeft>dynargs[3]</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>args[4]</sol:assignRight>
            <sol:assignLeft>dynargs[4]</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:nameIs>oraclize_query</sol:nameIs>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_3__args_3_.L293*C14093"/>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_2__args_2_.L292*C14070"/>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L290*C14024"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.string__memorydynargs.L289*C13980"/>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.args.L288*C13919">
            <sol:typeName>string[5]</sol:typeName>
            <sol:nameIs>args</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize_query_datasource_dynargs_.L295*C14139">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_4__args_4_.L294*C14116"/>
            <sol:returnText>oraclize_query(datasource,dynargs)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L288*C13900">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_1__args_1_.L291*C14047"/>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L470*C21735">
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.args.L470*C21794">
            <sol:typeName>bytes[5]</sol:typeName>
            <sol:nameIs>args</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_4__args_4_.L476*C22003">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_3__args_3_.L475*C21980">
                <sol:before>
                  <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_2__args_2_.L474*C21957">
                    <sol:before>
                      <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_1__args_1_.L473*C21934">
                        <sol:before>
                          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L472*C21911">
                            <sol:before>
                              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes__memorydynargs.L471*C21869">
                                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L470*C21735"/>
                                <sol:storageLocate>memory</sol:storageLocate>
                                <sol:valueIs>newbytes[](5)</sol:valueIs>
                                <sol:nameIs>dynargs</sol:nameIs>
                                <sol:typeName>bytes[]</sol:typeName>
                              </sol:StateVar>
                            </sol:before>
                            <sol:assignSymbol>=</sol:assignSymbol>
                            <sol:assignRight>args[0]</sol:assignRight>
                            <sol:assignLeft>dynargs[0]</sol:assignLeft>
                          </sol:Assignment>
                        </sol:before>
                        <sol:assignSymbol>=</sol:assignSymbol>
                        <sol:assignRight>args[1]</sol:assignRight>
                        <sol:assignLeft>dynargs[1]</sol:assignLeft>
                      </sol:Assignment>
                    </sol:before>
                    <sol:assignSymbol>=</sol:assignSymbol>
                    <sol:assignRight>args[2]</sol:assignRight>
                    <sol:assignLeft>dynargs[2]</sol:assignLeft>
                  </sol:Assignment>
                </sol:before>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>args[3]</sol:assignRight>
                <sol:assignLeft>dynargs[3]</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>args[4]</sol:assignRight>
            <sol:assignLeft>dynargs[4]</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.gaslimit.L470*C21809">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>gaslimit</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.timestamp.L470*C21759">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>timestamp</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L470*C21845">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.id.L470*C21854">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L472*C21911"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L470*C21775">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_3__args_3_.L475*C21980"/>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize_query_timestamp_datasource_dynargs_gaslimit_.L477*C22026">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_4__args_4_.L476*C22003"/>
            <sol:returnText>oraclize_query(timestamp,datasource,dynargs,gaslimit)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes__memorydynargs.L471*C21869"/>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_2__args_2_.L474*C21957"/>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_1__args_1_.L473*C21934"/>
        <sol:nameIs>oraclize_query</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L368*C17636">
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L368*C17715">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.id.L368*C17724">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:containAssignment>
          <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L370*C17781">
            <sol:before>
              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes__memorydynargs.L369*C17739">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L368*C17636"/>
                <sol:storageLocate>memory</sol:storageLocate>
                <sol:valueIs>newbytes[](2)</sol:valueIs>
                <sol:nameIs>dynargs</sol:nameIs>
                <sol:typeName>bytes[]</sol:typeName>
              </sol:StateVar>
            </sol:before>
            <sol:assignSymbol>=</sol:assignSymbol>
            <sol:assignRight>args[0]</sol:assignRight>
            <sol:assignLeft>dynargs[0]</sol:assignLeft>
          </sol:Assignment>
        </sol:containAssignment>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:nameIs>oraclize_query</sol:nameIs>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize_query_datasource_dynargs_.L372*C17827">
            <sol:before>
              <sol:Assignment rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_1__args_1_.L371*C17804">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_0__args_0_.L370*C17781"/>
                <sol:assignSymbol>=</sol:assignSymbol>
                <sol:assignRight>args[1]</sol:assignRight>
                <sol:assignLeft>dynargs[1]</sol:assignLeft>
              </sol:Assignment>
            </sol:before>
            <sol:returnText>oraclize_query(datasource,dynargs)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.args.L368*C17679">
            <sol:typeName>bytes[2]</sol:typeName>
            <sol:nameIs>args</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L368*C17660">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:containAssignment rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprAssign.dynargs_1__args_1_.L371*C17804"/>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.bytes__memorydynargs.L369*C17739"/>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasStateVar>
      <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con_sv.OAR.L57*C2933">
        <sol:typeName>OraclizeAddrResolverI</sol:typeName>
        <sol:nameIs>OAR</sol:nameIs>
      </sol:StateVar>
    </sol:hasStateVar>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.strConcat.L589*C25482">
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.strConcat__a__b__c_&quot;&quot;_&quot;&quot;_.L590*C25563">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.strConcat.L589*C25482"/>
            <sol:returnText>strConcat(_a,_b,_c,"","")</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L589*C25543">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.string.L589*C25552">
                <sol:typeName>string</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._c.L589*C25523">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_c</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._b.L589*C25512">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_b</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param._a.L589*C25501">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>_a</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>strConcat</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_getPrice.L117*C5141">
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize.getPrice_datasource_gaslimit_.L118*C5240">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_getPrice.L117*C5141"/>
            <sol:returnText>oraclize.getPrice(datasource,gaslimit)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L117*C5223">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.uint.L117*C5232">
                <sol:typeName>uint</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.gaslimit.L117*C5187">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>gaslimit</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L117*C5168">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>oraclize_getPrice</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L125*C5576">
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L125*C5668">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.id.L125*C5677">
                <sol:typeName>bytes32</sol:typeName>
                <sol:nameIs>id</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.datasource.L125*C5616">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>datasource</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize.query.value_price__timestamp_datasource_arg_.L128*C5816">
            <sol:before>
              <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.0.L127*C5778">
                <sol:before>
                  <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L127*C5736">
                    <sol:hasReturnValue rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.0.L127*C5778"/>
                    <sol:before>
                      <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.price_1ether_tx.gasprice_200000.L127*C5736">
                        <sol:before>
                          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.price_1ether_tx.gasprice_200000.L127*C5736">
                            <sol:hasIfRight rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L127*C5736"/>
                            <sol:before>
                              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintprice.L126*C5691">
                                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_query.L125*C5576"/>
                                <sol:valueIs>oraclize.getPrice(datasource)</sol:valueIs>
                                <sol:nameIs>price</sol:nameIs>
                                <sol:typeName>uint</sol:typeName>
                              </sol:StateVar>
                            </sol:before>
                            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.price_1ether_tx.gasprice_200000.L127*C5736"/>
                          </sol:FunctionIf>
                        </sol:before>
                        <sol:hasIfCondition>price&gt;1ether+tx.gasprice*200000</sol:hasIfCondition>
                      </sol:IfCondition>
                    </sol:before>
                  </sol:IfRight>
                </sol:before>
                <sol:returnText>0</sol:returnText>
              </sol:ReturnValue>
            </sol:before>
            <sol:returnText>oraclize.query.value(price)(timestamp,datasource,arg)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uintprice.L126*C5691"/>
        <sol:hasIf rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.price_1ether_tx.gasprice_200000.L127*C5736"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.arg.L125*C5635">
            <sol:typeName>string</sol:typeName>
            <sol:nameIs>arg</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:nameIs>oraclize_query</sol:nameIs>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.timestamp.L125*C5600">
            <sol:typeName>uint</sol:typeName>
            <sol:nameIs>timestamp</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasModifier>internal</sol:hasModifier>
      </sol:Function>
    </sol:hasFunction>
    <sol:nameIs>usingOraclize</sol:nameIs>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_setProof.L491*C22532">
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.oraclize.setProofType_proofP_.L492*C22596">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.oraclize_setProof.L491*C22532"/>
            <sol:returnText>oraclize.setProofType(proofP)</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasModifier>oraclizeAPI</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.proofP.L491*C22559">
            <sol:typeName>byte</sol:typeName>
            <sol:nameIs>proofP</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>oraclize_setProof</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
  </sol:Contract>
  <sol:Contract rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con.OraclizeAddrResolverI.L39*C2283">
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.getAddress.L40*C2317">
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L40*C2339">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param._addr.L40*C2348">
                <sol:typeName>address</sol:typeName>
                <sol:nameIs>_addr</sol:nameIs>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:nameIs>getAddress</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:nameIs>OraclizeAddrResolverI</sol:nameIs>
  </sol:Contract>
  <sol:Library rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_con.SafeMath.L1237*C50941">
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.add.L1268*C51767">
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.a.L1268*C51780">
            <sol:typeName>uint256</sol:typeName>
            <sol:nameIs>a</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasStateVar>
          <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uint256c.L1269*C51837">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.add.L1268*C51767"/>
            <sol:valueIs>a+b</sol:valueIs>
            <sol:nameIs>c</sol:nameIs>
            <sol:typeName>uint256</sol:typeName>
          </sol:StateVar>
        </sol:hasStateVar>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.b.L1268*C51791">
            <sol:typeName>uint256</sol:typeName>
            <sol:nameIs>b</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>add</sol:nameIs>
        <sol:hasModifier>pure</sol:hasModifier>
        <sol:callFunction>
          <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.assert.L1270*C51857">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uint256c.L1269*C51837"/>
            <sol:callFunctionArgument>c&gt;=a</sol:callFunctionArgument>
            <sol:callFunctionName>assert</sol:callFunctionName>
          </sol:FunctionCall>
        </sol:callFunction>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.c.L1271*C51874">
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.assert.L1270*C51857"/>
            <sol:returnText>c</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L1268*C51816">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.uint256.L1268*C51825">
                <sol:typeName>uint256</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.sub.L1261*C51608">
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.a-b.L1263*C51695">
            <sol:before>
              <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.assert.L1262*C51678">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.sub.L1261*C51608"/>
                <sol:callFunctionArgument>b&lt;=a</sol:callFunctionArgument>
                <sol:callFunctionName>assert</sol:callFunctionName>
              </sol:FunctionCall>
            </sol:before>
            <sol:returnText>a-b</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.assert.L1262*C51678"/>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L1261*C51657">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.uint256.L1261*C51666">
                <sol:typeName>uint256</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasModifier>pure</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.b.L1261*C51632">
            <sol:typeName>uint256</sol:typeName>
            <sol:nameIs>b</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.a.L1261*C51621">
            <sol:typeName>uint256</sol:typeName>
            <sol:nameIs>a</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>sub</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.div.L1252*C51249">
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.c.L1256*C51489">
            <sol:before>
              <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uint256c.L1254*C51390">
                <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.div.L1252*C51249"/>
                <sol:valueIs>a/b</sol:valueIs>
                <sol:nameIs>c</sol:nameIs>
                <sol:typeName>uint256</sol:typeName>
              </sol:StateVar>
            </sol:before>
            <sol:returnText>c</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uint256c.L1254*C51390"/>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L1252*C51298">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.uint256.L1252*C51307">
                <sol:typeName>uint256</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasModifier>pure</sol:hasModifier>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.b.L1252*C51273">
            <sol:typeName>uint256</sol:typeName>
            <sol:nameIs>b</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.a.L1252*C51262">
            <sol:typeName>uint256</sol:typeName>
            <sol:nameIs>a</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:nameIs>div</sol:nameIs>
      </sol:Function>
    </sol:hasFunction>
    <sol:hasFunction>
      <sol:Function rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.mul.L1241*C51021">
        <sol:nameIs>mul</sol:nameIs>
        <sol:hasModifier>pure</sol:hasModifier>
        <sol:hasIf>
          <sol:FunctionIf rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.a__0.L1242*C51091">
            <sol:hasIfRight>
              <sol:IfRight rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L1242*C51091">
                <sol:hasReturnValue>
                  <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.0.L1243*C51106">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight._.L1242*C51091"/>
                    <sol:returnText>0</sol:returnText>
                  </sol:ReturnValue>
                </sol:hasReturnValue>
                <sol:before>
                  <sol:IfCondition rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.a__0.L1242*C51091">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#2_con_fun_if.a__0.L1242*C51091"/>
                    <sol:hasIfCondition>a==0</sol:hasIfCondition>
                  </sol:IfCondition>
                </sol:before>
              </sol:IfRight>
            </sol:hasIfRight>
            <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun.mul.L1241*C51021"/>
            <sol:hasIfCondition rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if.a__0.L1242*C51091"/>
          </sol:FunctionIf>
        </sol:hasIf>
        <sol:hasReturnClaim>
          <sol:ReturnClaim rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim..L1241*C51070">
            <sol:hasParam>
              <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_returnClaim_param.uint256.L1241*C51079">
                <sol:typeName>uint256</sol:typeName>
              </sol:Param>
            </sol:hasParam>
          </sol:ReturnClaim>
        </sol:hasReturnClaim>
        <sol:hasModifier>internal</sol:hasModifier>
        <sol:hasReturnValue>
          <sol:ReturnValue rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_return.c.L1247*C51161">
            <sol:before>
              <sol:FunctionCall rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.assert.L1246*C51140">
                <sol:before>
                  <sol:StateVar rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uint256c.L1245*C51120">
                    <sol:before rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_fun_if_ifRight_return.0.L1243*C51106"/>
                    <sol:valueIs>a*b</sol:valueIs>
                    <sol:nameIs>c</sol:nameIs>
                    <sol:typeName>uint256</sol:typeName>
                  </sol:StateVar>
                </sol:before>
                <sol:callFunctionArgument>c/a==b</sol:callFunctionArgument>
                <sol:callFunctionName>assert</sol:callFunctionName>
              </sol:FunctionCall>
            </sol:before>
            <sol:returnText>c</sol:returnText>
          </sol:ReturnValue>
        </sol:hasReturnValue>
        <sol:hasStateVar rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_varDeclare.uint256c.L1245*C51120"/>
        <sol:callFunction rdf:resource="http://www.hty.group/tf/ontologies/2020/07/Solildity#3_con_func_exprFc.assert.L1246*C51140"/>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.b.L1241*C51045">
            <sol:typeName>uint256</sol:typeName>
            <sol:nameIs>b</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
        <sol:hasParam>
          <sol:Param rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#1_con_fun_param.a.L1241*C51034">
            <sol:typeName>uint256</sol:typeName>
            <sol:nameIs>a</sol:nameIs>
          </sol:Param>
        </sol:hasParam>
      </sol:Function>
    </sol:hasFunction>
    <sol:nameIs>SafeMath</sol:nameIs>
  </sol:Library>
  <sol:Pragma rdf:about="http://www.hty.group/tf/ontologies/2020/07/Solildity#0_pragma.0.4.20.L1*C0">
    <sol:pragmaValue>0.4.20</sol:pragmaValue>
    <sol:pragmaName>solidity</sol:pragmaName>
  </sol:Pragma>
</rdf:RDF>
